# Create a web app for {% $cv-shared-variables.entra-id-long %}

This topic describes how to add a web app for
{% $cv-shared-variables.entra-id-long %}
(previously Azure AD) to enable access from
{% $cc_product_vars.Identity-full %}.

## []{#Before}Before you begin

The sections below assume that
{% $cv-shared-variables.entra-id-long %}
has already been onboarded to
{% $cc_product_vars.CEM-short %}.
If you have not yet onboarded
{% $cv-shared-variables.entra-id-long %},
do so before you add the web app. For details, see
`<xref href="../CloudAdmin/cv-onboard-azure.htm">`{=html}Add Azure -
\[%=cv-shared-variables.entra-id-long%\]`</xref>`{=html}.

## []{#Configur}[]{#CreateawebappforMicrosoftEntraID1}Create a web app for {% $cv-shared-variables.entra-id-long %}

You can create web apps for
{% $cv-shared-variables.entra-id-long %}
in one of the following ways:

+----------------------------------+----------------------------------+
| Option                           | Description                      |
+==================================+==================================+
| SCA (simplified)                 | In                               |
|                                  | `<variabl                        |
|                                  | e name="cc_product_vars.SCA-shor |
|                                  | t">`{=html}`</variable>`{=html}, |
|                                  | you provide a few details about  |
|                                  | `<variable name="                |
|                                  | cv-shared-variables.entra-id-lon |
|                                  | g">`{=html}`</variable>`{=html}, |
|                                  | and                              |
|                                  | `<variab                         |
|                                  | le name="cc_product_vars.SCA-sho |
|                                  | rt">`{=html}`</variable>`{=html} |
|                                  | automatically creates and        |
|                                  | configures the web app for you.  |
|                                  |                                  |
|                                  | ::: note                         |
|                                  | Depending on your selections     |
|                                  | during this process, you may     |
|                                  | need to configure a few more     |
|                                  | things.                          |
|                                  | :::                              |
+----------------------------------+----------------------------------+
| `<variable name="                | In                               |
| cc_product_vars.IdentityAdmin-fu | `<variable name="c               |
| ll">`{=html}`</variable>`{=html} | c_product_vars.IdentityAdmin-ful |
|                                  | l">`{=html}`</variable>`{=html}, |
|                                  | you create and configure the web |
|                                  | app from scratch.                |
|                                  |                                  |
|                                  |                                  |
+----------------------------------+----------------------------------+

:::::::::: tabs
- [{% $cc_product_vars.SCA-short %}
  (simplified)]{cc-tab=".tab-1"}
- [{% $cc_product_vars.IdentityAdmin-full %}]{cc-tab=".tab-2"}

::::::::: tabs-stage
:::::: tab-1
Tab 1 Content -
{% $cc_product_vars.SCA-short %}

This section describes how to use
{% $cc_product_vars.SCA-short %}
to create a web app for
{% $cv-shared-variables.entra-id-long %}.

::::: {madcap:conditions="SCA-conditions.not-free-trial"}
:::: wistia_wrapper
4zgae6wwfi

::: wistia_embed
:::
::::
:::::

1.  [Configure the directory service for your custom domain]{.Emphasis}

    In this step, you provision your organization\'s users from
    {% $cv-shared-variables.entra-id-long %}
    directory to
    {% $cc_product_vars.Identity-full %}.

    1.  Add users to
        {% $cv-shared-variables.entra-id-long %}
        as described in [Add Azure Active Directory
        (\[%=cv-shared-variables.entra-id-long%\]) as a directory
        service](/identity-administration/latest/en/content/coreservices/usersroles/add-azuread.htm){target="_blank"}.

    2.  Your users must exist in both
        {% $cv-shared-variables.entra-id-long %}
        and
        {% $cc_product_vars.Identity-full %}.
        Provision the users from
        {% $cv-shared-variables.entra-id-long %}
        to
        {% $cc_product_vars.Identity-full %}
        as described in [Invite users to access CyberArk
        Identity](/identity/latest/en/content/getstarted/invite-users.htm){target="_blank"
        alt="link to specific section in topic about inviting users"}.

2.  [Create the web app]{.Emphasis}

    In this step, you create the web app for
    {% $cv-shared-variables.entra-id-long %}
    in
    {% $cc_product_vars.SCA-short %}.

    1.  In
        {% $cc_product_vars.SCA-short %},
        go to the Introduction page.

        In the
        {% $cc_C_CyberArk.CompanyName %}
        Admin portal, select [Cloud connectivity \> Configure cloud
        provider apps]{.Emphasis}.

    2.  In the second tile, click [+ Create a web app]{.Emphasis}.

    3.  In the dialog box that opens click [Azure]{.Emphasis}, and click
        [Next]{.Emphasis}.

    4.  Enter a name for the web app (up to 50 characters) that will
        help you identify it in
        {% $cc_product_vars.Identity-full %}.

        The default name is [Microsoft Azure Portal]{.Emphasis}.

    5.  Select the
        {% $cv-shared-variables.entra-id-long %}
        directory.

        ::: note
        - It may take some time for the directories to display.

        - If your directory doesn\'t appear, this means that it hasn\'t
          been onboarded to
          {% $cc_product_vars.CEM-short %}.
          For details about onboarding directories, see
          `<xref href="../CloudAdmin/cv-onboard-azure.htm#Discover">`{=html}Onboard
          a new directory`</xref>`{=html}.
        :::

    6.  Click [Create]{.Emphasis}.

        `<snippetblock src="SCA-snippets/asynch-discovery-in-background.flsnp">`{=html}`</snippetblock>`{=html}

    ::: note
    `<snippetblock src="SCA-snippets/ready-to-deploy.flsnp">`{=html}`</snippetblock>`{=html}
    :::

3.  []{#Configur2}Configure the app registration in Microsoft Azure

    In this step, you register the
    {% $cv-shared-variables.entra-id-long %}
    web app in
    {% $sca-project-variables.Azure %}.

    Go to the Azure portal and complete the application registration
    process, as described in [Configure app registration in the
    Microsoft Azure
    Portal](/identity/latest/en/content/applications/appsweb/azure_portal_sso.htm#ConfigApRegAzure "link to 14-step procedure for Azure web app"){target="_blank"
    alt="link to 14-step procedure for Azure web app"} (steps 1-12).
    When you do [step 7]{.Emphasis} (adding permissions):

    - If your IdP is [NOT
      {% $cc_product_vars.Identity-full %}]{.Emphasis},
      add the [User.ReadWrite.All]{.Emphasis} permission only

    - If your IdP is
      {% $cc_product_vars.Identity-full %},
      add [all ]{.Emphasis}the listed permissions

    ::: important
    Make sure to note down the [Account (Client) ID]{.Emphasis},
    [Directory (tenant) ID]{.Emphasis}, and [Client secret]{.Emphasis}
    as you will need these in the next step.
    :::

4.  Configure the web app

    In this step , you configure [token-based authentication]{.Emphasis}
    settings.

    In
    {% $cc_product_vars.IdentityAdmin-full %}:

    1.  Go to [Apps & Widgets \> Web Apps]{.Emphasis}.

    2.  Select the web app that you created for
        {% $cv-shared-variables.entra-id-long %}.

    3.  Under [Application Settings]{.Emphasis}, enter the following
        details, and click [Verify]{.Emphasis}.

          Azure application setting            Value
          ------------------------------------ ---------------------------------------------------------------------------------------------------------
          [Authentication method]{.Emphasis}   Token-based authentication
          [Directory ID]{.Emphasis}            Your tenant ID that you got from the Azure portal when you registered the app in Microsoft Azure above.
          [Client ID]{.Emphasis}               The application (client) ID that was created when you registered the app in Microsoft Azure above.

    4.  Click [Save]{.Emphasis}.

5.  Enable
    {% $cc_product_vars.SWS-full %}
    (Optional)

    `<snippetblock src="../CloudAdmin/CloudAdminSnippets/enable-sws-azure.flsnp">`{=html}`</snippetblock>`{=html}
::::::

:::: tab-2
Tab 2 Content -
{% $cc_product_vars.IdentityAdmin-full %}

[]{#Configur}This section describes how to create a web app for your
Azure directory from
{% $cc_product_vars.IdentityAdmin-full %}.

::: tip
You can also create web apps in
{% $cc_product_vars.SCA-short %}
where you provide only the minimum details and
{% $cc_product_vars.SCA-short %}
provides all the rest of the details. See
`<xref href="#Configur">`{=html}Create a web app for
\[%=cv-shared-variables.entra-id-long%\]`</xref>`{=html}.
:::

1.  [Configure the directory service for your custom domain]{.Emphasis}

    In this step you configure
    {% $cv-shared-variables.entra-id-long %}
    as both the user directory and the IdP

    1.  Add users to
        {% $cv-shared-variables.entra-id-long %}
        as described in [Add Azure Active Directory
        (\[%=cv-shared-variables.entra-id-long%\]) as a directory
        service](/identity-administration/latest/en/content/coreservices/usersroles/add-azuread.htm){target="_blank"}.

    2.  Your users must exist in both
        {% $cv-shared-variables.entra-id-long %}
        and
        {% $cc_product_vars.Identity-full %},
        and therefore have to be provisioned from
        {% $cv-shared-variables.entra-id-long %}
        to
        {% $cc_product_vars.Identity-full %}
        as described in [Invite users to access CyberArk
        Identity](/identity/latest/en/content/getstarted/invite-users.htm){target="_blank"
        alt="link to specific section in topic about inviting users"}.

    ::: {madcap:conditions="cc_C_CyberArk.Future"}
    You can use
    {% $cv-shared-variables.entra-id-long %},
    {% $cc_product_vars.Identity-full %},
    or a third-party provider as an IdP. The following use cases are
    supported:

      User directory                                                                     Identity provider
      ---------------------------------------------------------------------------------- ----------------------------------------------------------------------------------
      {% $cv-shared-variables.entra-id-long %}   {% cv-shared-variables.entra-id-long %}
      LDAP                                                                               {% $cc_product_vars.Identity-full %}
      LDAP                                                                               Third-party IdP
      {% $cv-shared-variables.entra-id-long %}   {% cc_product_vars.Identity-full %}
      {% $cv-shared-variables.entra-id-long %}   Third-party IdP

      : User directory use cases

    Follow the instructions in the tab that matches your use case.
    :::

    ::::::::::: {.tabs madcap:conditions="cc_C_CyberArk.Future"}
    - [{% $cv-shared-variables.entra-id-long %}[ð]{style="font-family: 'Wingdings'"}{% cv-shared-variables.entra-id-long %}]{cc-tab=".tab-1"}
    - [LDAP
      [ð]{style="font-family: 'Wingdings'"}{% $cc_product_vars.Identity-full %}
      or third-party IdP]{cc-tab=".tab-2"}
    - [{% $cv-shared-variables.entra-id-long %} [ð]{style="font-family: 'Wingdings'"}{% cc_product_vars.Identity-full %}
      or third-party IdP]{cc-tab=".tab-3"}
    - [Tab 4 Name]{cc-tab=".tab-4"}

    :::::::::: tabs-stage
    :::: tab-1
    Tab 1 Content - \<Azure AD-Azure AD\>

    ::: ProcedureHeading
    To configure
    {% $cv-shared-variables.entra-id-long %}
    as both the user directory and the IdP
    :::

    1.  Add users as described in [Add Azure Active Directory
        (\[%=cv-shared-variables.entra-id-long%\]) as a directory
        service](/identity-administration/latest/en/content/coreservices/usersroles/add-azuread.htm){target="_blank"}.

    2.  Your users must exist in both
        {% $cv-shared-variables.entra-id-long %}
        and
        {% $cc_product_vars.Identity-full %},
        and therefore have to be provisioned from
        {% $cv-shared-variables.entra-id-long %} to
        {% $cc_product_vars.Identity-full %}
        as described in [Invite users to access CyberArk
        Identity](/identity/latest/en/content/getstarted/invite-users.htm){target="_blank"
        alt="link to specific section in topic about inviting users"}.
    ::::

    :::: tab-2
    Tab 2 Content -
    \<LDAP-{% $cc_product_vars.Identity-full %}\>

    ::: ProcedureHeading
    To configure LDAP as the user directory and
    {% $cc_product_vars.Identity-full %}
    as the IdP
    :::

    1.  Add users as described in [Add LDAP as a directory
        service](/identity-administration/latest/en/content/coreservices/usersroles/add-ldap.htm){target="_blank"}.

    2.  Your users must exist in both
        {% $cc_product_vars.Identity-full %}
        and
        {% $cv-shared-variables.entra-id-long %},
        and therefore have to be provisioned from
        {% $cc_product_vars.Identity-full %} to
        {% $cv-shared-variables.entra-id-long %}
        as described in [the Azure
        docs](https://learn.microsoft.com/en-us/azure/devops/organizations/accounts/add-external-user?view=azure-devops "link to Azure DevOps topic about inviting external users"){target="_blank"
        alt="link to Azure DevOps topic about inviting external users"}.
    ::::

    :::: tab-3
    Tab 3 Content - \<Azure AD-3rd party IdP\>

    ::: ProcedureHeading
    To configure
    {% $cv-shared-variables.entra-id-long %}
    as the user directory and a third-party application as the IdP
    :::

    1.  Add users as described in [Add Azure Active Directory
        (\[%=cv-shared-variables.entra-id-long%\]) as a directory
        service](/identity-administration/latest/en/content/coreservices/usersroles/add-azuread.htm){target="_blank"}.

    2.  Configure the third-party application as an external IdP in
        {% $cc_product_vars.Identity-full %},
        for example Okta as described in [Federate with Okta using
        SAML](/identity-administration/latest/en/content/coreservices/usersroles/partnerokta.htm){target="_blank"}.

    3.  Your users must exist in both
        {% $cc_product_vars.Identity-full %}
        and
        {% $cv-shared-variables.entra-id-long %},
        and therefore have to be provisioned from
        {% $cc_product_vars.Identity-full %} to
        {% $cv-shared-variables.entra-id-long %}
        as described in [the Azure
        docs](https://learn.microsoft.com/en-us/azure/devops/organizations/accounts/add-external-user?view=azure-devops "link to Azure DevOps topic about inviting external users"){target="_blank"
        alt="link to Azure DevOps topic about inviting external users"}.

        ::: note
        This enables your organizational users to sign in to
        {% $cc_product_vars.Identity-full %}
        using their
        {% $cv-shared-variables.entra-id-long %}
        credentials.
        :::
    ::::

    ::: {.tab-4 madcap:conditions="cc_C_CyberArk.NOT_TO_PUBLISH"}
    Tab 4 Content - \<keyword\>

    \<replace with Tab4 content\>
    :::
    ::::::::::
    :::::::::::

2.  [Add the Azure application template and configure the
    settings]{.Emphasis}

    1.  Sign in to
        {% $cc_product_vars.IdentityAdmin-full %}.

    2.  Open the [Microsoft Azure Portal Single Sign-On (SSO)
        integration](/identity/latest/en/content/applications/appsweb/azure_portal_sso.htm#ConfiguretheAppNameapplicationtemplateintheIdentityAdministrationportal){target="_blank"
        alt="Instructions for configuring the Microsoft Azure application template for [%=cc_product_vars.Identity-full%]"}
        topic in the
        {% $cc_product_vars.Identity-full %}
        docs, which describes how to add and configure the Azure
        application template, and do only the following steps:

        1.  Follow the instructions in [Step 1: Add the AppName web
            application template]{.Emphasis}. For
            {% $cc_product_vars.SCA-short %},
            after you select [Web Apps]{.Emphasis}, search for Azure and
            add the [WS-Fed + Provisioning]{.Emphasis} app for the
            [Microsoft Azure Portal]{.Emphasis}.

        2.  In [Step 2: Configure the Settings page]{.Emphasis}, follow
            the instructions for using token-based authentication.

            ::: important
            Basic authentication isn\'t supported for Azure in
            {% $cc_product_vars.SCA-short %}.
            :::

            1.  Register the app in Microsoft Azure and give the app
                permissions, as described in [Configure app registration
                in the Microsoft Azure
                Portal](/identity/latest/en/content/applications/appsweb/azure_portal_sso.htm#ConfigApRegAzure "link to 14-step procedure for Azure web app"){target="_blank"
                alt="link to 14-step procedure for Azure web app"}
                (steps 1-12). When you do [step 7]{.Emphasis} (adding
                permissions):

                - If your IdP is [NOT
                  {% $cc_product_vars.Identity-full %}]{.Emphasis},
                  add the [User.ReadWrite.All]{.Emphasis} permission
                  only

                - If your IdP is
                  {% $cc_product_vars.Identity-full %},
                  add [all ]{.Emphasis}the listed permissions

                ::: important
                Make sure to note down the [Account
                (Client) ID]{.Emphasis}, [Directory (tenant)
                ID]{.Emphasis}, and [Client secret]{.Emphasis} as you
                will need these in the next step.
                :::

            2.  In
                {% $cc_product_vars.IdentityAdmin-full %},
                go to the web app\'s Application settings page,
                configure [token based authentication]{.Emphasis} using
                the following values, and click [Verify]{.Emphasis}.

                  Azure application setting            Value
                  ------------------------------------ -------------------------------------------------------------------------------------------------------------
                  [Authentication method]{.Emphasis}   Token-based authentication
                  [Directory ID]{.Emphasis}            Your tenant ID that you got from the Azure portal when you registered the app in Microsoft Azure above.
                  [Client ID]{.Emphasis}               The application (client) ID that was created when you registered the app in Microsoft Azure above.
                  [Client secret]{.Emphasis}           Your application client credentials that were created when you registered the app in Microsoft Azure above.

            3.  Click [Save]{.Emphasis}.

3.  [Provision users]{.Emphasis}

    Your organization\'s users must exist in both
    {% $cv-shared-variables.entra-id-long %}
    and
    {% $cc_product_vars.Identity-full %}.
    This means you have to provision the users from your IdP to the
    other side (either from
    {% $cc_product_vars.Identity-full %}
    \>\> Azure Active Directory, or from Azure Active Directory \>\>
    {% $cc_product_vars.Identity-full %}).

    ::: ProcedureHeading
    To add
    {% $cc_product_vars.Identity-full %}
    users to Microsoft Azure:
    :::

    1.  In the Microsoft Azure portal, go to [Home ]{.Emphasis}\>[
        \[your workspace\]]{.Emphasis} \> [Users]{.Emphasis}.

    2.  Click [New User ]{.Emphasis}and select [Invite external
        user]{.Emphasis}.

    3.  Select the relevant users from the list and add them to
        Microsoft Azure.

    :::: {madcap:conditions="cc_C_CyberArk.Future"}
    ::: ProcedureHeading
    To add Azure Active Directory users to
    {% $cc_product_vars.Identity-full %}:
    :::

    Follow the instructions in the
    {% $cc_product_vars.Identity-full %}
    docs. [Rinat, I can\'t find a topic that explains how to import the
    users, and I already linked to the topic that explains how to
    configure Azure AD as the IdP.]{.RN-Internal}
    ::::

    </p>

4.  [Enable
    {% $cc_product_vars.SCA-full %}
    in the
    {% $cc_product_vars.IdentityAdmin-full %}
    admin portal]{.Emphasis}

    `<snippetblock src="../CloudAdmin/CloudAdminSnippets/EnableSCA.flsnp">`{=html}`</snippetblock>`{=html}

5.  [Enable
    {% $cc_product_vars.SWS-full %}
    (Optional)]{.Emphasis}

    `<snippetblock src="../CloudAdmin/CloudAdminSnippets/enable-sws-azure.flsnp">`{=html}`</snippetblock>`{=html}
::::
:::::::::
::::::::::

::: NextStep
[Create a Microsoft Azure
policy](sca_create-policies-Azure.htm){alt="The next step is to create an Azure policy"}
:::
