# Automate onboarding and policy creation with Terraform

This topic describes how to integrate Terraform with , in order to
automate the process of onboarding cloud workspaces and creating access
policies for the identities that need to manage the workspaces.

## Overview

Cloud environments are dynamic, and many organizations add new
workspaces on a regular basis.

If you already use Terraform to onboard new workspaces to your cloud
environment, you can add onboarding to your existing automation. This
will ensure that the new workspaces have policies in place with zero
standing permissions as soon as they are added to your cloud
environment.

::: note
supports using automation to add workspaces to organizations and
directories that were previously onboarded to using .
:::

Perform the procedures described in this topic for both first-time
integrations and upgrades.

## Supported workspace scopes

The Terraform integration with supports the following cloud workspace
scopes.

+----------------+---------------------------------------+
| Cloud provider | Workspace scopes                      |
+================+=======================================+
| AWS            | New organization                      |
|                |                                       |
|                | Account (to an existing organization) |
|                |                                       |
|                | Standalone AWS account                |
+----------------+---------------------------------------+
| Azure          | Directory (root management group)     |
|                |                                       |
|                | Management group                      |
|                |                                       |
|                | Subscription                          |
|                |                                       |
|                | Resource group                        |
|                |                                       |
|                | Resource                              |
+----------------+---------------------------------------+
| Google Cloud   | Organization                          |
|                |                                       |
|                | Folder                                |
|                |                                       |
|                | Project                               |
+----------------+---------------------------------------+

: Supported workspace scopes

## Before you begin

Make sure you have the following:

- Terraform installed in your environment, as described in the
  [Terraform
  docs](https://developer.hashicorp.com/terraform/tutorials/aws-get-started/install-cli){target="_blank"
  alt="Link to Hashicorp documentation on installing Terraform"}

- An service user and appropriate authorization configuration, as
  described in \[%=cc_product_vars.ISP-short%\] authentication
  prerequisites

## Prepare the template file {#prepare-the-template-file .step madcap:autonum="Step 1: "}

The Terraform template file contains all the assets you need to
integrate with your Terraform deployment.

::: {.note madcap:conditions="cc_C_CyberArk.NOT_TO_PUBLISH"}
The current Terraform template version is 1.0.0.
:::

### Download the Terraform template files {#download-the-terraform-template-files .step madcap:autonum="Step 1: "}

Go to [Settings]{.Emphasis} \>[ Integrations]{.Emphasis} and click the
[Terraform]{.Emphasis} tile.

1.  In the [Download Terraform template]{.Emphasis} window, select the
    operating system of the machine you\'re using to configure the
    integration and then click [Download]{.Emphasis}.

2.  Unzip the [terraform-provider-sca\_\<OS\>.zip]{.Emphasis} file that
    you downloaded, which contains the following folders:

      Folder                                Description
      ------------------------------------- ------------------------------------------------------------------------------------------------------------------
      [terrafrom-provider-sca]{.Emphasis}   Contains all the resources you need to implement the integration with Terraform for AWS, Azure, and Google Cloud
      [main.tf]{.Emphasis}                  Contains the template file for integrating Terraform with on the cloud provider
      [variables.tf]{.Emphasis}             Apply the parameter values in this file so that they are available when you run [main.tf]{.Emphasis}

      : Terraform download

### Move the binary to the Terraform plugins folder {#move-the-binary-to-the-terraform-plugins-folder .step madcap:autonum="Step 2: "}

After you unzip the file, you have to move the binary files to the
location that Terraform uses when it runs.

::: note
If this is your first plugin, you may have to create this folder (if
Terraform didn\'t create the folder when it was installed).
:::

:::::::: tabs
- [Windows]{cc-tab=".tab-1"}
- [Linux]{cc-tab=".tab-2"}
- [Darwin (Mac)]{cc-tab=".tab-3"}

::::::: tabs-stage
:::: tab-1
Tab 1 Content - \<Windows\>

1.  Confirm that you have a 64-bit installation: run
    ` terraform --version` and verify that the output includes `amd64`.

2.  Create a sub-directory within the user plugins directory for the
    HashiCups provider, replacing \<[current version]{.Italics}\> with
    the provider version number and \<[OS]{.Italics}\> with your Windows
    version, for example [windows_amd64]{.Emphasis}.

    ::: {.code madcap:conditions="cc_C_CyberArk.NOT_TO_PUBLISH"}
        mkdir  %USERPROFILE%\AppData\Roaming\terraform.d\plugins\cyberark\terraform-provider-sca\sca\<current version>\<OS>
    :::

    ::: code
        mkdir  %USERPROFILE%\AppData\Roaming\terraform.d\plugins\cyberark\sca\sca\<current version>\<OS>
    :::

3.  Move the binary file to the sub-directory that you created in the
    previous step.

    ::: {.code madcap:conditions="cc_C_CyberArk.NOT_TO_PUBLISH"}
        move terraform-provider-sca_<OS> %USERPROFILE%\AppData\Roaming\terraform.d\plugins\cyberark\terraform-provider-sca\sca\<current version>\<OS>
    :::

    ::: code
        move terraform-provider-sca_<OS> %USERPROFILE%\AppData\Roaming\terraform.d\plugins\cyberark\sca\sca\<current version>\<OS>
    :::

4.  Rename the file to have a `.exe` extension.

::: note
Depending on your organization\'s security requirements, modify the
properties of the plugin binary file to mark it as safe to use.
:::
::::

::: tab-2
Tab 2 Content - \<Linux\>

1.  Retrieve your system\'s OS and ARCH.

    ::: code
        export OS_ARCH="$(go env GOHOSTOS)_$(go env GOHOSTARCH)"
    :::

2.  Create a sub-directory within the user plugins directory for the
    HashiCups provider, replacing \<[current version]{.Italics}\> with
    the provider version number and \<[OS]{.Italics}\> with your
    operating system version, for example [linux_amd64]{.Emphasis}.

    ::: {.code madcap:conditions="cc_C_CyberArk.NOT_TO_PUBLISH"}
        mkdir -p ~/.terraform.d/plugins/cyberark/terraform-provider-sca/sca/<current version>/<OS>
    :::

    ::: code
        mkdir -p ~/.terraform.d/plugins/cyberark/sca/sca/<current version>/<OS>
    :::

3.  Move the binary file to the sub-directory that you created in the
    previous step.

    ::: {.code madcap:conditions="cc_C_CyberArk.NOT_TO_PUBLISH"}
        mv terraform-provider-sca_<OS> ~/.terraform.d/plugins/cyberark/terraform-provider-sca/sca/<current version>/<OS>/terraform-provider-sca
    :::

    ::: code
        mv terraform-provider-sca_<OS> ~/.terraform.d/plugins/cyberark/sca/sca/<current version>/<OS>/terraform-provider-sca
    :::
:::

::: tab-3
Tab 3 Content - \<Darwin/Mac\>

When you copy the binary to your plugins folder, you have to rename it
so Terraform will be able to access it.

1.  Create a sub-directory within the user plugins directory for the
    HashiCups provider, replacing \<[current version]{.Italics}\> with
    the provider version number.

    ::: {.code madcap:conditions="cc_C_CyberArk.NOT_TO_PUBLISH"}
        mkdir -p ~/.terraform.d/plugins/cyberark/terraform-provider-sca/sca/<current version>/darwin_amd64
    :::

    ::: code
        mkdir -p ~/.terraform.d/plugins/cyberark/sca/sca/<current version>/darwin_amd64
    :::

2.  Rename the [terraform-provider-sca_darwin_amd64 ]{.Emphasis}file to
    [terraform-provider-sca ]{.Emphasis}and move it to the plugins
    folder.

    ::: {.code madcap:conditions="cc_C_CyberArk.NOT_TO_PUBLISH"}
        mv terraform-provider-sca_darwin_amd64 ~/.terraform.d/plugins/cyberark/sca/sca/<current version>/darwin_amd64/terraform-provider-sca
    :::

    ::: code
        mv terraform-provider-sca_darwin_amd64 ~/.terraform.d/plugins/cyberark/sca/sca/<current version>/<OS>/terraform-provider-sca
    :::
:::
:::::::
::::::::

<div>

## Apply the and cloud provider information {#apply-the-and-cloud-provider-information .step madcap:autonum="Step 2: "}

Specify the cloud identities and cloud provider information in your
Terraform deployment to enable to automate onboarding and policy
creation. Define the parameters in the [variables.tf]{.Emphasis} file,
which are used by the [main.tf]{.Emphasis} file when it is run.

::: tip
The -Terraform template version is available in the [main.tf]{.Emphasis}
file.
:::

The variables.tf file contains the variables described in the
subsections below.

### sca_provider

The parameters in the `sca_provider` section are required for any
automation that you want to configure.

+----------------------------------+----------------------------------+
| Variable                         | Description                      |
+==================================+==================================+
| [auth_url]{.Emphasis}            | OAuth2 URL for authenticating    |
|                                  | from                             |
+----------------------------------+----------------------------------+
| [tenant_domain_name]{.Emphasis}  | The tenant subdomain, which is   |
|                                  | the same as                      |
|                                  | [tenant_name]{.Emphasis} in the  |
|                                  | SCA REST API, for example, see   |
|                                  | \[%=cc_product_vars.SCA-short%\] |
|                                  | infrastructure APIs.             |
|                                  |                                  |
|                                  | For example, if your tenant URL  |
|                                  | is                               |
|                                  | [abc                             |
|                                  | 1234.cyberark.cloud]{.Emphasis}, |
|                                  | then specify                     |
|                                  | [abc1234]{.Emphasis}.            |
|                                  |                                  |
|                                  | ::: note                         |
|                                  | If you downloaded the Terraform  |
|                                  | template files before 16 October |
|                                  | 2024, the value of               |
|                                  | [tenant_domain_name]{.Emphasis}  |
|                                  | must be in the format            |
|                                  | [                                |
|                                  | \<tenant_name\>-sca]{.Emphasis}. |
|                                  | For example, if your tenant URL  |
|                                  | is                               |
|                                  | [abc                             |
|                                  | 1234.cyberark.cloud]{.Emphasis}, |
|                                  | then specify                     |
|                                  | `te                              |
|                                  | nant_domain_name = abc1234-sca`. |
|                                  | :::                              |
+----------------------------------+----------------------------------+
| [                                | The platform domain              |
| platform_domain_name]{.Emphasis} |                                  |
|                                  | Defa                             |
|                                  | ult: [cyberark.cloud]{.Emphasis} |
+----------------------------------+----------------------------------+
| [username]{.Emphasis}            | service user username for the    |
|                                  | API                              |
+----------------------------------+----------------------------------+
| [password]{.Emphasis}            | Password used by the service     |
|                                  | user for the API                 |
+----------------------------------+----------------------------------+
| [debug]{.Emphasis}               | Use this parameter to turn debug |
|                                  | mode on or off for the resources |
|                                  | and data source                  |
|                                  |                                  |
|                                  | Default: [false]{.Emphasis}      |
+----------------------------------+----------------------------------+

: sca_provider variables

#### Example

In this example of the `sca_provider` section in the main.tf file, the
tenant URL is `example.cyberark.cloud`.

::: example
    provider "sca" {
      auth_url             = "https://{identity_tenant}.id.cyberark.cloud/oauth2/token/{webapp}"
      tenant_domain_name   = "abc1234"
      platform_domain_name = "cyberark.cloud"
      username             = "service_username@cyberark.cloud.xxx"
      password             = "service_username_password"
      debug                = true
    }
:::

</div>

### sca_discovery

The variables in the `sca_discovery` data section are used to automate
onboarding new workspaces or roles. If you don\'t want to automate this
activity, you can delete the section in the variables.tf file.

+------------------------------+--------------------------------------+
| Variable                     | Description                          |
+==============================+======================================+
| [csp]{.Emphasis}             | Cloud service provider               |
|                              |                                      |
|                              | Supported values:                    |
|                              |                                      |
|                              | - [AWS]{.Emphasis}                   |
|                              |                                      |
|                              | - [GCP]{.Emphasis}                   |
|                              |                                      |
|                              | - [AZURE]{.Emphasis}                 |
|                              |                                      |
|                              | ::: {.note madcap:condit             |
|                              | ions="cc_C_CyberArk.NOT_TO_PUBLISH"} |
|                              | This information is needed to        |
|                              | automate both onboarding new         |
|                              | workspaces and creating policies.    |
|                              | :::                                  |
+------------------------------+--------------------------------------+
| [organization_id]{.Emphasis} | Root organization ID for the cloud   |
|                              | provider workspace to which the      |
|                              | policy applies                       |
+------------------------------+--------------------------------------+
| [account_info]{.Emphasis}    | A dictionary with the following      |
|                              | parameters:                          |
|                              |                                      |
|                              | - [workspace_id ]{.Emphasis}- ID of  |
|                              |   the scope (account, project,       |
|                              |   subscription, etc.) to which the   |
|                              |   policy applies                     |
|                              |                                      |
|                              | - [new_account ]{.Emphasis}-         |
|                              |   indicates whether the account is   |
|                              |   new to an organization, and has    |
|                              |   not yet been onboarded. Supported  |
|                              |   values:                            |
|                              |                                      |
|                              |   - [false]{.Emphasis} (default) -   |
|                              |     indicates that the account is    |
|                              |     not new - it was previously      |
|                              |     onboarded                        |
|                              |                                      |
|                              |   - [true]{.Emphasis} - indicates    |
|                              |     the account is new to the        |
|                              |     organization, meaning that       |
|                              |     you\'re onboarding a new:        |
|                              |                                      |
|                              |     - AWS account that belongs to an |
|                              |       already onboarded AWS          |
|                              |       organization                   |
|                              |                                      |
|                              |     - GCP project that belongs to an |
|                              |       already onboarded Google Cloud |
|                              |       organization                   |
|                              |                                      |
|                              |     - Management group /             |
|                              |       subscription / resource group  |
|                              |       that belongs to an already     |
|                              |       onboarded directory.           |
+------------------------------+--------------------------------------+

: sca_discovery variables

#### Example

In this example, the AWS account 11111111, which belongs to the r-xxx
organization, is new and is being onboarded.

The sca_discovery section in the main.tf file looks as follows:

::: example
    data "sca_discovery" "discovery_example" {
      csp = "AWS
      organization_id = "r-xxxx"
      account_info = {
        id = "1111111111"
        new_account = false
:::

### []{#sca_policy}sca_policy

The variables in the `sca_policy` section are used to create policies.
If you don\'t want to automate this activity, you can delete the section
in the variables.tf file.

+---------------------------+-----------------------------------------+
| Variable                  | Description                             |
+===========================+=========================================+
| [name]{.Emphasis}         | The name of the policy.                 |
+---------------------------+-----------------------------------------+
| [description]{.Emphasis}  | The description of the policy.          |
+---------------------------+-----------------------------------------+
| [csp]{.Emphasis}          | Cloud service provider                  |
|                           |                                         |
|                           | Supported values:                       |
|                           |                                         |
|                           | - [AWS]{.Emphasis}                      |
|                           |                                         |
|                           | - [GCP]{.Emphasis}                      |
|                           |                                         |
|                           | - [AZURE]{.Emphasis}                    |
|                           |                                         |
|                           | ::: {.note madcap:con                   |
|                           | ditions="cc_C_CyberArk.NOT_TO_PUBLISH"} |
|                           | This information is needed to automate  |
|                           | both onboarding new workspaces and      |
|                           | creating policies.                      |
|                           | :::                                     |
+---------------------------+-----------------------------------------+
| [roles]{.Emphasis}        | Cloud provider roles to which the       |
|                           | policy applies, defined by the          |
|                           | following:                              |
+---------------------------+-----------------------------------------+
|                           | [entity_id]{.Emphasis}                  |
|                           |                                         |
|                           | - AWS - the cloud role ARN (for         |
|                           |   example, arn:aws:iam::\<[AWS account  |
|                           |   ID]{.Italics}\>:role/devOps)          |
|                           |                                         |
|                           | - Google Cloud - cloud role name and    |
|                           |   hierarchy structure (for example,     |
|                           |                                         |
|                           |  projects/cybrsca-dev/roles/CustomRole) |
|                           |                                         |
|                           | - Azure RBAC - path of the              |
|                           |   roleDefinition in Azure (for example, |
|                           |   [/subscriptions/xxxxxxx               |
|                           | /providers/Microsoft.Authorization/role |
|                           | Definitions/\<roleDefinition\>]{.Wrap}) |
|                           |                                         |
|                           | - \- the unique identifier of the cloud |
|                           |   role (a GUID)                         |
+---------------------------+-----------------------------------------+
|                           | [entity_source_id]{.Emphasis}           |
|                           |                                         |
|                           | - AWS - the account ID associated with  |
|                           |   the role (in format \<XXXXXXXXXXXX\>) |
|                           |                                         |
|                           | - Google Cloud - the name of the source |
|                           |   organization, folder, or project      |
|                           |   depending on the workspaceType (for   |
|                           |   example, cybrsca-dev)                 |
|                           |                                         |
|                           | - Azure RBAC (resource based) - the     |
|                           |   scope where the role is applied,      |
|                           |   provided as a path (for example, the  |
|                           |   path for a management group scope may |
|                           |   be                                    |
|                           |   [providers/Microsoft.Management/manag |
|                           | ementGroups/\<roleDefinition\>]{.Wrap}, |
|                           |   while the path for a subscription     |
|                           |   scope or lower may be                 |
|                           |   /subscrip                             |
|                           | tions/\<[roleDefinition]{.Italics}[\>/r |
|                           | esourceGroups/cloud-shell-storage-weste |
|                           | urope/providers/Microsoft.Storage/stora |
|                           | geAccounts/csb10032002529a3d5e)]{.Wrap} |
|                           |                                         |
|                           | - \- tenant ID                          |
+---------------------------+-----------------------------------------+
|                           | [organization_id]{.Emphasis}            |
|                           |                                         |
|                           | - AWS - management account ID           |
|                           |                                         |
|                           | - Google Cloud - organization ID        |
|                           |                                         |
|                           | - Azure - directory ID                  |
+---------------------------+-----------------------------------------+
|                           | [workspace_type]{.Emphasis}             |
|                           |                                         |
|                           | - AWS - supported value is              |
|                           |   [account]{.Emphasis}                  |
|                           |                                         |
|                           | - Google Cloud - supported values are   |
|                           |   [gcp_organization]{.Emphasis},        |
|                           |   [folder]{.Emphasis}, and              |
|                           |   [project]{.Emphasis}                  |
|                           |                                         |
|                           | - Azure - supported values are          |
|                           |   [directory]{.Emphasis},               |
|                           |   [management_group]{.Emphasis},        |
|                           |   [subscription]{.Emphasis},            |
|                           |   [resource_group]{.Emphasis}, and      |
|                           |   [resource]{.Emphasis}                 |
+---------------------------+-----------------------------------------+
| [identities]{.Emphasis}   | Identities (users) to which the policy  |
|                           | applies, defined by the following:      |
|                           |                                         |
|                           | - [entity_name]{.Emphasis} - fully      |
|                           |   qualified name of the role            |
|                           |                                         |
|                           | - [entity_source_id]{.Emphasis} -       |
|                           |   unique ID of the source of the        |
|                           |   user/role in                          |
|                           |                                         |
|                           | - [entity_class]{.Emphasis} - supported |
|                           |   values are [user]{.Emphasis},         |
|                           |   [group]{.Emphasis}, and               |
|                           |   [role]{.Emphasis}                     |
+---------------------------+-----------------------------------------+
| [start_date]{.Emphasis}   | (Optional) The date and time when the   |
|                           | policy becomes active, in ISO format.   |
+---------------------------+-----------------------------------------+
| [end_date]{.Emphasis}     | (Optional) The date and time when the   |
|                           | policy expires, in ISO format.          |
+---------------------------+-----------------------------------------+
| [access_rules]{.Emphasis} | A set of rules that specify when the    |
|                           | policy is active.                       |
|                           |                                         |
|                           | - [days]{.Emphasis}                     |
|                           |                                         |
|                           |   Days of the week.                     |
|                           |                                         |
|                           |   Supported values:                     |
|                           |   [sunday]{.Emphasis},                  |
|                           |   [monday]{.Emphasis},                  |
|                           |   [tuesday]{.Emphasis},                 |
|                           |   [wednesday]{.Emphasis},               |
|                           |   [thursday]{.Emphasis},                |
|                           |   [friday]{.Emphasis}, and              |
|                           |   [saturday]{.Emphasis}                 |
|                           |                                         |
|                           | - [from_time]{.Emphasis}                |
|                           |                                         |
|                           |   (Optional) Time of day when the       |
|                           |   policy becomes active, in 24-hour     |
|                           |   format. For example, to activate the  |
|                           |   policy at 8AM, use the value          |
|                           |   [08:00]{.Emphasis}.                   |
|                           |                                         |
|                           | - [to_time]{.Emphasis}                  |
|                           |                                         |
|                           |   (Optional) Time of day when the       |
|                           |   policy is deactivated, in 24-hour     |
|                           |   format. For example, to deactivate    |
|                           |   the policy at 5PM, use the value      |
|                           |   [17:00]{.Emphasis}.                   |
|                           |                                         |
|                           | - [max_session_duration]{.Emphasis}     |
|                           |                                         |
|                           |   Maximum allowed length, in hours, of  |
|                           |   the user session. For example, to set |
|                           |   a duration of two hours, use the      |
|                           |   value [2]{.Emphasis}.                 |
|                           |                                         |
|                           | - [time_zone]{.Emphasis}                |
|                           |                                         |
|                           |   A time-zone qualified string          |
|                           |   representing the time zone of the     |
|                           |   client host machine. For example,     |
|                           |   [America/Los_Angeles]{.Emphasis}.     |
+---------------------------+-----------------------------------------+

: sca_policy variables

#### Example

See this example of the sca_policy section in the main.tf file.

::: example
    resource "sca_policy" "policy_example" {
      csp  = "AWS"
      roles = [
        {
          entity_id        = "arn:aws:iam::xxxxxxxxxxxx:role/devOps"
          entity_source_id = "xxxxxxxxxxxx"
          workspace_type   = "account"
        }
      ]
      identities = [
        {
          entity_name      = "user@cyberark.cloud.xxx"
          entity_source_id = "id"
          entity_class     = "user"
        }
      ]
      access_rules = {
        days = [
          "sunday",
          "monday",
          "tuesday",
          "wednesday",
          "thursday",
          "friday",
          "saturday"
        ]
        from_time            = "09:00"
        to_time              = "17:00"
        max_session_duration = 1
        time_zone            = "Asia/Jerusalem"
      }  
      start_date = "2022-07-12T00:00:00.000Z"
      end_date   = "2022-10-10T00:00:00.000Z"
    }
:::

### sca_queryPolicies

The variables in the `sca_queryPolicies data` section are used to query
the status of a policy during automation operations. If you don\'t want
to automate this activity, you can delete the section in the
variables.tf file.

+------------------------+--------------------------------------------+
| Variable               | Description                                |
+========================+============================================+
| [csp]{.Emphasis}       | Cloud service provider                     |
|                        |                                            |
|                        | Supported values:                          |
|                        |                                            |
|                        | - [AWS]{.Emphasis}                         |
|                        |                                            |
|                        | - [GCP]{.Emphasis}                         |
|                        |                                            |
|                        | - [AZURE]{.Emphasis}                       |
|                        |                                            |
|                        | ::: {.note madcap:                         |
|                        | conditions="cc_C_CyberArk.NOT_TO_PUBLISH"} |
|                        | This information is needed when policies   |
|                        | will be filtered based on the cloud        |
|                        | provider.                                  |
|                        | :::                                        |
+------------------------+--------------------------------------------+
| [status]{.Emphasis}    | Filter policies according to status        |
|                        |                                            |
|                        | Supported values:                          |
|                        |                                            |
|                        | - Active                                   |
|                        |                                            |
|                        | - Expired                                  |
|                        |                                            |
|                        | - Error                                    |
|                        |                                            |
|                        | - Warning                                  |
|                        |                                            |
|                        | - Validating                               |
+------------------------+--------------------------------------------+
| [free_text]{.Emphasis} | Search using free text. The following      |
|                        | parameters are supported:                  |
|                        |                                            |
|                        | - Name                                     |
|                        |                                            |
|                        | - Description                              |
|                        |                                            |
|                        | - Identity name                            |
|                        |                                            |
|                        | - Organization ID                          |
|                        |                                            |
|                        | - Cloud provider                           |
|                        |                                            |
|                        | - Status                                   |
|                        |                                            |
|                        | - Account name                             |
+------------------------+--------------------------------------------+
| [page_size]{.Emphasis} | Define the number of results that should   |
|                        | appear per page (maximum = 100)            |
+------------------------+--------------------------------------------+

: sca_queryPolicies variables

#### Example

::: example
    data "sca_queryPolicies" "queryPolicies_example" {
      free_text = "PolicyForITTeam"
      csp       = "AWS"
      status    = "Active"
      page_size = 50
    }
:::

## Run Terraform for {#run-terraform-for .step madcap:autonum="Step 3: "}

Run the following commands from the main.tf file:

::: code
    terraform init
:::

::: code
    terraform apply
:::

To run Terraform in[ debug]{.Emphasis} mode, use the following command:

::: code
    TF_LOG=DEBUG terrafrom apply
:::
