{
  "openapi": "3.0.0",
  "x-swagger-ui": {
    "defaultModelsExpandDepth": -1,
    "docExpansion": "none"
  },
  "info": {
    "title": "SCA Policy API",
    "version": "1.0.0",
    "description": "This API enables you to perform SCA policy-related operations.<br><br>For example, you can programmatically create, update, or delete a policy",
    "contact": {
      "name": "SCA Group"
    }
  },
  "servers": [
    {
      "url": "https://{tenant_name}.sca.cyberark.cloud/api",
      "description": "sca_base_url"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerOAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": ""
      }
    },
    "schemas": {
      "Create-Policy-v2": {
        "type": "object",
        "x-examples": {
          "Create AWS IAM policy - AWS account": {
            "csp": "AWS",
            "name": "finance",
            "description": "End-of-year calculations",
            "startDate": "2021-07-12T00:00:00.000Z",
            "endDate": "2021-10-10T00:00:00.000Z",
            "roles": [
              {
                "entityId": "arn:aws:iam::123451234567:role/ExampleRole",
                "workspaceType": null,
                "entitySourceId": "123451234567",
                "organization_id": null
              }
            ],
            "identities": [
              {
                "entityName": "John.D@domain.com",
                "entitySourceId": "ABCD1234-ABC1-123A-AB12-65256D55B06D",
                "entityClass": "user"
              }
            ],
            "accessRules": {
              "days": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ],
              "fromTime": null,
              "toTime": null,
              "maxSessionDuration": 1,
              "timeZone": "Asia/Jerusalem"
            }
          }
        },
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the policy",
            "maxLength": 200,
            "pattern": "^[A-Za-z0-9-@ _!.+-\\\\s]{1,200}$"
          },
          "description": {
            "type": "string",
            "description": "The description of the policy",
            "maxLength": 200,
            "pattern": "^[A-Za-z0-9-@ _!^[{}.+-\\]$\\\\s]{0,200}$"
          },
          "startDate": {
            "type": "string",
            "description": "(Optional) The date and time when the policy becomes active, in ISO format (for example, 2022-07-12T00:00:00.000Z)"
          },
          "endDate": {
            "type": "string",
            "description": "(Optional) The date and time when the policy expires, in ISO format (for example, 2022-10-10T00:00:00.000Z)"
          },
          "csp": {
            "type": "string",
            "description": "The cloud environment that the policy applies to ('AWS','GCP','AZURE')"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Specify at least one cloud role entity",
              "properties": {
                "entityId": {
                  "type": "string",
                  "description": "AWS: The IAM role ARN (for example, arn:aws:iam::123451234567:role/examplerole) or AWS IAM Identity Center permission set (for example, arn:aws:sso:::permissionSet/ssoins-12345aabbccc3b3b/ab-12cdef34ger1234n)\n\nAzure resource: Path of the roleDefinition in Azure (for example, /subscriptions/xxxxxxx/providers/Microsoft.Authorization/roleDefinitions/c025889f-8102-4ebf-b32c-fc0c6f0c6bd9)\n\nAzure - Microsoft Entra ID: The unique identifier of the cloud role (a GUID)\n\nGoogle Cloud: The cloud role name and hierarchy structure (for example, projects/dev/roles/cloudsql.client)"
                },
                "workspaceType": {
                  "type": "string",
                  "description": "AWS: Supported value: 'account' (required only in AWS IAM Identity Center)\n\nAzure: Supported values: 'directory', 'management_group', 'subscription', 'resource_group' and 'resource'\n\nGoogle Cloud: Supported values: 'gcp_organization', 'folder', and 'project'"
                },
                "entitySourceId": {
                  "type": "string",
                  "description": "AWS: The account ID associated with the role (for example, 123451234567)\n\nAzure resource: The scope where the role is applied, provided as a path (for example, the path for a management group scope may be providers/Microsoft.Management/managementGroups/1234abcd-abc1-123a-abcd-b3f62876ec6aw, while the path for a subscription scope or lower may be /subscriptions/1234abcd-123a-12ab-ace1-f3263530fd72/resourceGroups/cloud-shell-storage-westeurope/providers/Microsoft.Storage/storageAccounts/csb10032002529a3d5e)\n\nAzure - Microsoft Entra ID: Azure tenant ID\n\nGoogle Cloud: The ID of the source organization, folder, or project depending on the workspaceType (for example, 123457654321 or cybrsca-dev)"
                },
                "organizationId": {
                  "type": "string",
                  "description": "AWS: Management account ID (required only for AWS organizations (with or without IAM Identity Center))\n\nAzure - Microsoft Entra ID: Azure tenant ID (UUID)\n\nGoogle Cloud: Google Cloud organization ID"
                }
              }
            }
          },
          "identities": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Specify at least one CyberArk identity cloud entity",
              "properties": {
                "entityName": {
                  "type": "string",
                  "description": "Full user principal name (for example, user@domain.com)"
                },
                "entitySourceId": {
                  "type": "string",
                  "description": "User directory service ID (UUID format, for example 12A3B4C0-A3B0-465A-ABC3-12345D67B89E)"
                },
                "entityClass": {
                  "type": "string",
                  "description": "Supported values: 'user', 'role', and 'group'"
                }
              }
            }
          },
          "accessRules": {
            "type": "object",
            "description": "(Optional) Set of rules that specify exactly when the policy is active",
            "properties": {
              "days": {
                "type": "array",
                "description": "Days of the week, comma-separated (for example, [Monday, Tuesday, Wednesday])",
                "items": {
                  "type": "string"
                }
              },
              "fromTime": {
                "type": "string",
                "description": "(Optional) Time of day when the policy becomes active in hh:mm:ss 24-hr format (for example, 7:00 AM is 07:00:00)"
              },
              "toTime": {
                "type": "string",
                "description": "(Optional) Time of day when the policy becomes inactive in hh:mm:ss 24-hr format (for example, 8:00 PM is 20:00:00)"
              },
              "maxSessionDuration": {
                "type": "integer",
                "description": "Maximum allowed length (in hours) of the user session (1 - 24 hours, not more than the time defined in the AWS IAM roles or permission sets)"
              },
              "timeZone": {
                "type": "string",
                "description": "A time zone identifier representing the time zone of the client host machine (for example, Asia/Jerusalem)"
              }
            }
          }
        }
      },
      "Create-Policy-v1": {
        "type": "object",
        "x-examples": {
          "Create AWS IAM policy - AWS account": {
            "name": "finance",
            "description": "End-of-year calculations",
            "startDate": "2022-07-12T00:00:00.000Z",
            "expirationDate": "2022-10-10T00:00:00.000Z",
            "cloudProvider": 0,
            "entities": [
              {
                "entityId": "1234abcd-1234-123a-1a23-e6779a3fe30b",
                "entityName": "John.D@domain.cloud.8867",
                "entityDisplayName": "John.Doe",
                "entityType": 1,
                "entitySourceId": "ABCD1234-1234-12AB-AB12-66766D33B05E",
                "entitySourceName": "CyberArk Cloud Directory",
                "entityClass": "user"
              },
              {
                "entityId": "arn:aws:iam::123451234567:role/ExampleRole",
                "entityName": "ExampleRole",
                "entityDisplayName": "ExampleRole",
                "entityType": 0,
                "entitySourceId": "123451234567",
                "exposureLevel": "39",
                "entitySourceName": "123451234567"
              }
            ],
            "targetAttributes": [
              {
                "name": "env",
                "value": "prod",
                "isCustom": true
              }
            ],
            "accessRules": {
              "days": [
                0,
                1,
                2,
                3
              ],
              "fromTime": "08:00",
              "toTime": "17:00",
              "maxSessionDuration": 2,
              "timeZone": "Asia/Jerusalem"
            }
          }
        },
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the policy",
            "maxLength": 200,
            "pattern": "^[A-Za-z0-9 .+_!\\-@\\\\s]{1,200}$"
          },
          "description": {
            "type": "string",
            "description": "The description of the policy",
            "maxLength": 200,
            "pattern": "^[A-Za-z0-9-@ _!.+-\\\\s]{0,200}$"
          },
          "startDate": {
            "type": "string",
            "description": "(Optional) Date and time when the policy becomes active, in ISO format (for example, 2022-07-12T00:00:00.000Z)"
          },
          "expirationDate": {
            "type": "string",
            "description": "(Optional) Date and time when the policy expires, in ISO format (for example, 2022-10-10T00:00:00.000Z)"
          },
          "cloudProvider": {
            "type": "integer",
            "description": "The cloud environment that the policy applies to\n\nSupported values:\nAWS IAM = 0, Google Cloud = 1, Azure RBAC = 2, AWS IAM Identity Center = 3, Microsoft Entra ID = 4"
          },
          "entities": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Specify at least one CyberArk identity cloud entity and one cloud role entity (minimum two entities in total)",
              "properties": {
                "entityId": {
                  "type": "string",
                  "description": "1 (CyberArk identity):\n\n- Internal UUID of the cloud entity\n\n0 (Cloud provider):\n\n- AWS: The IAM role ARN (for example, arn:aws:iam::123451234567:role/examplerole) or AWS IAM Identity Center permission set (for example, arn:aws:sso:::permissionSet/ssoins-12345aabbccc3b3b/ab-12cdef34ger1234n)\n\n- Azure resource: Path of the roleDefinition in Azure (for example, /subscriptions/xxxxxxx/providers/Microsoft.Authorization/roleDefinitions/abcd1234-1234-1abc-b12c-fc0c6f0c6bd9)\n\n- Azure - Microsoft Entra ID: The unique identifier of the cloud role (a GUID)\n\n- Google Cloud: The cloud role name and hierarchy structure (for example, projects/cybrsca-dev/roles/CustomRole)"
                },
                "entityName": {
                  "type": "string",
                  "description": "CyberArk identity: Full user principal name (for example, user@domain.com)\n\nCloud provider: The cloud role name ('ExampleRole' or 'CustomRole')"
                },
                "entityDisplayName": {
                  "type": "string",
                  "description": "CyberArk identity: The display name of the cloud entity (user, role or group)\n\nCloud provider: N/A"
                },
                "entityType": {
                  "type": "integer",
                  "description": "CyberArk identity (cloud entity): Value = 1\n\nCloud provider (cloud role): Value = 0"
                },
                "entitySourceId": {
                  "type": "string",
                  "description": "1 (CyberArk identity):\n\n- User directory service ID\n\n0 (cloud provider):\n\n- AWS: The account ID associated with the role (for example, 123456654321)\n\n- Azure resource: The scope where the role is applied, provided as a path (for example, the path for a management group scope may be providers/Microsoft.Management/managementGroups/abcd1234-123a-123a-abcd-b3f62876ec6aw, while the path for a subscription scope or lower may be /subscriptions/1234abcd-0123-12ab-ace1-f3263530fd72/resourceGroups/cloud-shell-storage-westeurope/providers/Microsoft.Storage/storageAccounts/csb10032002529a3d5e)\n\n- Azure - Microsoft Entra ID: Azure tenant ID\n\n- Google Cloud: The name of the source organization, folder, or project depending on the workspaceType (for example, cybrsca-dev)"
                },
                "entitySourceName": {
                  "type": "string",
                  "description": "CyberArk identity: The source of the cloud entity. Supported values: 'CyberArk Cloud Directory' or 'Federated Directory Service'\n\nCloud provider: N/A"
                },
                "entityClass": {
                  "type": "string",
                  "description": "CyberArk identity: Supported values: 'user', 'role', and 'group'\n\nCloud provider: N/A"
                },
                "organizationId": {
                  "type": "string",
                  "description": "(Google Cloud policies only) Google Cloud organization ID"
                },
                "workspaceType": {
                  "type": "string",
                  "description": "(Google Cloud policies only) Supported values: 'gcp_organization', 'folder', and 'project'"
                },
                "roleType": {
                  "type": "string",
                  "description": "(Google Cloud policies only) Supported values: Predefined = 0, Custom = 1, Basic = 2"
                },
                "rolePackage": {
                  "type": "string",
                  "description": "(Google Cloud policies only) The Google Cloud package associated with the role"
                }
              }
            }
          },
          "targetAttributes": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Key-value pairs that specify the AWS assets to which the policy applies (for example, [{\"name\": \"env\", \"value\": \"prod\", \"isCustom\": true}]",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the tag. For example, 'color'"
                },
                "value": {
                  "type": "string",
                  "description": "The value of the tag. For example, 'blue'"
                },
                "isCustom": {
                  "type": "boolean",
                  "description": "true"
                }
              }
            }
          },
          "accessRules": {
            "type": "object",
            "description": "Set of rules that specify exactly when the policy is active",
            "properties": {
              "days": {
                "type": "array",
                "description": "Days of the week as a number range from 0-6, comma-separated, where Sunday=0, Monday=1, Tuesday=2, Wednesday=3, Thursday=4, Friday=5, Saturday=6 (for example, [1, 2, 3])",
                "items": {
                  "type": "integer"
                }
              },
              "fromTime": {
                "type": "string",
                "description": "(Optional) Time of day when the policy becomes active in hh:mm:ss 24-hr format (for example, 7:00 AM is 07:00:00)"
              },
              "toTime": {
                "type": "string",
                "description": "(Optional) Time of day when the policy becomes inactive in hh:mm:ss 24-hr format (for example, 8:00 PM is 20:00:00)"
              },
              "maxSessionDuration": {
                "type": "integer",
                "description": "Maximum allowed length (in hours) of the user session (1 - 24 hours, not more than the time defined in the AWS IAM roles or permission sets)"
              },
              "timeZone": {
                "type": "string",
                "description": "A time zone identifier representing the time zone of the client host machine (for example, Asia/Jerusalem)"
              }
            }
          }
        }
      },
      "Get-Policy-v1": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "description": "The unique ID (UUID) of the CyberArk tenant (for example, a123b123-1234-5678-a459-233a917ea2c7)"
          },
          "policyId": {
            "type": "string",
            "description": "The unique ID of the policy"
          },
          "name": {
            "type": "string",
            "description": "The name of the policy",
            "maxLength": 200,
            "pattern": "^[A-Za-z0-9 .+_!\\-@\\\\s]{1,200}$"
          },
          "description": {
            "type": "string",
            "description": "The description of the policy",
            "maxLength": 200,
            "pattern": "^[A-Za-z0-9-@ _!.+-\\\\s]{0,200}$"
          },
          "status": {
            "type": "integer",
            "description": "The status of the policy\n\nSupported values:\n\nActive = 1, Expired = 3, Error = 4, Warning = 5, Validating = 6"
          },
          "creationDate": {
            "type": "string",
            "description": "Date and time when the policy was created, in ISO format (for example, 2022-07-12T00:00:00.000Z)"
          },
          "lastChanged": {
            "type": "string",
            "description": "Date and time when the policy was last updated, in ISO format (for example, 2022-07-15T00:00:00.000Z)"
          },
          "cloudProvider": {
            "type": "integer",
            "description": "The cloud environment that the policy applies to\n\nSupported values:\n\nAWS = 0, Google Cloud = 1, Azure resource = 2, AWS IAM IDC = 3, Microsoft Entra ID = 4"
          },
          "targetAttributes": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Key-value pairs that specify the AWS assets to which the policy applies (for example, [{\"name\": \"env\", \"value\": \"prod\", \"isCustom\": true}]",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the tag. For example, 'color'"
                },
                "value": {
                  "type": "string",
                  "description": "The value of the tag. For example, 'blue'"
                },
                "isCustom": {
                  "type": "boolean",
                  "description": "true"
                }
              }
            }
          },
          "startDate": {
            "type": "string",
            "description": "(Optional) Date and time when the policy becomes active, in ISO format (for example, 2022-07-12T00:00:00.000Z)"
          },
          "expirationDate": {
            "type": "string",
            "description": "(Optional) Date and time when the policy expires, in ISO format (for example, 2022-10-10T00:00:00.000Z)"
          },
          "accessRules": {
            "type": "object",
            "description": "Set of rules that specify exactly when the policy is active",
            "properties": {
              "days": {
                "type": "array",
                "description": "Days of the week as a number range from 0-6, comma-separated, where Sunday=0, Monday=1, Tuesday=2, Wednesday=3, Thursday=4, Friday=5, Saturday=6 (for example, [1, 2, 3])",
                "items": {
                  "type": "integer"
                }
              },
              "fromTime": {
                "type": "string",
                "description": "(Optional) Time of day when the policy becomes active in hh:mm:ss 24-hr format (for example, 7:00 AM is 07:00:00)"
              },
              "toTime": {
                "type": "string",
                "description": "(Optional) Time of day when the policy becomes inactive in hh:mm:ss 24-hr format (for example, 8:00 PM is 20:00:00)"
              },
              "maxSessionDuration": {
                "type": "integer",
                "description": "Maximum allowed length (in hours) of the user session (1 - 24 hours, not more than the time defined in the AWS IAM roles or permission sets)"
              },
              "timeZone": {
                "type": "string",
                "description": "A time zone identifier representing the time zone of the client host machine (for example, Asia/Jerusalem)"
              }
            }
          },
          "entities": {
            "type": "array",
            "description": "List of cloud entities (CyberArk identity and cloud role) to which the policy applies",
            "items": {
              "type": "object",
              "description": "CyberArk identity cloud entity fields",
              "properties": {
                "entityId": {
                  "type": "string",
                  "description": "1 (CyberArk identity):\n\n- Internal UUID of the cloud entity\n\n0 (Cloud provider):\n\n- AWS: The IAM role ARN (for example, arn:aws:iam::123451234567:role/examplerole) or AWS IAM Identity Center permission set (for example, arn:aws:sso:::permissionSet/ssoins-12345aabbccc3b3b/ab-12cdef34ger1234n)\n\n- Azure resource: Path of the roleDefinition in Azure (for example, /subscriptions/xxxxxxx/providers/Microsoft.Authorization/roleDefinitions/abcd1234-1234-1abc-b12c-fc0c6f0c6bd9)\n\n- Azure - Microsoft Entra ID: The unique identifier of the cloud role (a GUID)\n\n- Google Cloud: The cloud role name and hierarchy structure (for example, projects/cybrsca-dev/roles/CustomRole)"
                },
                "entityName": {
                  "type": "string",
                  "description": "CyberArk identity: Full user principal name (for example, user@domain.com)\n\nCloud provider: The cloud role name ('ExampleRole' or 'CustomRole')"
                },
                "entityType": {
                  "type": "integer",
                  "description": "CyberArk identity (cloud entity): Value = 1"
                },
                "entitySourceId": {
                  "type": "string",
                  "description": "1 (CyberArk identity):\n- User directory service ID\n\n0 (cloud provider):\n- AWS: The account ID associated with the role (for example, 123456654321)\n- Azure resource: The scope where the role is applied, provided as a path (for example, the path for a management group scope may be providers/Microsoft.Management/managementGroups/abcd1234-123a-123a-abcd-b3f62876ec6aw, while the path for a subscription scope or lower may be /subscriptions/1234abcd-0123-12ab-ace1-f3263530fd72/resourceGroups/cloud-shell-storage-westeurope/providers/Microsoft.Storage/storageAccounts/csb10032002529a3d5e)\n- Azure - Microsoft Entra ID: Azure tenant ID\n- Google Cloud: The name of the source organization, folder, or project depending on the workspaceType (for example, cybrsca-dev)"
                },
                "entitySourceName": {
                  "type": "string",
                  "description": "CyberArk identity: The source of the cloud entity. Supported values: 'CyberArk Cloud Directory' or 'Federated Directory Service'\n\nCloud provider: N/A"
                },
                "entityDisplayName": {
                  "type": "string",
                  "description": "The display name of the cloud entity (user, role or group)"
                },
                "entityClass": {
                  "type": "string",
                  "description": "Supported values: 'user', 'role', and 'group'"
                },
                "entityEmail": {
                  "type": "string",
                  "description": "The email address of the CyberArk identity user (cloud entity)"
                },
                "exposureLevel": {
                  "type": "integer"
                },
                "organizationId": {
                  "type": "string",
                  "description": "Azure resource: Azure tenant ID (UUID)\n\nMicrosoft Entra ID: Azure tenant ID\n\nGoogle Cloud: Google Cloud organization ID"
                },
                "workspaceType": {
                  "type": "string",
                  "description": "Azure resource: Management group level role - 'management_group', Subscription level (and lower) - 'resource'\n\nGoogle Cloud: Supported values: 'gcp_organization', 'folder', and 'project'"
                },
                "roleType": {
                  "type": "string",
                  "description": "(Google Cloud policies only) Supported values: Predefined = 0, Custom = 1, Basic = 2"
                },
                "rolePackage": {
                  "type": "string",
                  "description": "(Google Cloud policies only) The Google Cloud package associated with the role"
                }
              }
            }
          },
          "faultCode": {
            "type": "number",
            "description": "(Optional) If there is an error when a policy is created, edited, or deleted, the faultCode number indicates the reason for the failure"
          },
          "statusTooltipMessage": {
            "type": "string",
            "description": "(Optional) If there is an error related to a policy, this field returns the error message that correlates with the faultCode"
          }
        },
        "x-examples": {
          "Get AWS IAM policy - AWS account": {
            "tenantId": "abcd1234-1234-1234-a459-233a917ea2c7",
            "policyId": "aws_abcd1234-e792-4a50-b5d5-12e39c1433fa",
            "name": "policy for dev ops group",
            "description": "",
            "status": 1,
            "creationDate": "2022-06-21T14:50:04.579024+00:00",
            "lastChanged": "2022-06-21T14:50:04.579024+00:00",
            "cloudProvider": 0,
            "targetAttributes": [],
            "startDate": null,
            "expirationDate": null,
            "accessRules": {
              "days": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
              ],
              "fromTime": "string",
              "toTime": "string",
              "maxSessionDuration": 1,
              "timeZone": "Asia/Jerusalem"
            },
            "entities": [
              {
                "entityId": "47d66b2b-8117-42f1-bee5-ad7bfe21bc15",
                "entityName": "John.S@company.com",
                "entityType": 1,
                "entitySourceId": "09A9B0-6CE8-465F-AB03-65766D33B05E",
                "entitySourceName": "CyberArk Cloud Directory",
                "entityDisplayName": "John Smith",
                "entityClass": "user",
                "entityEmail": "string"
              },
              {
                "entityId": "arn:aws:iam::123456789123:role/examplerole",
                "entityName": "examplerole",
                "entityType": 0,
                "entitySourceId": "123456789123",
                "entitySourceName": "Dev",
                "exposureLevel": 43,
                "organizationId": "string",
                "workspaceType": "string",
                "roleType": "string",
                "rolePackage": "string"
              }
            ],
            "faultCode": null,
            "statusTooltipMessage": null
          }
        }
      },
      "Get-Policy-v2": {
        "type": "object",
        "properties": {
          "policyId": {
            "type": "string",
            "description": "The unique ID of the policy"
          },
          "csp": {
            "type": "string",
            "description": "The cloud environment that the policy applies to\n\nSupported values:\n\nAWS = 'AWS', Google Cloud = 'GCP', Azure = 'AZURE'"
          },
          "name": {
            "type": "string",
            "description": "The name of the policy",
            "maxLength": 200,
            "pattern": "^[A-Za-z0-9-@ _!.+-\\\\s]{1,200}$"
          },
          "description": {
            "type": "string",
            "description": "The description of the policy",
            "maxLength": 200,
            "pattern": "^[A-Za-z0-9-@ _!^[{}.+-\\]$\\\\s]{0,200}$"
          },
          "startDate": {
            "type": "string",
            "description": "(Optional) Date and time when the policy becomes active, in ISO format (for example, 2022-07-12T00:00:00.000Z)"
          },
          "endDate": {
            "type": "string",
            "description": "(Optional) Date and time when the policy expires, in ISO format (for example, 2022-07-15T00:00:00.000Z)"
          },
          "policyType": {
            "type": "string",
            "description": "Supported values: 'pre_defined' and and 'on_demand'"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Specify at least one cloud role entity",
              "properties": {
                "entityId": {
                  "type": "string",
                  "description": "AWS: The IAM role ARN (for example, arn:aws:iam::123451234567:role/examplerole) or AWS IAM Identity Center permission set (for example, arn:aws:sso:::permissionSet/ssoins-12345aabbccc3b3b/ab-12cdef34ger1234n)\n\nAzure resource: Path of the roleDefinition in Azure (for example, /subscriptions/xxxxxxx/providers/Microsoft.Authorization/roleDefinitions/c025889f-8102-4ebf-b32c-fc0c6f0c6bd9)\n\nAzure - Microsoft Entra ID: The unique identifier of the cloud role (a GUID)\n\nGoogle Cloud: The cloud role name and hierarchy structure (for example, projects/dev/roles/cloudsql.client)"
                },
                "workspaceType": {
                  "type": "string",
                  "description": "AWS: Supported value: 'account' (required only in AWS IAM Identity Center)\n\nAzure: Supported values: 'directory', 'management_group', 'subscription', 'resource_group' and 'resource'\n\nGoogle Cloud: Supported values: 'gcp_organization', 'folder', and 'project'"
                },
                "entitySourceId": {
                  "type": "string",
                  "description": "AWS: The account ID associated with the role (for example, 123451234567)\n\nAzure resource: The scope where the role is applied, provided as a path (for example, the path for a management group scope may be providers/Microsoft.Management/managementGroups/1234abcd-abc1-123a-abcd-b3f62876ec6aw, while the path for a subscription scope or lower may be /subscriptions/1234abcd-123a-12ab-ace1-f3263530fd72/resourceGroups/cloud-shell-storage-westeurope/providers/Microsoft.Storage/storageAccounts/csb10032002529a3d5e)\n\nAzure - Microsoft Entra ID: Azure tenant ID\n\nGoogle Cloud: The ID of the source organization, folder, or project depending on the workspaceType (for example, 123457654321 or cybrsca-dev)"
                },
                "organizationId": {
                  "type": "string",
                  "description": "AWS: Management account ID (required only for AWS organizations (with or without IAM Identity Center))\n\nAzure - Microsoft Entra ID: Azure tenant ID (UUID)\n\nGoogle Cloud: Google Cloud organization ID"
                }
              }
            }
          },
          "identities": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Specify at least one CyberArk identity cloud entity",
              "properties": {
                "entityName": {
                  "type": "string",
                  "description": "Full user principal name (for example, user@domain.com)"
                },
                "entitySourceId": {
                  "type": "string",
                  "description": "User directory service ID (UUID format, for example 12A3B4C0-A3B0-465A-ABC3-12345D67B89E)"
                },
                "entityClass": {
                  "type": "string",
                  "description": "Supported values: 'user', 'role', and 'group'"
                }
              }
            }
          },
          "accessRules": {
            "type": "object",
            "description": "(Optional) Set of rules that specify exactly when the policy is active",
            "properties": {
              "days": {
                "type": "array",
                "description": "Days of the week, comma-separated (for example, [Monday, Tuesday, Wednesday])",
                "items": {
                  "type": "string"
                }
              },
              "fromTime": {
                "type": "string",
                "description": "(Optional) Time of day when the policy becomes active in hh:mm:ss 24-hr format (for example, 7:00 AM is 07:00:00)"
              },
              "toTime": {
                "type": "string",
                "description": "(Optional) Time of day when the policy becomes inactive in hh:mm:ss 24-hr format (for example, 8:00 PM is 20:00:00)"
              },
              "maxSessionDuration": {
                "type": "integer",
                "description": "Maximum allowed length (in hours) of the user session (1 - 24 hours, not more than the time defined in the AWS IAM roles or permission sets)"
              },
              "timeZone": {
                "type": "string",
                "description": "A time zone identifier representing the time zone of the client host machine (for example, Asia/Jerusalem)"
              }
            }
          }
        },
        "x-examples": {
          "Get AWS IAM policy - AWS account": {
            "policyId": "aws_abcd1234-e792-4b50-b5d5-34e39c1553fa",
            "csp": "AWS",
            "name": "policy for dev ops group",
            "description": "End-of-year calculations",
            "startDate": "2022-07-12T00:00:00.000Z",
            "endDate": "2022-10-10T00:00:00.000Z",
            "policy_type": "pre_defined",
            "roles": [
              {
                "entityId": "arn:aws:iam::123451234567:role/examplerole",
                "workspaceType": null,
                "entitySourceId": "123451234567",
                "organization_id": null
              }
            ],
            "identities": [
              {
                "entityName": "John.D",
                "entitySourceId": "1234ABCD-123A-465F-AB03-65566D33B05E",
                "entityClass": "user"
              }
            ],
            "accessRules": {
              "days": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ],
              "fromTime": null,
              "toTime": null,
              "maxSessionDuration": 1,
              "timeZone": "Asia/Jerusalem"
            }
          }
        }
      },
      "Edit-Policy-v1": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the policy",
            "maxLength": 200,
            "pattern": "^[A-Za-z0-9 .+_!\\-@\\\\s]{1,200}$"
          },
          "description": {
            "type": "string",
            "description": "The description of the policy",
            "maxLength": 200,
            "pattern": "^[A-Za-z0-9-@ _!.+-\\\\s]{0,200}$"
          },
          "startDate": {
            "type": "string",
            "description": "(Optional) Date and time when the policy becomes active, in ISO format (for example, 2022-07-12T00:00:00.000Z)"
          },
          "expirationDate": {
            "type": "string",
            "description": "(Optional) Date and time when the policy expires, in ISO format (for example, 2022-10-10T00:00:00.000Z)"
          },
          "cloudProvider": {
            "type": "integer",
            "description": "The cloud environment that the policy applies to\n\nSupported values:\n\nAWS IAM = 0, Google Cloud = 1, Azure resource = 2, AWS IAM Identity Center = 3, Microsoft Entra ID = 4"
          },
          "entities": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Specify at least one CyberArk identity cloud entity and one cloud role entity (minimum two entities in total)",
              "properties": {
                "entityId": {
                  "type": "string",
                  "description": "1 (CyberArk identity):\n\n- Internal UUID of the cloud entity\n\n0 (Cloud provider):\n\n- AWS: The IAM role ARN (for example, arn:aws:iam::123451234567:role/examplerole) or AWS IAM Identity Center permission set (for example, arn:aws:sso:::permissionSet/ssoins-12345aabbccc3b3b/ab-12cdef34ger1234n)\n\n- Azure resource: Path of the roleDefinition in Azure (for example, /subscriptions/xxxxxxx/providers/Microsoft.Authorization/roleDefinitions/abcd1234-1234-1abc-b12c-fc0c6f0c6bd9)\n\n- Azure - Microsoft Entra ID: The unique identifier of the cloud role (a GUID)\n\n- Google Cloud: The cloud role name and hierarchy structure (for example, projects/cybrsca-dev/roles/CustomRole)"
                },
                "entityName": {
                  "type": "string",
                  "description": "CyberArk identity: Full user principal name (for example, user@domain.com)\n\nCloud provider: The cloud role name ('ExampleRole' or 'CustomRole')"
                },
                "entityDisplayName": {
                  "type": "string",
                  "description": "CyberArk identity: The display name of the cloud entity (user, role or group)\n\nCloud provider: N/A"
                },
                "entityType": {
                  "type": "integer",
                  "description": "CyberArk identity (cloud entity): Value = 1\n\nCloud provider (cloud role): Value = 0"
                },
                "entitySourceId": {
                  "type": "string",
                  "description": "1 (CyberArk identity):\n\n- User directory service ID\n\n0 (cloud provider):\n\n- AWS: The account ID associated with the role (for example, 123456654321)\n\n- Azure resource: The scope where the role is applied, provided as a path (for example, the path for a management group scope may be providers/Microsoft.Management/managementGroups/abcd1234-123a-123a-abcd-b3f62876ec6aw, while the path for a subscription scope or lower may be /subscriptions/1234abcd-0123-12ab-ace1-f3263530fd72/resourceGroups/cloud-shell-storage-westeurope/providers/Microsoft.Storage/storageAccounts/csb10032002529a3d5e)\n\n- Azure - Microsoft Entra ID: Azure tenant ID\n\n- Google Cloud: The name of the source organization, folder, or project depending on the workspaceType (for example, cybrsca-dev)"
                },
                "entitySourceName": {
                  "type": "string",
                  "description": "CyberArk identity: The source of the cloud entity. Supported values: 'CyberArk Cloud Directory' or 'Federated Directory Service'\n\nCloud provider: N/A"
                },
                "entityClass": {
                  "type": "string",
                  "description": "CyberArk identity: Supported values: 'user', 'role', and 'group'\n\nCloud provider: N/A"
                },
                "organizationId": {
                  "type": "string",
                  "description": "(Google Cloud policies only) Google Cloud organization ID"
                },
                "workspaceType": {
                  "type": "string",
                  "description": "(Google Cloud policies only) Supported values: 'gcp_organization', 'folder', and 'project'"
                },
                "roleType": {
                  "type": "string",
                  "description": "(Google Cloud policies only) Supported values: Predefined = 0, Custom = 1, Basic = 2"
                },
                "rolePackage": {
                  "type": "string",
                  "description": "(Google Cloud policies only) The Google Cloud package associated with the role"
                }
              }
            }
          },
          "targetAttributes": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Key-value pairs that specify the AWS assets to which the policy applies (for example, [{\"name\": \"env\", \"value\": \"prod\", \"isCustom\": true}]",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the tag. For example, 'color'"
                },
                "value": {
                  "type": "string",
                  "description": "The value of the tag. For example, 'blue'"
                },
                "isCustom": {
                  "type": "boolean",
                  "description": "true"
                }
              }
            }
          },
          "accessRules": {
            "type": "object",
            "description": "Set of rules that specify exactly when the policy is active",
            "properties": {
              "days": {
                "type": "array",
                "description": "Days of the week as a number range from 0-6, comma-separated, where Sunday=0, Monday=1, Tuesday=2, Wednesday=3, Thursday=4, Friday=5, Saturday=6 (for example, [1, 2, 3])",
                "items": {
                  "type": "integer"
                }
              },
              "fromTime": {
                "type": "string",
                "description": "(Optional) Time of day when the policy becomes active in hh:mm:ss 24-hr format (for example, 7:00 AM is 07:00:00)"
              },
              "toTime": {
                "type": "string",
                "description": "(Optional) Time of day when the policy becomes inactive in hh:mm:ss 24-hr format (for example, 8:00 PM is 20:00:00)"
              },
              "maxSessionDuration": {
                "type": "integer",
                "description": "Maximum allowed length (in hours) of the user session (1 - 24 hours, not more than the time defined in the AWS IAM roles or permission sets)"
              },
              "timeZone": {
                "type": "string",
                "description": "A time zone identifier representing the time zone of the client host machine (for example, Asia/Jerusalem)"
              }
            }
          }
        },
        "x-examples": {
          "Edit AWS IAM policy - AWS account": {
            "name": "finance",
            "description": "End-of-year calculations",
            "startDate": "2022-07-12T00:00:00.000Z",
            "expirationDate": "2022-10-10T00:00:00.000Z",
            "cloudProvider": 0,
            "entities": [
              {
                "entityId": "abcd1234-1234-123c-8b96-e1234a3fe30b",
                "entityName": "John.D@domain.cloud.5567",
                "entityDisplayName": "John.Doe",
                "entityType": 1,
                "entitySourceId": "123A567B-6AB8-123A-AB03-65766D55B05E",
                "entitySourceName": "CyberArk Cloud Directory",
                "entityClass": "user"
              },
              {
                "entityId": "arn:aws:iam::123451234567:role/ExampleRole",
                "entityName": "ExampleRole",
                "entityDisplayName": "ExampleRole",
                "entityType": 0,
                "entitySourceId": "123451234567",
                "exposureLevel": "39",
                "entitySourceName": "123451234567"
              }
            ],
            "targetAttributes": [
              {
                "name": "env",
                "value": "prod",
                "isCustom": true
              }
            ],
            "accessRules": {
              "days": [
                0,
                1,
                2,
                3
              ],
              "fromTime": "08:00",
              "toTime": "17:00",
              "maxSessionDuration": 2,
              "timeZone": "Asia/Jerusalem"
            }
          }
        }
      },
      "Edit-Policy-v2": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the policy",
            "maxLength": 200,
            "pattern": "^[A-Za-z0-9-@ _!.+-\\\\s]{1,200}$"
          },
          "description": {
            "type": "string",
            "description": "The description of the policy",
            "maxLength": 200,
            "pattern": "^[A-Za-z0-9-@ _!^[{}.+-\\]$\\\\s]{0,200}$"
          },
          "startDate": {
            "type": "string",
            "description": "(Optional) The date and time when the policy becomes active, in ISO format (for example, 2022-07-12T00:00:00.000Z)"
          },
          "endDate": {
            "type": "string",
            "description": "(Optional) The date and time when the policy expires, in ISO format (for example, 2022-10-10T00:00:00.000Z)"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Specify at least one cloud role entity",
              "properties": {
                "entityId": {
                  "type": "string",
                  "description": "AWS: The IAM role ARN (for example, arn:aws:iam::123451234567:role/examplerole) or AWS IAM Identity Center permission set (for example, arn:aws:sso:::permissionSet/ssoins-12345aabbccc3b3b/ab-12cdef34ger1234n)\n\nAzure resource: Path of the roleDefinition in Azure (for example, /subscriptions/xxxxxxx/providers/Microsoft.Authorization/roleDefinitions/c025889f-8102-4ebf-b32c-fc0c6f0c6bd9)\n\nAzure - Microsoft Entra ID: The unique identifier of the cloud role (a GUID)\n\nGoogle Cloud: The cloud role name and hierarchy structure (for example, projects/dev/roles/cloudsql.client)"
                },
                "workspaceType": {
                  "type": "string",
                  "description": "AWS: Supported value: 'account' (required only in AWS IAM Identity Center)\n\nAzure: Supported values: 'directory', 'management_group', 'subscription', 'resource_group' and 'resource'\n\nGoogle Cloud: Supported values: 'gcp_organization', 'folder', and 'project'"
                },
                "entitySourceId": {
                  "type": "string",
                  "description": "AWS: The account ID associated with the role (for example, 123451234567)\n\nAzure resource: The scope where the role is applied, provided as a path (for example, the path for a management group scope may be providers/Microsoft.Management/managementGroups/1234abcd-abc1-123a-abcd-b3f62876ec6aw, while the path for a subscription scope or lower may be /subscriptions/1234abcd-123a-12ab-ace1-f3263530fd72/resourceGroups/cloud-shell-storage-westeurope/providers/Microsoft.Storage/storageAccounts/csb10032002529a3d5e)\n\nAzure - Microsoft Entra ID: Azure tenant ID\n\nGoogle Cloud: The ID of the source organization, folder, or project depending on the workspaceType (for example, 123457654321 or cybrsca-dev)"
                },
                "organizationId": {
                  "type": "string",
                  "description": "AWS: Management account ID (required only for AWS organizations (with or without IAM Identity Center))\n\nAzure - Microsoft Entra ID: Azure tenant ID (UUID)\n\nGoogle Cloud: Google Cloud organization ID"
                }
              }
            }
          },
          "identities": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Specify at least one CyberArk identity cloud entity",
              "properties": {
                "entityName": {
                  "type": "string",
                  "description": "Full user principal name (for example, user@domain.com)"
                },
                "entitySourceId": {
                  "type": "string",
                  "description": "User directory service ID (UUID format, for example 12A3B4C0-A3B0-465A-ABC3-12345D67B89E)"
                },
                "entityClass": {
                  "type": "string",
                  "description": "Supported values: 'user', 'role', and 'group'"
                }
              }
            }
          },
          "accessRules": {
            "type": "object",
            "description": "Set of rules that specify exactly when the policy is active",
            "properties": {
              "days": {
                "type": "array",
                "description": "Days of the week, comma-separated (for example, [Monday, Tuesday, Wednesday])",
                "items": {
                  "type": "string"
                }
              },
              "fromTime": {
                "type": "string",
                "description": "(Optional) Time of day when the policy becomes active in hh:mm:ss 24-hr format (for example, 7:00 AM is 07:00:00)"
              },
              "toTime": {
                "type": "string",
                "description": "(Optional) Time of day when the policy becomes inactive in hh:mm:ss 24-hr format (for example, 8:00 PM is 20:00:00)"
              },
              "maxSessionDuration": {
                "type": "integer",
                "description": "Maximum allowed length (in hours) of the user session (1 - 24 hours, not more than the time defined in the AWS IAM roles or permission sets)"
              },
              "timeZone": {
                "type": "string",
                "description": "A time zone identifier representing the time zone of the client host machine (for example, Asia/Jerusalem)"
              }
            }
          }
        },
        "x-examples": {
          "Edit AWS IAM policy - AWS account": {
            "name": "finance",
            "description": "End-of-year calculations",
            "startDate": "2022-07-12T00:00:00.000Z",
            "endDate": "2022-10-10T00:00:00.000Z",
            "roles": [
              {
                "entityId": "arn:aws:iam::123451234567:role/examplerole",
                "workspaceType": null,
                "entitySourceId": "123451234567",
                "organization_id": null
              }
            ],
            "identities": [
              {
                "entityName": "John.D",
                "entitySourceId": "123A567B-6AB8-123F-AB03-65766D33B05E",
                "entityClass": "user"
              }
            ],
            "accessRules": {
              "days": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ],
              "fromTime": null,
              "toTime": null,
              "maxSessionDuration": 1,
              "timeZone": "Asia/Jerusalem"
            }
          }
        }
      }
    },
    "responses": {
      "CreatePolicyV2-Response": {
        "description": "Successful response",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "jobId": {
                  "type": "string",
                  "description": "The job ID, which can be used in the Get job status API to continue tracking the status"
                }
              }
            }
          }
        }
      },
      "CreatePolicyV1-Response": {
        "description": "Successful response",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "type": "object",
                  "x-examples": {
                    "Create AWS IAM policy - AWS account": {
                      "tenantId": "a123b123-1234-5678-a459-233a917ea2c7",
                      "name": "aws account example policy",
                      "status": 1,
                      "description": "Create policy response",
                      "creationDate": "2022-06-21T14:50:04.579024+00:00",
                      "lastChanged": "2022-06-21T14:50:04.579024+00:00",
                      "cloudProvider": 0,
                      "policyId": "aws_1234567-123a-456b-7h7h-1234gb12kj1",
                      "targetAttributes": [],
                      "startDate": "2022-06-21T14:50:04.579024+00:00",
                      "expirationDate": "2022-06-22T14:50:04.579024+00:00",
                      "accessRules": {
                        "days": [
                          0,
                          1,
                          2,
                          3,
                          4,
                          5,
                          6
                        ],
                        "fromTime": "07:00:00",
                        "toTime": "10:00:00",
                        "maxSessionDuration": 1,
                        "timeZone": "Asia/Jerusalem"
                      },
                      "entities": [
                        {
                          "entityId": "123a123b-1234-412a1-abc5-ad7bfe21ec15",
                          "entityName": "John.S@company.com",
                          "entityType": 1,
                          "entitySourceId": "12AB56CD-AB12-123A-AB03-65766D55B05E",
                          "entitySourceName": "CyberArk Cloud Directory",
                          "entityDisplayName": "John Smith",
                          "entityClass": "user",
                          "entityEmail": null
                        },
                        {
                          "entityId": "arn:aws:iam::123451234567:role/examplerole",
                          "entityName": "examplerole",
                          "entityType": 0,
                          "entitySourceId": "123451234567",
                          "entitySourceName": "Dev",
                          "exposureLevel": null,
                          "risks": [],
                          "organizationId": null,
                          "workspaceType": null,
                          "roleType": null,
                          "rolePackage": null,
                          "assignedWorkspace": null,
                          "assignedWorkspaceType": null
                        }
                      ],
                      "faultCode": "SCA-0100",
                      "statusTooltipMessage": "a message"
                    }
                  },
                  "properties": {
                    "tenantId": {
                      "type": "string",
                      "description": "The unique ID (UUID) of the CyberArk tenant (for example, a123b123-1234-5678-a459-233a917ea2c7)"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the policy",
                      "maxLength": 200,
                      "pattern": "^[A-Za-z0-9 .+_!\\-@\\\\s]{1,200}$"
                    },
                    "status": {
                      "type": "integer",
                      "description": "The status of the policy\n\nSupported values:\n\nActive = 1, Expired = 3, Error = 4, Warning = 5, Validating = 6"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the policy",
                      "maxLength": 200,
                      "pattern": "^[A-Za-z0-9-@ _!.+-\\\\s]{0,200}$"
                    },
                    "creationDate": {
                      "type": "string",
                      "description": "The date and time when the policy was created, in ISO format (for example, 2022-06-21T14:50:04.579024+00:00)"
                    },
                    "lastChanged": {
                      "type": "string",
                      "description": "The date and time when the policy was last updated, in ISO format (for example, 2022-06-21T14:50:04.579024+00:00)"
                    },
                    "cloudProvider": {
                      "type": "integer",
                      "description": "The cloud environment that the policy applies to\n\nSupported values:\n\nAWS = 0, Google Cloud = 1, Azure RBAC = 2, AWS IAM IDC = 3, Microsoft Entra ID = 4"
                    },
                    "policyId": {
                      "type": "string",
                      "description": "The unique ID of the policy"
                    },
                    "targetAttributes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Key-value pairs that specify the AWS assets to which the policy applies (for example, [{\"name\": \"env\", \"value\": \"prod\", \"isCustom\": true}]",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the tag. For example, 'color'"
                          },
                          "value": {
                            "type": "string",
                            "description": "The value of the tag. For example, 'blue'"
                          },
                          "isCustom": {
                            "type": "boolean",
                            "description": "true"
                          }
                        }
                      }
                    },
                    "startDate": {
                      "type": "string",
                      "description": "(Optional) Date and time when the policy becomes active, in ISO format (for example, 2022-07-12T00:00:00.000Z)"
                    },
                    "expirationDate": {
                      "type": "string",
                      "description": "(Optional) Date and time when the policy expires, in ISO format (for example, 2022-10-10T00:00:00.000Z)"
                    },
                    "accessRules": {
                      "type": "object",
                      "description": "Set of rules that specify exactly when the policy is active",
                      "properties": {
                        "days": {
                          "type": "array",
                          "description": "Days of the week as a number range from 0-6, comma-separated, where Sunday=0, Monday=1, Tuesday=2, Wednesday=3, Thursday=4, Friday=5, Saturday=6 (for example, [1, 2, 3])",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "fromTime": {
                          "type": "string",
                          "description": "(Optional) Time of day when the policy becomes active in hh:mm:ss 24-hr format (for example, 7:00 AM is 07:00:00)"
                        },
                        "toTime": {
                          "type": "string",
                          "description": "(Optional) Time of day when the policy becomes inactive in hh:mm:ss 24-hr format (for example, 8:00 PM is 20:00:00)"
                        },
                        "maxSessionDuration": {
                          "type": "integer",
                          "description": "Maximum allowed length (in hours) of the user session (1 - 24 hours, not more than the time defined in the AWS IAM roles or permission sets)"
                        },
                        "timeZone": {
                          "type": "string",
                          "description": "A time zone identifier representing the time zone of the client host machine (for example, Asia/Jerusalem)"
                        }
                      }
                    },
                    "entities": {
                      "type": "array",
                      "description": "List of cloud entities (CyberArk identity and cloud role) to which the policy applies",
                      "items": {
                        "type": "object",
                        "description": "CyberArk identity cloud entity fields",
                        "properties": {
                          "entityId": {
                            "type": "string",
                            "description": "1 (CyberArk identity):\n\n- Internal UUID of the cloud entity\n\n0 (Cloud provider):\n\n- AWS: The IAM role ARN (for example, arn:aws:iam::123451234567:role/examplerole) or AWS IAM Identity Center permission set (for example, arn:aws:sso:::permissionSet/ssoins-12345aabbccc3b3b/ab-12cdef34ger1234n)\n\n- Azure resource: Path of the roleDefinition in Azure (for example, /subscriptions/xxxxxxx/providers/Microsoft.Authorization/roleDefinitions/abcd1234-1234-4abc-b32c-fc0c6f0c6bd9)\n\n- Azure - Microsoft Entra ID: The unique identifier of the cloud role (a GUID)\n\n- Google Cloud: The cloud role name and hierarchy structure (for example, projects/cybrsca-dev/roles/CustomRole)"
                          },
                          "entityName": {
                            "type": "string",
                            "description": "CyberArk identity: Full user principal name (for example, user@domain.com)\n\nCloud provider: The cloud role name ('ExampleRole' or 'CustomRole')"
                          },
                          "entityType": {
                            "type": "integer",
                            "description": "Value = 1 (CyberArk identity)"
                          },
                          "entitySourceId": {
                            "type": "string",
                            "description": "1 (CyberArk identity):\n\n- User directory service ID\n\n0 (cloud provider):\n\n- AWS: The account ID associated with the role (for example, 123456654321)\n\n- Azure resource: The scope where the role is applied, provided as a path (for example, the path for a management group scope may be providers/Microsoft.Management/managementGroups/abcd1234-123a-123e-abcd-b3f62876ec6aw, while the path for a subscription scope or lower may be /subscriptions/1234abcd-012a-12c3-ace1-f3263530fd72/resourceGroups/cloud-shell-storage-westeurope/providers/Microsoft.Storage/storageAccounts/csb10032002529a3d5e)\n\n- Azure - Microsoft Entra ID: Azure tenant ID\n\n- Google Cloud: The name of the source organization, folder, or project depending on the workspaceType (for example, cybrsca-dev)"
                          },
                          "entitySourceName": {
                            "type": "string",
                            "description": "The source of the cloud entity in CyberArk Identity\n\nSupported values:\n\n'CyberArk Cloud Directory' and 'Federated Directory Service'"
                          },
                          "entityDisplayName": {
                            "type": "string",
                            "description": "The display name of the cloud entity (user, role or group)"
                          },
                          "entityClass": {
                            "type": "string",
                            "description": "Supported values: 'user', 'role', and 'group'"
                          },
                          "entityEmail": {
                            "type": "string",
                            "description": "The email address of the CyberArk identity user (cloud entity)"
                          },
                          "exposureLevel": {
                            "type": "integer"
                          },
                          "organizationId": {
                            "type": "string",
                            "description": "Azure resource: the Azure tenant ID (UUID)\n\nMicrosoft Entra ID: Azure tenant ID\n\nGoogle Cloud: Google Cloud organization ID"
                          },
                          "workspaceType": {
                            "type": "string",
                            "description": "Azure resource: Management group level role - 'management_group', Subscription level (and lower) - 'resource'\n\nGoogle Cloud: Supported values: 'gcp_organization', 'folder', and 'project'"
                          },
                          "roleType": {
                            "type": "string",
                            "description": "(Google Cloud policies only) Supported values: Predefined = 0, Custom = 1, Basic = 2"
                          },
                          "rolePackage": {
                            "type": "string",
                            "description": "(Google Cloud policies only) The Google Cloud package associated with the role"
                          }
                        }
                      }
                    },
                    "faultCode": {
                      "type": "number",
                      "description": "If there is an error when a policy is created, edited, or deleted, the faultCode number indicates the reason for the failure"
                    },
                    "statusTooltipMessage": {
                      "type": "string",
                      "description": "If there is an error related to a policy, this field returns the error message that correlates with the faultCode"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string",
                      "description": "This returns a job ID that can be used in the Get job status API to continue tracking the status"
                    }
                  }
                }
              ]
            },
            "examples": {
              "Create AWS IAM policy - AWS account": {
                "value": {
                  "tenantId": "a123b123-1234-5678-a459-233a917ea2c7",
                  "name": "policy for AWS account",
                  "status": 1,
                  "description": "Create policy response",
                  "creationDate": "2022-06-21T14:50:04.579024+00:00",
                  "lastChanged": "2022-06-21T14:50:04.579024+00:00",
                  "cloudProvider": 0,
                  "policyId": "aws_1234567-123a-456b-7h7h-1234gb12kj1",
                  "targetAttributes": [],
                  "startDate": "2022-06-21T14:50:04.579024+00:00",
                  "expirationDate": "2022-06-22T14:50:04.579024+00:00",
                  "accessRules": {
                    "days": [
                      0,
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ],
                    "fromTime": "07:00:00",
                    "toTime": "10:00:00",
                    "maxSessionDuration": 1,
                    "timeZone": "Asia/Jerusalem"
                  },
                  "entities": [
                    {
                      "entityId": "123a123b-1234-412a1-abc5-ad7bfe21ec15",
                      "entityName": "John.S@company.com",
                      "entityType": 1,
                      "entitySourceId": "12AB56CD-AB12-123A-AB03-65766D55B05E",
                      "entitySourceName": "CyberArk Cloud Directory",
                      "entityDisplayName": "John Smith",
                      "entityClass": "user",
                      "entityEmail": null
                    },
                    {
                      "entityId": "arn:aws:iam::123451234567:role/examplerole",
                      "entityName": "examplerole",
                      "entityType": 0,
                      "entitySourceId": "123451234567",
                      "entitySourceName": "Dev",
                      "exposureLevel": null,
                      "risks": [],
                      "organizationId": null,
                      "workspaceType": null,
                      "roleType": null,
                      "rolePackage": null,
                      "assignedWorkspace": null,
                      "assignedWorkspaceType": null
                    }
                  ],
                  "faultCode": "SCA-0100",
                  "statusTooltipMessage": "a message"
                }
              }
            }
          },
          "application/xml": {
            "schema": {
              "type": "object",
              "properties": {
                "tenantId": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "description": {
                  "type": "string"
                },
                "creationDate": {
                  "type": "string"
                },
                "lastChanged": {
                  "type": "string"
                },
                "cloudProvider": {
                  "type": "integer"
                },
                "policyId": {
                  "type": "string"
                },
                "targetAttributes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {}
                  }
                },
                "startDate": {
                  "type": "string"
                },
                "expirationDate": {
                  "type": "string"
                },
                "accessRules": {
                  "type": "object",
                  "properties": {
                    "days": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "fromTime": {
                      "type": "string"
                    },
                    "toTime": {
                      "type": "string"
                    },
                    "maxSessionDuration": {
                      "type": "integer"
                    },
                    "timeZone": {
                      "type": "string"
                    }
                  }
                },
                "entities": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "entityId": {
                        "type": "string"
                      },
                      "entityName": {
                        "type": "string"
                      },
                      "entityType": {
                        "type": "integer"
                      },
                      "entitySourceId": {
                        "type": "string"
                      },
                      "entitySourceName": {
                        "type": "string"
                      },
                      "entityDisplayName": {
                        "type": "string"
                      },
                      "entityClass": {
                        "type": "string"
                      },
                      "entityEmail": {
                        "type": "string"
                      },
                      "exposureLevel": {
                        "type": "integer"
                      },
                      "organizationId": {
                        "type": "string"
                      },
                      "workspaceType": {
                        "type": "string"
                      },
                      "roleType": {
                        "type": "string"
                      },
                      "rolePackage": {
                        "type": "string"
                      }
                    }
                  }
                },
                "exposure": {
                  "type": "integer"
                },
                "faultCode": {
                  "type": "number"
                },
                "statusTooltipMessage": {
                  "type": "string"
                }
              },
              "x-examples": {
                "example-1": {
                  "tenantId": "e51a10e2-3666-4496-a459-233a917ea3c7",
                  "name": "policy for dev ops group",
                  "status": 1,
                  "description": "",
                  "creationDate": "2022-06-21T14:50:04.579024+00:00",
                  "lastChanged": "2022-06-21T14:50:04.579024+00:00",
                  "cloudProvider": 0,
                  "policyId": "aws_8cb10249-e792-4a50-b7d5-12e39c1433fa",
                  "targetAttributes": [],
                  "startDate": "string",
                  "expirationDate": "string",
                  "accessRules": {
                    "days": [
                      0,
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ],
                    "fromTime": "string",
                    "toTime": "string",
                    "maxSessionDuration": 1,
                    "timeZone": "Asia/Jerusalem"
                  },
                  "entities": [
                    {
                      "entityId": "88d66b2b-8117-42f1-bee5-ad7bfe21bc15",
                      "entityName": "John.S@company.com",
                      "entityType": 1,
                      "entitySourceId": "09B9A9B0-6CE8-465F-AB03-65766D55B05E",
                      "entitySourceName": "CyberArk Cloud Directory",
                      "entityDisplayName": "John Smith",
                      "entityClass": "user",
                      "entityEmail": "string"
                    },
                    {
                      "entityId": "arn:aws:iam::123451234567:role/examplerole",
                      "entityName": "examplerole",
                      "entityType": 0,
                      "entitySourceId": "123451234567",
                      "entitySourceName": "Dev",
                      "exposureLevel": 43,
                      "organizationId": "string",
                      "workspaceType": "string",
                      "roleType": "string",
                      "rolePackage": "string"
                    }
                  ],
                  "exposure": 100,
                  "faultCode": "number",
                  "statusTooltipMessage": "string"
                }
              }
            },
            "examples": {
              "example-1": {
                "value": {
                  "tenantId": "e51a10e2-3666-4496-a459-233a917ea2c7",
                  "name": "policy for dev ops group",
                  "status": 1,
                  "description": "",
                  "creationDate": "2022-06-21T14:50:04.579024+00:00",
                  "lastChanged": "2022-06-21T14:50:04.579024+00:00",
                  "cloudProvider": 0,
                  "policyId": "aws_7eb10249-e792-4a50-b5d5-12e39c1433fa",
                  "targetAttributes": [],
                  "startDate": "string",
                  "expirationDate": "string",
                  "accessRules": {
                    "days": [
                      0,
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ],
                    "fromTime": "string",
                    "toTime": "string",
                    "maxSessionDuration": 1,
                    "timeZone": "Asia/Jerusalem"
                  },
                  "entities": [
                    {
                      "entityId": "47d66b2b-8117-42f1-bcc5-ad7bfe21bc15",
                      "entityName": "John.S@company.com",
                      "entityType": 1,
                      "entitySourceId": "09B9A9B0-6CE8-465F-AB03-65766D55B05E",
                      "entitySourceName": "CyberArk Cloud Directory",
                      "entityDisplayName": "John Smith",
                      "entityClass": "user",
                      "entityEmail": "string"
                    },
                    {
                      "entityId": "arn:aws:iam::123451234567:role/examplerole",
                      "entityName": "examplerole",
                      "entityType": 0,
                      "entitySourceId": "123451234567",
                      "entitySourceName": "Dev",
                      "exposureLevel": 43,
                      "organizationId": "string",
                      "workspaceType": "string",
                      "roleType": "string",
                      "rolePackage": "string"
                    }
                  ],
                  "exposure": 100,
                  "faultCode": 100,
                  "statusTooltipMessage": "string"
                }
              }
            }
          }
        }
      },
      "InputError-CreatePolicy": {
        "description": "Input Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "faultCode": {
                  "type": "string"
                },
                "headerMessage": {
                  "type": "string"
                },
                "bodyMessage": {
                  "type": "string"
                },
                "correlationId": {
                  "type": "string"
                },
                "uiType": {
                  "type": "integer"
                },
                "innerError": {
                  "type": "string"
                },
                "debug_info": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "error_code": {
                        "type": "string"
                      },
                      "reason": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "example1": {
                "summary": "Error response when debug param is true",
                "value": {
                  "faultCode": "P1022",
                  "headerMessage": "Input error",
                  "bodyMessage": "Your request failed due to an input validation error.",
                  "correlationId": "612b32bf-e5f7-4f14-9a0f-0d4a66f156af",
                  "uiType": 3,
                  "innerError": "startDate can't be in the past (startDate: 07/12/2022; Today: 02/11/2025 (mm/dd/yyyy))",
                  "debug_info": [
                    {
                      "name": "VALIDATION",
                      "status": "Failure",
                      "error_code": "P1022",
                      "reason": "The following values aren't valid: startDate can't be in the past (startDate: 07/12/2022; Today: 02/11/2025 (mm/dd/yyyy))"
                    }
                  ]
                }
              },
              "example2": {
                "summary": "Error response when debug param is false",
                "value": {
                  "faultCode": "P1022",
                  "headerMessage": "Input error",
                  "bodyMessage": "Your request failed due to an input validation error.",
                  "correlationId": "612b32bf-e5f7-4f14-9a0f-0d4a66f156af",
                  "uiType": 3,
                  "innerError": "startDate can't be in the past (startDate: 07/12/2022; Today: 02/11/2025 (mm/dd/yyyy))"
                }
              }
            }
          }
        }
      },
      "InternalServerError-CreatePolicy": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "faultCode": {
                  "type": "string"
                },
                "headerMessage": {
                  "type": "string"
                },
                "bodyMessage": {
                  "type": "string"
                },
                "correlationId": {
                  "type": "string",
                  "format": "uuid"
                },
                "uiType": {
                  "type": "integer",
                  "example": 3
                },
                "debug_info": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "error_code": {
                        "type": "string"
                      },
                      "reason": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "example1": {
                "summary": "Error response when debug param is true",
                "value": {
                  "faultCode": "1101",
                  "headerMessage": "We couldn't apply your changes",
                  "bodyMessage": "Please try again in a few minutes. If that doesn't work, contact CyberArk support.",
                  "correlationId": "ffab89bd-6c4a-4f9d-8101-5a5ae08e2a6a",
                  "uiType": 3,
                  "debug_info": [
                    {
                      "name": "POLICY_CREATE_STARTED",
                      "status": "Failure",
                      "error_code": "1101",
                      "reason": "Please try again in a few minutes. If that doesn't work, contact CyberArk support."
                    }
                  ]
                }
              },
              "example2": {
                "summary": "Error response when debug param is false",
                "value": {
                  "faultCode": "1101",
                  "headerMessage": "We couldn't apply your changes",
                  "bodyMessage": "Please try again in a few minutes. If that doesn't work, contact CyberArk support.",
                  "correlationId": "ffab89bd-6c4a-4f9d-8101-5a5ae08e2a6a",
                  "uiType": 3
                }
              }
            }
          }
        }
      },
      "List-Of-Policies": {
        "description": "Successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Query AWS IAM policy - AWS account": {
                  "total": 1,
                  "hits": [
                    {
                      "tenantId": "abcd1234-1234-5678-a659-233a917ea2c7",
                      "name": "policy for dev ops group",
                      "status": 1,
                      "description": "Policies",
                      "creationDate": "2022-06-21T14:50:04.579024+00:00",
                      "lastChanged": "2022-06-21T14:50:04.579024+00:00",
                      "cloudProvider": 0,
                      "policyId": "aws_1234abcd-e123-123a-b5d5-12e39c1455fa",
                      "targetAttributes": [],
                      "startDate": "string",
                      "expirationDate": "string",
                      "accessRules": {
                        "days": [
                          0,
                          1,
                          2,
                          3,
                          4,
                          5,
                          6
                        ],
                        "fromTime": "string",
                        "toTime": "string",
                        "maxSessionDuration": 1,
                        "timeZone": "Asia/Jerusalem"
                      },
                      "entities": [
                        {
                          "entityId": "1a2b3456-1234-12f3-abc5-ad7bfe21bc15",
                          "entityName": "John.S@company.com",
                          "entityType": 1,
                          "entitySourceId": "ABCD1234-123A-456A-AB03-65766D55B05E",
                          "entitySourceName": "CyberArk Cloud Directory",
                          "entityDisplayName": "John Smith",
                          "entityClass": "user",
                          "entityEmail": "string"
                        },
                        {
                          "entityId": "arn:aws:iam::123451234567:role/examplerole",
                          "entityName": "examplerole",
                          "entityType": 0,
                          "entitySourceId": "123451234567",
                          "entitySourceName": "Dev",
                          "exposureLevel": 43,
                          "organizationId": "string",
                          "workspaceType": "string",
                          "roleType": "string",
                          "rolePackage": "string"
                        }
                      ],
                      "exposure": 100,
                      "faultCode": "number",
                      "statusTooltipMessage": "string"
                    }
                  ]
                }
              },
              "properties": {
                "total": {
                  "type": "integer",
                  "description": "The number of policies that were returned"
                },
                "hits": {
                  "type": "array",
                  "description": "List of policies, with each policy in JSON format",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tenantId": {
                        "type": "string",
                        "description": "The unique ID (UUID) of the CyberArk tenant (for example, a123b123-1234-5678-a459-233a917ea2c7)"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the policy"
                      },
                      "status": {
                        "type": "integer",
                        "description": "Filter by policies that have a specific status\n\nSupported values:\n\nActive = 1, Expired = 3, Error = 4, Warning = 5, Validating = 6"
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the policy"
                      },
                      "creationDate": {
                        "type": "string",
                        "description": "The date and time when the policy was created, in ISO format (for example, 2022-06-21T14:50:04.579024+00:00)"
                      },
                      "lastChanged": {
                        "type": "string",
                        "description": "The date and time when the policy was last updated, in ISO format (for example, 2022-06-21T14:50:04.579024+00:00)"
                      },
                      "cloudProvider": {
                        "type": "integer",
                        "description": "The cloud environment that the policy applies to\n\nSupported values:\n\nAWS = 0, Google Cloud = 1, Azure resource = 2, AWS IAM IDC = 3, Microsoft Entra ID = 4"
                      },
                      "policyId": {
                        "type": "string",
                        "description": "The unique ID of the policy"
                      },
                      "targetAttributes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Key-value pairs that specify the AWS assets to which the policy applies (for example, [{\"name\": \"env\", \"value\": \"prod\", \"isCustom\": true}]",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the tag. For example, 'color'"
                            },
                            "value": {
                              "type": "string",
                              "description": "The value of the tag. For example, 'blue'"
                            },
                            "isCustom": {
                              "type": "boolean",
                              "description": "true"
                            }
                          }
                        }
                      },
                      "startDate": {
                        "type": "string",
                        "description": "(Optional) Date and time when the policy becomes active, in ISO format (for example, 2022-07-12T00:00:00.000Z)"
                      },
                      "expirationDate": {
                        "type": "string",
                        "description": "(Optional) Date and time when the policy expires, in ISO format (for example, 2022-10-10T00:00:00.000Z)"
                      },
                      "accessRules": {
                        "type": "object",
                        "description": "Set of rules that specify who can access the environment and when",
                        "properties": {
                          "days": {
                            "type": "array",
                            "description": "A comma-separated array defining the days of the week when a user can access the environment.<br>Allowed values: 0-6, where Sunday=0, Monday=1, Tuesday=2, Wednesday=3, Thursday=4, Friday=5, Saturday=6 (for example, [1, 2, 3])",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "fromTime": {
                            "type": "string",
                            "description": "(Optional) Time of day from which the user can access the environment, in hh:mm:ss 24-hr format (for example, 7:00 AM is 07:00:00)"
                          },
                          "toTime": {
                            "type": "string",
                            "description": "(Optional) Time of day after which access to the environment becomes unavailable, in hh:mm:ss 24-hr format (for example, 8:00 PM is 20:00:00). A user can connect to the environment right up until this time, even if the session itself goes past this time"
                          },
                          "maxSessionDuration": {
                            "type": "integer",
                            "description": "Maximum allowed length (in hours) of the user session (1 - 24 hours, not more than the time defined in the AWS IAM roles or permission sets)"
                          },
                          "timeZone": {
                            "type": "string",
                            "description": "A time zone identifier representing the time zone of the client host machine (for example, Asia/Jerusalem)"
                          }
                        }
                      },
                      "entities": {
                        "type": "array",
                        "description": "List of cloud entities (CyberArk identity and cloud role) to which the policy applies",
                        "items": {
                          "type": "object",
                          "description": "CyberArk identity cloud entity fields",
                          "properties": {
                            "entityId": {
                              "type": "string",
                              "description": "1 (CyberArk identity):\n\n- Internal UUID of the cloud entity\n\n0 (Cloud provider):\n\n- AWS: The IAM role ARN (for example, arn:aws:iam::123451234567:role/examplerole) or AWS IAM Identity Center permission set (for example, arn:aws:sso:::permissionSet/ssoins-12345aabbccc3b3b/ab-12cdef34ger1234n)\n\n- Azure resource: Path of the roleDefinition in Azure (for example, /subscriptions/xxxxxxx/providers/Microsoft.Authorization/roleDefinitions/abcd1234-1234-4abc-b32c-fc0c6f0c6bd9)\n\n- Azure - Microsoft Entra ID: The unique identifier of the cloud role (a GUID)\n\n- Google Cloud: The cloud role name and hierarchy structure (for example, projects/cybrsca-dev/roles/CustomRole)"
                            },
                            "entityName": {
                              "type": "string",
                              "description": "CyberArk identity: Full user principal name (for example, user@domain.com)\n\nCloud provider: The cloud role name ('ExampleRole' or 'CustomRole')"
                            },
                            "entityType": {
                              "type": "integer",
                              "description": "Value = 1 (CyberArk identity)"
                            },
                            "entitySourceId": {
                              "type": "string",
                              "description": "1 (CyberArk identity):\n\n- User directory service ID\n\n0 (cloud provider):\n\n- AWS: The account ID associated with the role (for example, 123456654321)\n\n- Azure resource: The scope where the role is applied, provided as a path (for example, the path for a management group scope may be providers/Microsoft.Management/managementGroups/abcd1234-123a-123e-abcd-b3f62876ec6aw, while the path for a subscription scope or lower may be /subscriptions/1234abcd-012a-12c3-ace1-f3263530fd72/resourceGroups/cloud-shell-storage-westeurope/providers/Microsoft.Storage/storageAccounts/csb10032002529a3d5e)\n\n- Azure - Microsoft Entra ID: Azure tenant ID\n\n- Google Cloud: The name of the source organization, folder, or project depending on the workspaceType (for example, cybrsca-dev)"
                            },
                            "entitySourceName": {
                              "type": "string",
                              "description": "The source of the cloud entity in CyberArk Identity\n\nSupported values:\n\n'CyberArk Cloud Directory' and 'Federated Directory Service'"
                            },
                            "entityDisplayName": {
                              "type": "string",
                              "description": "The display name of the cloud entity (user, role or group)"
                            },
                            "entityClass": {
                              "type": "string",
                              "description": "Supported values: 'user', 'role', and 'group'"
                            },
                            "entityEmail": {
                              "type": "string",
                              "description": "The email address of the CyberArk identity user (cloud entity)"
                            },
                            "exposureLevel": {
                              "type": "integer"
                            },
                            "organizationId": {
                              "type": "string",
                              "description": "Azure resource: the Azure tenant ID (UUID)\n\nMicrosoft Entra ID: Azure tenant ID\n\nGoogle Cloud: Google Cloud organization ID"
                            },
                            "workspaceType": {
                              "type": "string",
                              "description": "Azure resource: Management group level role - 'management_group', Subscription level (and lower) - 'resource'\n\nGoogle Cloud: Supported values: 'gcp_organization', 'folder', and 'project'"
                            },
                            "roleType": {
                              "type": "string",
                              "description": "(Google Cloud policies only) Supported values: Predefined = 0, Custom = 1, Basic = 2"
                            },
                            "rolePackage": {
                              "type": "string",
                              "description": "(Google Cloud policies only) The Google Cloud package associated with the role"
                            }
                          }
                        }
                      },
                      "faultCode": {
                        "type": "number",
                        "description": "If there is an error when a policy is created, edited, or deleted, the faultCode number indicates the reason for the failure"
                      },
                      "statusTooltipMessage": {
                        "type": "string",
                        "description": "If there is an error related to a policy, this field returns the error message that correlates with the faultCode"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "Query AWS IAM policy - AWS account": {
                "value": {
                  "total": 1,
                  "hits": [
                    {
                      "tenantId": "abcd1234-1234-1234-a123-123a817ea2c7",
                      "name": "policy for dev ops group",
                      "status": 1,
                      "description": "Policies",
                      "creationDate": "2022-06-21T14:50:04.579024+00:00",
                      "lastChanged": "2022-06-21T14:50:04.579024+00:00",
                      "cloudProvider": 0,
                      "policyId": "aws_7eb12345-e678-1a23-b5d5-12e39c1455fa",
                      "targetAttributes": [],
                      "startDate": "string",
                      "expirationDate": "string",
                      "accessRules": {
                        "days": [
                          0,
                          1,
                          2,
                          3,
                          4,
                          5,
                          6
                        ],
                        "fromTime": "string",
                        "toTime": "string",
                        "maxSessionDuration": 1,
                        "timeZone": "Asia/Jerusalem"
                      },
                      "entities": [
                        {
                          "entityId": "1a2b3456-1234-12f3-abc5-ad7bfe21bc15",
                          "entityName": "John.S@company.com",
                          "entityType": 1,
                          "entitySourceId": "1234ABCD-ABC1-465F-AB03-65766D55B05E",
                          "entitySourceName": "CyberArk Cloud Directory",
                          "entityDisplayName": "John Smith",
                          "entityClass": "user",
                          "entityEmail": null
                        },
                        {
                          "entityId": "arn:aws:iam::123451234567:role/examplerole",
                          "entityName": "examplerole",
                          "entityType": 0,
                          "entitySourceId": "123451234567",
                          "entitySourceName": "Dev",
                          "exposureLevel": 43,
                          "organizationId": null,
                          "workspaceType": null,
                          "roleType": null,
                          "rolePackage": null
                        }
                      ],
                      "faultCode": 1001,
                      "statusTooltipMessage": "message"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "Discovery": {
        "description": "Successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Successful response": {
                  "jobId": "abcd1234-1234-1234-a123-255a917ea2c7",
                  "alreadyRunning": false,
                  "status": 200
                }
              },
              "properties": {
                "jobId": {
                  "type": "string",
                  "description": "The job ID, which can be used in the Get job status API to continue tracking the status"
                },
                "alreadyRunning": {
                  "type": "boolean",
                  "description": "Indicates whether the discovery process is already active. If so, the user should try again later."
                },
                "status": {
                  "type": "integer",
                  "description": "Response status code"
                }
              }
            },
            "example": {
              "jobId": "abcd1234-1234-1234-a123-255a917ea2c7",
              "alreadyRunning": false,
              "status": 200
            }
          }
        }
      },
      "Discovery400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "faultCode": {
                  "type": "string"
                },
                "headerMessage": {
                  "type": "string"
                },
                "bodyMessage": {
                  "type": "string"
                },
                "correlationId": {
                  "type": "string"
                },
                "uiType": {
                  "type": "integer"
                },
                "innerError": {
                  "type": "string"
                },
                "debug_info": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "error_code": {
                        "type": "string"
                      },
                      "reason": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "example1": {
                "summary": "Error response when debug param is true",
                "value": {
                  "faultCode": "P1022",
                  "headerMessage": "Input error",
                  "bodyMessage": "Your request failed due to an input validation error.",
                  "correlationId": "612b32bf-e5f7-4f14-9a0f-0d4a66f156af",
                  "uiType": 3,
                  "innerError": "Discovery request missing or mismatched mandatory field in the request object. Verify the values provided for 'csp', 'organization_id' and 'account_info'.",
                  "debug_info": [
                    {
                      "name": "VALIDATION",
                      "status": "Failure",
                      "error_code": "P1022",
                      "reason": "Discovery request missing or mismatched mandatory field in the request object. Verify the values provided for 'csp', 'organization_id' and 'account_info'."
                    }
                  ]
                }
              },
              "example2": {
                "summary": "Error response when debug param is false",
                "value": {
                  "faultCode": "P1022",
                  "headerMessage": "Input error",
                  "bodyMessage": "Your request failed due to an input validation error.",
                  "correlationId": "612b32bf-e5f7-4f14-9a0f-0d4a66f156af",
                  "uiType": 3,
                  "innerError": "Discovery request missing or mismatched mandatory field in the request object. Verify the values provided for 'csp', 'organization_id' and 'account_info'."
                }
              }
            }
          }
        }
      },
      "Validate": {
        "description": "Successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Successful response": {
                  "jobId": "1234abcd-1234-1234-a123-233a917ea2c7"
                }
              },
              "properties": {
                "jobId": {
                  "type": "string",
                  "description": "The job ID, which can be used in the Get job status API to continue tracking the status"
                }
              }
            },
            "example": {
              "jobId": "1234abcd-1234-1234-a123-233a917ea2c7"
            }
          }
        }
      },
      "InternalServerError-Validate": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "faultCode": {
                  "type": "string"
                },
                "headerMessage": {
                  "type": "string"
                },
                "bodyMessage": {
                  "type": "string"
                },
                "correlationId": {
                  "type": "string"
                },
                "uiType": {
                  "type": "integer"
                },
                "innerError": {
                  "type": "string"
                },
                "debug_info": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "error_code": {
                        "type": "string"
                      },
                      "reason": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "example1": {
                "summary": "Error response when debug param is true",
                "value": {
                  "faultCode": 1001,
                  "headerMessage": "Oops! Something went wrong",
                  "bodyMessage": "Please try again in a few minutes. If that doesn't work, contact CyberArk support.",
                  "correlationId": "612b32bf-e5f7-4f14-9a0f-0d4a66f156af",
                  "uiType": 3,
                  "debug_info": [
                    {
                      "name": "Unknown",
                      "status": "Failure",
                      "error_code": 1001,
                      "reason": null
                    }
                  ]
                }
              },
              "example2": {
                "summary": "Error response when debug param is false",
                "value": {
                  "faultCode": 1001,
                  "headerMessage": "Oops! Something went wrong",
                  "bodyMessage": "Please try again in a few minutes. If that doesn't work, contact CyberArk support.",
                  "correlationId": "612b32bf-e5f7-4f14-9a0f-0d4a66f156af",
                  "uiType": 3
                }
              }
            }
          }
        }
      },
      "Get-Policy-Response": {
        "description": "Successful response",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Get-Policy-v2"
                },
                {
                  "$ref": "#/components/schemas/Get-Policy-v1"
                }
              ]
            },
            "examples": {
              "Get AWS IAM policy - AWS account": {
                "value": {
                  "policyId": "123456",
                  "csp": "AWS",
                  "name": "finance",
                  "description": "End-of-year calculations",
                  "startDate": "2022-07-12T00:00:00.000Z",
                  "endDate": "2022-10-10T00:00:00.000Z",
                  "policy_type": "pre_defined",
                  "roles": [
                    {
                      "entityId": "arn:aws:iam::123451234567:role/examplerole",
                      "workspaceType": null,
                      "entitySourceId": "123451234567",
                      "organization_id": null
                    }
                  ],
                  "identities": [
                    {
                      "entityName": "John.D",
                      "entitySourceId": "09B9A9B0-6CE8-465F-AB03-65766D55B05E",
                      "entityClass": "user"
                    }
                  ],
                  "accessRules": {
                    "days": [
                      "Sunday",
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday",
                      "Saturday"
                    ],
                    "fromTime": null,
                    "toTime": null,
                    "maxSessionDuration": 1,
                    "timeZone": "Asia/Jerusalem"
                  }
                }
              },
              "Get Azure resource policy for specific resource": {
                "value": {
                  "policyId": "123456",
                  "csp": "AZURE",
                  "name": "finance",
                  "description": "End-of-year calculations",
                  "startDate": "2022-07-12T00:00:00.000Z",
                  "endDate": "2022-10-10T00:00:00.000Z",
                  "policy_type": "pre_defined",
                  "roles": [
                    {
                      "entityId": "/subscriptions/c1234567-ebe6-49f6-a190-b0a8f8753b57/providers/Microsoft.Authorization/roleDefinitions/1f12345f-1234-56b7-9ce7-9b123b123ba4",
                      "workspaceType": "resource",
                      "entitySourceId": "/subscriptions/c1234567-ebe6-49f6-a190-b0a8f8753b57/resourceGroups/example-resource-group/providers/Microsoft.ManagedIdentity/userAssignedIdentities/example-resource",
                      "organization_id": "a1b2c3d4-66d2-4bc9-abc2-123456gg1234"
                    }
                  ],
                  "identities": [
                    {
                      "entityName": "John.D",
                      "entitySourceId": "09B9A9B0-6CE8-465F-AB03-65766D55B05E",
                      "entityClass": "user"
                    }
                  ],
                  "accessRules": {
                    "days": [
                      "Sunday",
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday",
                      "Saturday"
                    ],
                    "fromTime": null,
                    "toTime": null,
                    "maxSessionDuration": 1,
                    "timeZone": "Asia/Jerusalem"
                  }
                }
              },
              "Get Google Cloud policy for specific project": {
                "value": {
                  "policyId": "123456",
                  "csp": "GCP",
                  "name": "finance",
                  "description": "End-of-year calculations",
                  "startDate": "2022-07-12T00:00:00.000Z",
                  "endDate": "2022-10-10T00:00:00.000Z",
                  "policy_type": "pre_defined",
                  "roles": [
                    {
                      "entityId": "roles/actions.Admin",
                      "workspaceType": "project",
                      "entitySourceId": "example-project-name",
                      "organization_id": "123451234567"
                    }
                  ],
                  "identities": [
                    {
                      "entityName": "John.D",
                      "entitySourceId": "09B9A9B0-6CE8-465F-AB03-65766D55B05E",
                      "entityClass": "user"
                    }
                  ],
                  "accessRules": {
                    "days": [
                      "Sunday",
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday",
                      "Saturday"
                    ],
                    "fromTime": null,
                    "toTime": null,
                    "maxSessionDuration": 1,
                    "timeZone": "Asia/Jerusalem"
                  }
                }
              }
            }
          }
        }
      },
      "InternalServerError-GetPolicyAndQueryPolicies": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "faultCode": {
                  "type": "string"
                },
                "headerMessage": {
                  "type": "string"
                },
                "bodyMessage": {
                  "type": "string"
                },
                "correlationId": {
                  "type": "string"
                },
                "uiType": {
                  "type": "integer"
                },
                "innerError": {
                  "type": "string"
                },
                "debug_info": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "error_code": {
                        "type": "string"
                      },
                      "reason": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "example1": {
                "summary": "Error response when debug param is true",
                "value": {
                  "faultCode": 1100,
                  "headerMessage": "We're having trouble retrieving policies from the server.",
                  "bodyMessage": "Try refreshing the page. If that doesn't work, contact CyberArk Support.",
                  "correlationId": "612b32bf-e5f7-4f14-9a0f-0d4a66f156af",
                  "uiType": 3,
                  "debug_info": [
                    {
                      "name": "Unknown",
                      "status": "Failure",
                      "error_code": 1100,
                      "reason": null
                    }
                  ]
                }
              },
              "example2": {
                "summary": "Error response when debug param is false",
                "value": {
                  "faultCode": 1100,
                  "headerMessage": "We're having trouble retrieving policies from the server.",
                  "bodyMessage": "Try refreshing the page. If that doesn't work, contact CyberArk Support.",
                  "correlationId": "612b32bf-e5f7-4f14-9a0f-0d4a66f156af",
                  "uiType": 3
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "status": {
        "name": "status",
        "in": "query",
        "required": false,
        "schema": {
          "type": "number",
          "enum": [
            1,
            3,
            4,
            6
          ]
        },
        "description": "Filter on policies that have a specific status\n\nSupported values:\n\n Active = 1, Expired = 3, Error = 4, Validating = 6"
      },
      "free_text": {
        "name": "free_text",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Search for free text in the supported policy fields:\n\nName, description, entity name, organization ID,  cloud provider, status, account name"
      },
      "cloud_provider": {
        "name": "cloud_provider",
        "in": "query",
        "required": false,
        "schema": {
          "type": "number",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ]
        },
        "description": "Filter by the cloud provider that the policy applies to\n\nSupported values:\n\nAWS (IAM) = 0, Google Cloud = 1, Azure (resource) = 2, AWS (IAM Identity Center) = 3, Azure (Microsoft Entra ID) = 4"
      },
      "debug": {
        "name": "debug",
        "in": "query",
        "required": false,
        "schema": {
          "type": "boolean"
        },
        "description": "(Optional) Enable debug mode for additional troubleshooting information. \n\n**Default** :  false"
      },
      "identities": {
        "name": "identities",
        "in": "query",
        "required": true,
        "schema": {
          "type": "object",
          "properties": {
            "user_principal_name": {
              "type": "string"
            },
            "directory_source_id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          }
        },
        "description": "Cloud account id"
      },
      "roles": {
        "name": "roles",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string",
          "properties": {
            "role_id": {
              "type": "string"
            }
          }
        },
        "description": "Cloud account id"
      }
    },
    "requestBodies": {
      "Create-Policy-v1": {
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Create-Policy-v1"
                },
                {
                  "$ref": "#/components/schemas/Create-Policy-v2"
                }
              ]
            },
            "examples": {
              "Create AWS IAM policy - AWS account": {
                "value": {
                  "name": "finance",
                  "description": "End-of-year calculations",
                  "startDate": "2022-07-12T00:00:00.000Z",
                  "expirationDate": "2022-10-10T00:00:00.000Z",
                  "cloudProvider": 0,
                  "entities": [
                    {
                      "entityId": "1234abcd-1234-123a-1abc-123456abcdef",
                      "entityName": "John.D@domain.cloud.8627",
                      "entityDisplayName": "John.Doe",
                      "entityType": 1,
                      "entitySourceId": "A1B2C3D4-1AB2-465F-AB03-12345D55B05E",
                      "entitySourceName": "CyberArk Cloud Directory",
                      "entityClass": "user",
                      "exposureLevel": "0",
                      "risks": []
                    },
                    {
                      "entityId": "arn:aws:iam::123451234567:role/ExampleRole",
                      "entityName": "ExampleRole",
                      "entityDisplayName": "ExampleRole",
                      "entityType": 0,
                      "entitySourceId": "123451234567",
                      "exposureLevel": "39",
                      "entitySourceName": "dev",
                      "risks": []
                    }
                  ],
                  "targetAttributes": [
                    {
                      "name": "env",
                      "value": "prod",
                      "isCustom": true
                    }
                  ],
                  "accessRules": {
                    "days": [
                      0,
                      1,
                      2,
                      3
                    ],
                    "fromTime": "08:00",
                    "toTime": "17:00",
                    "maxSessionDuration": 2,
                    "timeZone": "Asia/Jerusalem"
                  }
                }
              }
            }
          }
        },
        "description": ""
      },
      "Create-Policy-v2": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Create AWS IAM policy - AWS account": {
                  "csp": "AWS",
                  "name": "finance",
                  "description": "End-of-year calculations",
                  "startDate": "2022-07-12T00:00:00.000Z",
                  "endDate": "2022-10-10T00:00:00.000Z",
                  "roles": [
                    {
                      "entityId": "arn:aws:iam::123451234567:role/examplerole",
                      "workspaceType": null,
                      "entitySourceId": "123451234567",
                      "organization_id": null
                    }
                  ],
                  "identities": [
                    {
                      "entityName": "John.D@company.com",
                      "entitySourceId": "A1B2C3D4-1AB2-465F-AB03-12345D55B05E",
                      "entityClass": "user"
                    }
                  ],
                  "accessRules": {
                    "days": [
                      "Sunday",
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday",
                      "Saturday"
                    ],
                    "fromTime": null,
                    "toTime": null,
                    "maxSessionDuration": 1,
                    "timeZone": "Asia/Jerusalem"
                  }
                }
              },
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the policy",
                  "maxLength": 200,
                  "pattern": "^[A-Za-z0-9-@ _!.+-\\\\s]{1,200}$"
                },
                "description": {
                  "type": "string",
                  "description": "The description of the policy",
                  "maxLength": 200,
                  "pattern": "^[A-Za-z0-9-@ _!^[{}.+-\\]$\\\\s]{0,200}$"
                },
                "startDate": {
                  "type": "string",
                  "description": "(Optional) The date and time when the policy becomes active, in ISO format (for example, 2022-07-12T00:00:00.000Z)"
                },
                "endDate": {
                  "type": "string",
                  "description": "(Optional) The date and time when the policy expires, in ISO format (for example, 2022-10-10T00:00:00.000Z)"
                },
                "csp": {
                  "type": "string",
                  "description": "The cloud environment that the policy applies to ('AWS','GCP','AZURE')"
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Specify at least one cloud role entity",
                    "properties": {
                      "entityId": {
                        "type": "string",
                        "description": "AWS: The IAM role ARN (for example, arn:aws:iam::123451234567:role/examplerole) or AWS IAM Identity Center permission set (for example, arn:aws:sso:::permissionSet/ssoins-12345aabbccc3b3b/ab-12cdef34ger1234n)\n\nAzure resource: Path of the roleDefinition in Azure (for example, /subscriptions/xxxxxxx/providers/Microsoft.Authorization/roleDefinitions/c025889f-8102-4ebf-b32c-fc0c6f0c6bd9)\n\nAzure - Microsoft Entra ID: The unique identifier of the cloud role (a GUID)\n\nGoogle Cloud: The cloud role name and hierarchy structure (for example, projects/dev/roles/cloudsql.client)"
                      },
                      "workspaceType": {
                        "type": "string",
                        "description": "AWS: Supported value: 'account' (required only in AWS IAM Identity Center)\n\nAzure: Supported values: 'directory', 'management_group', 'subscription', 'resource_group' and 'resource'\n\nGoogle Cloud: Supported values: 'gcp_organization', 'folder', and 'project'"
                      },
                      "entitySourceId": {
                        "type": "string",
                        "description": "AWS: The account ID associated with the role (for example, 123451234567)\n\nAzure resource: The scope where the role is applied, provided as a path (for example, the path for a management group scope may be providers/Microsoft.Management/managementGroups/1234abcd-abc1-123a-abcd-b3f62876ec6aw, while the path for a subscription scope or lower may be /subscriptions/1234abcd-123a-12ab-ace1-f3263530fd72/resourceGroups/cloud-shell-storage-westeurope/providers/Microsoft.Storage/storageAccounts/csb10032002529a3d5e)\n\nAzure - Microsoft Entra ID: Azure tenant ID\n\nGoogle Cloud: The ID of the source organization, folder, or project depending on the workspaceType (for example, 123457654321 or cybrsca-dev)"
                      },
                      "organizationId": {
                        "type": "string",
                        "description": "AWS: Management account ID (required only for AWS organizations (with or without IAM Identity Center))\n\nAzure - Microsoft Entra ID: Azure tenant ID (UUID)\n\nGoogle Cloud: Google Cloud organization ID"
                      }
                    }
                  }
                },
                "identities": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Specify at least one CyberArk identity cloud entity",
                    "properties": {
                      "entityName": {
                        "type": "string",
                        "description": "Full user principal name (for example, user@domain.com)"
                      },
                      "entitySourceId": {
                        "type": "string",
                        "description": "User directory service ID (UUID format, for example 12A3B4C0-A3B0-465A-ABC3-12345D67B89E)"
                      },
                      "entityClass": {
                        "type": "string",
                        "description": "Supported values: 'user', 'role', and 'group'"
                      }
                    }
                  }
                },
                "accessRules": {
                  "type": "object",
                  "description": "(Optional) Set of rules that specify exactly when the policy is active",
                  "properties": {
                    "days": {
                      "type": "array",
                      "description": "Days of the week, comma-separated (for example, [Monday, Tuesday, Wednesday])",
                      "items": {
                        "type": "string"
                      }
                    },
                    "fromTime": {
                      "type": "string",
                      "description": "(Optional) Time of day when the policy becomes active in hh:mm:ss 24-hr format (for example, 7:00 AM is 07:00:00)"
                    },
                    "toTime": {
                      "type": "string",
                      "description": "(Optional) Time of day when the policy becomes inactive in hh:mm:ss 24-hr format (for example, 8:00 PM is 20:00:00)"
                    },
                    "maxSessionDuration": {
                      "type": "integer",
                      "description": "Maximum allowed length (in hours) of the user session (1 - 24 hours, not more than the time defined in the AWS IAM roles or permission sets)"
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "A time zone identifier representing the time zone of the client host machine (for example, Asia/Jerusalem)"
                    }
                  }
                }
              }
            },
            "examples": {
              "Create AWS IAM policy - AWS account": {
                "value": {
                  "csp": "AWS",
                  "name": "finance",
                  "description": "End-of-year calculations",
                  "startDate": "2022-07-12T00:00:00.000Z",
                  "endDate": "2022-10-10T00:00:00.000Z",
                  "roles": [
                    {
                      "entityId": "arn:aws:iam::123451234567:role/examplerole",
                      "entitySourceId": "123451234567",
                      "workspaceType": null,
                      "organization_id": null
                    }
                  ],
                  "identities": [
                    {
                      "entityName": "John.D@company.com",
                      "entitySourceId": "A1B2C3D4-1AB2-465F-AB03-12345D55B05E",
                      "entityClass": "user"
                    }
                  ],
                  "accessRules": {
                    "days": [
                      "Sunday",
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday",
                      "Saturday"
                    ],
                    "fromTime": null,
                    "toTime": null,
                    "maxSessionDuration": 1,
                    "timeZone": "Asia/Jerusalem"
                  }
                }
              },
              "Create AWS IAM Identity Center policy": {
                "value": {
                  "csp": "AWS",
                  "name": "finance",
                  "description": "End-of-year calculations",
                  "startDate": "2022-07-12T00:00:00.000Z",
                  "endDate": "2022-10-10T00:00:00.000Z",
                  "roles": [
                    {
                      "entityId": "arn:aws:sso:::permissionSet/ssoins-12345c6f78cd9f5e/ps-12f3a456f1234567",
                      "workspaceType": "account",
                      "entitySourceId": "123451234567",
                      "organization_id": "123451234567"
                    }
                  ],
                  "identities": [
                    {
                      "entityName": "John.D@company.com",
                      "entitySourceId": "A1B2C3D4-1AB2-465F-AB03-12345D55B05E",
                      "entityClass": "user"
                    }
                  ],
                  "accessRules": {
                    "days": [
                      "Sunday",
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday",
                      "Saturday"
                    ],
                    "fromTime": null,
                    "toTime": null,
                    "maxSessionDuration": 1,
                    "timeZone": "Asia/Jerusalem"
                  }
                }
              },
              "Create AWS IAM policy - AWS org without Identity Center": {
                "value": {
                  "csp": "AWS",
                  "name": "finance",
                  "description": "End-of-year calculations",
                  "startDate": "2022-07-12T00:00:00.000Z",
                  "endDate": "2022-10-10T00:00:00.000Z",
                  "roles": [
                    {
                      "entityId": "arn:aws:iam::123456789012:role/example-role",
                      "entitySourceId": "123456654321",
                      "workspaceType": null,
                      "organizationId": "123456654321"
                    }
                  ],
                  "identities": [
                    {
                      "entityName": "John.D@company.com",
                      "entitySourceId": "A1B2C3D4-1AB2-465F-AB03-12345D55B05E",
                      "entityClass": "user"
                    }
                  ],
                  "accessRules": {
                    "days": [
                      "Sunday",
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday",
                      "Saturday"
                    ],
                    "fromTime": null,
                    "toTime": null,
                    "maxSessionDuration": 1,
                    "timeZone": "Asia/Jerusalem"
                  }
                }
              },
              "Create Azure-Microsoft Entra ID policy - directory-level access": {
                "value": {
                  "csp": "AZURE",
                  "name": "finance",
                  "description": "End-of-year calculations",
                  "startDate": "2022-07-12T00:00:00.000Z",
                  "endDate": "2022-10-10T00:00:00.000Z",
                  "roles": [
                    {
                      "entityId": "1a2b3c4d-2cd3-44c7-9d02-a6bc2d5ef5g3",
                      "workspaceType": "directory",
                      "entitySourceId": "a1b2c3d4-66d2-4bc9-abc2-123456gg1234",
                      "organization_id": "a1b2c3d4-66d2-4bc9-abc2-123456gg1234"
                    }
                  ],
                  "identities": [
                    {
                      "entityName": "John.D@company.com",
                      "entitySourceId": "A1B2C3D4-1AB2-465F-AB03-12345D55B05E",
                      "entityClass": "user"
                    }
                  ],
                  "accessRules": {
                    "days": [
                      "Sunday",
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday",
                      "Saturday"
                    ],
                    "fromTime": null,
                    "toTime": null,
                    "maxSessionDuration": 1,
                    "timeZone": "Asia/Jerusalem"
                  }
                }
              },
              "Create Azure resource policy - management group access": {
                "value": {
                  "csp": "AZURE",
                  "name": "finance",
                  "description": "End-of-year calculations",
                  "startDate": "2022-07-12T00:00:00.000Z",
                  "endDate": "2022-10-10T00:00:00.000Z",
                  "roles": [
                    {
                      "entityId": "/providers/Microsoft.Authorization/roleDefinitions/1a2b3c4d-2cd3-44c7-9d02-a6bc2d5ef5g3",
                      "workspaceType": "management_group",
                      "entitySourceId": "providers/Microsoft.Management/managementGroups/example-management-group",
                      "organization_id": "a1b2c3d4-66d2-4bc9-abc2-123456gg1234"
                    }
                  ],
                  "identities": [
                    {
                      "entityName": "John.D@company.com",
                      "entitySourceId": "A1B2C3D4-1AB2-465F-AB03-12345D55B05E",
                      "entityClass": "user"
                    }
                  ],
                  "accessRules": {
                    "days": [
                      "Sunday",
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday",
                      "Saturday"
                    ],
                    "fromTime": null,
                    "toTime": null,
                    "maxSessionDuration": 1,
                    "timeZone": "Asia/Jerusalem"
                  }
                }
              },
              "Create Azure resource policy - subscription access": {
                "value": {
                  "csp": "AZURE",
                  "name": "finance",
                  "description": "End-of-year calculations",
                  "startDate": "2022-07-12T00:00:00.000Z",
                  "endDate": "2022-10-10T00:00:00.000Z",
                  "roles": [
                    {
                      "entityId": "/subscriptions/c1234567-ebe6-49f6-a190-b0a8f8753b57/providers/Microsoft.Authorization/roleDefinitions/12345d67-12f3-1234-b1c2-d1ce2e3456dd",
                      "workspaceType": "subscription",
                      "entitySourceId": "subscriptions/c1234567-ebe6-49f6-a190-b0a8f8753b57",
                      "organization_id": "a1b2c3d4-66d2-4bc9-abc2-123456gg1234"
                    }
                  ],
                  "identities": [
                    {
                      "entityName": "John.D@company.com",
                      "entitySourceId": "A1B2C3D4-1AB2-465F-AB03-12345D55B05E",
                      "entityClass": "user"
                    }
                  ],
                  "accessRules": {
                    "days": [
                      "Sunday",
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday",
                      "Saturday"
                    ],
                    "fromTime": null,
                    "toTime": null,
                    "maxSessionDuration": 1,
                    "timeZone": "Asia/Jerusalem"
                  }
                }
              },
              "Create Azure resource policy - resource group access": {
                "value": {
                  "csp": "AZURE",
                  "name": "finance",
                  "description": "End-of-year calculations",
                  "startDate": "2022-07-12T00:00:00.000Z",
                  "endDate": "2022-10-10T00:00:00.000Z",
                  "roles": [
                    {
                      "entityId": "/subscriptions/c1234567-ebe6-49f6-a190-b0a8f8753b57/providers/Microsoft.Authorization/roleDefinitions/18d7d88d-d35e-4fb5-a5c3-7773c20a72d9",
                      "workspaceType": "resource_group",
                      "entitySourceId": "/subscriptions/c1234567-ebe6-49f6-a190-b0a8f8753b57/resourceGroups/example-resource-group",
                      "organization_id": "a1b2c3d4-66d2-4bc9-abc2-123456gg1234"
                    }
                  ],
                  "identities": [
                    {
                      "entityName": "John.D@company.com",
                      "entitySourceId": "A1B2C3D4-1AB2-465F-AB03-12345D55B05E",
                      "entityClass": "user"
                    }
                  ],
                  "accessRules": {
                    "days": [
                      "Sunday",
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday",
                      "Saturday"
                    ],
                    "fromTime": null,
                    "toTime": null,
                    "maxSessionDuration": 1,
                    "timeZone": "Asia/Jerusalem"
                  }
                }
              },
              "Create Azure resource policy - resource access": {
                "value": {
                  "csp": "AZURE",
                  "name": "finance",
                  "description": "End-of-year calculations",
                  "startDate": "2022-07-12T00:00:00.000Z",
                  "endDate": "2022-10-10T00:00:00.000Z",
                  "roles": [
                    {
                      "entityId": "/subscriptions/c1234567-ebe6-49f6-a190-b0a8f8753b57/providers/Microsoft.Authorization/roleDefinitions/1f12345f-1234-56b7-9ce7-9b123b123ba4",
                      "workspaceType": "resource",
                      "entitySourceId": "/subscriptions/c1234567-ebe6-49f6-a190-b0a8f8753b57/resourceGroups/example-resource-group/providers/Microsoft.ManagedIdentity/userAssignedIdentities/example-resource",
                      "organization_id": "a1b2c3d4-66d2-4bc9-abc2-123456gg1234"
                    }
                  ],
                  "identities": [
                    {
                      "entityName": "John.D@company.com",
                      "entitySourceId": "A1B2C3D4-1AB2-465F-AB03-12345D55B05E",
                      "entityClass": "user"
                    },
                    {
                      "entityName": "example-group",
                      "entitySourceId": "F1G2C3D4-1AB2-465F-AB03-12345D55B05E",
                      "entityClass": "group"
                    }
                  ],
                  "accessRules": {
                    "days": [
                      "Sunday",
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday",
                      "Saturday"
                    ],
                    "fromTime": null,
                    "toTime": null,
                    "maxSessionDuration": 1,
                    "timeZone": "Asia/Jerusalem"
                  }
                }
              },
              "Create Google Cloud policy - whole organization": {
                "value": {
                  "csp": "GCP",
                  "name": "finance",
                  "description": "End-of-year calculations",
                  "startDate": "2022-07-12T00:00:00.000Z",
                  "endDate": "2022-10-10T00:00:00.000Z",
                  "roles": [
                    {
                      "entityId": "roles/accessapproval.invalidator",
                      "workspaceType": "gcp_organization",
                      "entitySourceId": "123451234567",
                      "organization_id": "123451234567"
                    }
                  ],
                  "identities": [
                    {
                      "entityName": "John.D@company.com",
                      "entitySourceId": "A1B2C3D4-1AB2-465F-AB03-12345D55B05E",
                      "entityClass": "user"
                    }
                  ],
                  "accessRules": {
                    "days": [
                      "Sunday",
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday",
                      "Saturday"
                    ],
                    "fromTime": null,
                    "toTime": null,
                    "maxSessionDuration": 1,
                    "timeZone": "Asia/Jerusalem"
                  }
                }
              },
              "Create Google Cloud policy - folder access": {
                "value": {
                  "csp": "GCP",
                  "name": "finance",
                  "description": "End-of-year calculations",
                  "startDate": "2022-07-12T00:00:00.000Z",
                  "endDate": "2022-10-10T00:00:00.000Z",
                  "roles": [
                    {
                      "entityId": "roles/accessapproval.invalidator",
                      "workspaceType": "folder",
                      "entitySourceId": "1234567841876",
                      "organization_id": "123451234567"
                    }
                  ],
                  "identities": [
                    {
                      "entityName": "John.D@company.com",
                      "entitySourceId": "A1B2C3D4-1AB2-465F-AB03-12345D55B05E",
                      "entityClass": "user"
                    }
                  ],
                  "accessRules": {
                    "days": [
                      "Sunday",
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday",
                      "Saturday"
                    ],
                    "fromTime": null,
                    "toTime": null,
                    "maxSessionDuration": 1,
                    "timeZone": "Asia/Jerusalem"
                  }
                }
              },
              "Create Google Cloud policy - project access": {
                "value": {
                  "csp": "GCP",
                  "name": "finance",
                  "description": "End-of-year calculations",
                  "startDate": "2022-07-12T00:00:00.000Z",
                  "endDate": "2022-10-10T00:00:00.000Z",
                  "roles": [
                    {
                      "entityId": "roles/actions.Admin",
                      "workspaceType": "project",
                      "entitySourceId": "example-project-name",
                      "organization_id": "123451234567"
                    }
                  ],
                  "identities": [
                    {
                      "entityName": "John.D@company.com",
                      "entitySourceId": "A1B2C3D4-1AB2-465F-AB03-12345D55B05E",
                      "entityClass": "user"
                    }
                  ],
                  "accessRules": {
                    "days": [
                      "Sunday",
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday",
                      "Saturday"
                    ],
                    "fromTime": null,
                    "toTime": null,
                    "maxSessionDuration": 1,
                    "timeZone": "Asia/Jerusalem"
                  }
                }
              }
            }
          }
        },
        "description": ""
      },
      "Discovery": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Discover AWS account in an AWS organization": {
                  "value": {
                    "csp": "AWS",
                    "organization_id": "123457654321",
                    "account_info": {
                      "id": "987654123456",
                      "new_account": true
                    }
                  }
                }
              },
              "properties": {
                "csp": {
                  "type": "string",
                  "description": "The cloud provider associated with the workspace to discover \n\nSupported values:\nAWS = 'AWS', GCP = 'GCP', AZURE = 'AZURE'"
                },
                "organization_id": {
                  "type": "string",
                  "description": "The ID of the organization to discover \n\n-AWS: The AWS organization ID \n\n-Azure: Azure tenant ID \n\n-GCP: Google Cloud organization ID"
                },
                "account_info": {
                  "type": "object",
                  "description": "Details about the workspace to discover",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the workspace to discover \n\n-AWS: AWS account ID \n\n-Azure: Management group, subscription, or resource group ID \n\n-GCP: Google Cloud project ID"
                    },
                    "new_account": {
                      "type": "boolean",
                      "description": "Indicates whether the account is new to an organization, and has not yet been onboarded. \n\nSupported values: \n\n-false (default): The account is not new - it was previously onboarded. In this case, the workspace isn't rediscovered, but a scan for roles is run \n\n-true: The account is new to the organization, meaning that you're onboarding a new AWS account that belongs to an already onboarded AWS organization, a new GCP project that belongs to an already onboarded Google Cloud organization, or a new management group / subscription that belongs to an already onboarded Microsoft Entra ID directory."
                    }
                  }
                }
              }
            },
            "examples": {
              "Discover AWS account in an AWS organization": {
                "value": {
                  "csp": "AWS",
                  "organization_id": "123457654321",
                  "account_info": {
                    "id": "987654123456",
                    "new_account": true
                  }
                }
              },
              "Discover Google Cloud project in a GCP organization": {
                "value": {
                  "csp": "GCP",
                  "organization_id": "123457654321",
                  "account_info": {
                    "id": "xyz-gcp-project",
                    "new_account": true
                  }
                }
              },
              "Discover Azure subscription in a Microsoft Entra ID directory": {
                "value": {
                  "csp": "AZURE",
                  "organization_id": "abcde123-abcd-123a-abcd-a1b23456cd7e",
                  "account_info": {
                    "id": "aaaa1111-1111-111a-aaaa-aaaa1111aa1a",
                    "new_account": true
                  }
                }
              }
            }
          }
        },
        "description": ""
      },
      "Validate": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Validate AWS IAM Identity Center policy": {
                  "policyId": "aws_sso_1234abcd-123a-1ab2-a12b-12f1b179e053"
                }
              },
              "properties": {
                "policyId": {
                  "type": "string",
                  "description": "The ID of the access policy to be validated"
                }
              }
            },
            "example": {
              "policyId": "aws_sso_1234abcd-123a-1ab2-a12b-12f1b179e053"
            }
          }
        },
        "description": "Provide the ID of the access policy that you want to validate."
      },
      "Edit-Policy": {
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Edit-Policy-v2"
                },
                {
                  "$ref": "#/components/schemas/Edit-Policy-v1"
                }
              ]
            },
            "examples": {
              "Edit AWS IAM policy - AWS account": {
                "value": {
                  "name": "finance",
                  "description": "End-of-year calculations",
                  "startDate": "2022-07-12T00:00:00.000Z",
                  "endDate": "2022-10-10T00:00:00.000Z",
                  "roles": [
                    {
                      "entityId": "arn:aws:iam::123451234567:role/examplerole",
                      "workspaceType": null,
                      "entitySourceId": "123451234567",
                      "organization_id": null
                    }
                  ],
                  "identities": [
                    {
                      "entityName": "John.D",
                      "entitySourceId": "09B9A9B0-6CE8-465F-AB03-65766D55B05E",
                      "entityClass": "user"
                    }
                  ],
                  "accessRules": {
                    "days": [
                      "Sunday",
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday",
                      "Saturday"
                    ],
                    "fromTime": null,
                    "toTime": null,
                    "maxSessionDuration": 1,
                    "timeZone": "Asia/Jerusalem"
                  }
                }
              },
              "Edit Azure resource policy for specific resource": {
                "value": {
                  "name": "finance",
                  "description": "End-of-year calculations",
                  "startDate": "2022-07-12T00:00:00.000Z",
                  "endDate": "2022-10-10T00:00:00.000Z",
                  "roles": [
                    {
                      "entityId": "/subscriptions/c1234567-ebe6-49f6-a190-b0a8f8753b57/providers/Microsoft.Authorization/roleDefinitions/1f12345f-1234-56b7-9ce7-9b123b123ba4",
                      "workspaceType": "resource",
                      "entitySourceId": "/subscriptions/c1234567-ebe6-49f6-a190-b0a8f8753b57/resourceGroups/example-resource-group/providers/Microsoft.ManagedIdentity/userAssignedIdentities/example-resource",
                      "organization_id": "a1b2c3d4-66d2-4bc9-abc2-123456gg1234"
                    }
                  ],
                  "identities": [
                    {
                      "entityName": "John.D",
                      "entitySourceId": "09B9A9B0-6CE8-465F-AB03-65766D55B05E",
                      "entityClass": "user"
                    }
                  ],
                  "accessRules": {
                    "days": [
                      "Sunday",
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday",
                      "Saturday"
                    ],
                    "fromTime": null,
                    "toTime": null,
                    "maxSessionDuration": 1,
                    "timeZone": "Asia/Jerusalem"
                  }
                }
              },
              "Edit Google Cloud policy for specific project": {
                "value": {
                  "name": "finance",
                  "description": "End-of-year calculations",
                  "startDate": "2022-07-12T00:00:00.000Z",
                  "endDate": "2022-10-10T00:00:00.000Z",
                  "roles": [
                    {
                      "entityId": "roles/actions.Admin",
                      "workspaceType": "project",
                      "entitySourceId": "example-project-name",
                      "organization_id": "123451234567"
                    }
                  ],
                  "identities": [
                    {
                      "entityName": "John.D",
                      "entitySourceId": "09B9A9B0-6CE8-465F-AB03-65766D55B05E",
                      "entityClass": "user"
                    }
                  ],
                  "accessRules": {
                    "days": [
                      "Sunday",
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday",
                      "Saturday"
                    ],
                    "fromTime": null,
                    "toTime": null,
                    "maxSessionDuration": 1,
                    "timeZone": "Asia/Jerusalem"
                  }
                }
              }
            }
          }
        },
        "description": ""
      }
    }
  },
  "paths": {
    "/policies": {
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "Create policy",
        "security": [
          {
            "bearerOAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "1.0",
                "2.0"
              ]
            },
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "description": "1.0: Create policy v1. This version returns the job status when the job completes (synchronous). \n\n2.0: Create policy v2. This version returns a job ID, which can be used to check the job status at your convenience (asynchronous)."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "debug",
            "in": "query",
            "required": false,
            "description": "(Optional) Enable debug mode for additional troubleshooting information. \n\n**Default** :  false"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "$ref": "#/components/responses/CreatePolicyV1-Response"
          },
          "400": {
            "$ref": "#/components/responses/InputError-CreatePolicy"
          },
          "401": {
            "description": "You don't have the appropriate permission, or you used an invalid token"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError-CreatePolicy"
          }
        },
        "operationId": "CreatePolicy",
        "requestBody": {
          "$ref": "#/components/requestBodies/Create-Policy-v1"
        },
        "description": "Creates a user access policy in Secure Cloud Access.\n\nNote: This method can be used to create policies using v1 or v2. For ease-of-use, we recommend using the Create policy V2 method instead - see 'Create policy V2 (Recommended)'"
      },
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "Query Policies",
        "security": [
          {
            "bearerOAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/status"
          },
          {
            "$ref": "#/components/parameters/free_text"
          },
          {
            "$ref": "#/components/parameters/cloud_provider"
          },
          {
            "$ref": "#/components/parameters/debug"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "$ref": "#/components/responses/List-Of-Policies"
          },
          "401": {
            "description": "You don't have the appropriate permission, or you used an invalid token"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError-GetPolicyAndQueryPolicies"
          }
        },
        "operationId": "QueryPolicies",
        "description": "Returns a list of policies based on the requested filters"
      },
      "parameters": []
    },
    "/policies/create-policy": {
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "Create policy V2 (Recommended)",
        "security": [
          {
            "bearerOAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "boolean"
            },
            "name": "debug",
            "in": "query",
            "required": false,
            "description": "(Optional) Enable debug mode for additional troubleshooting information. \n\n**Default** : false"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "$ref": "#/components/responses/CreatePolicyV2-Response"
          },
          "400": {
            "$ref": "#/components/responses/InputError-CreatePolicy"
          },
          "401": {
            "description": "You don't have the appropriate permission, or you used an invalid token"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError-CreatePolicy"
          }
        },
        "operationId": "CreatePolicyV2",
        "requestBody": {
          "$ref": "#/components/requestBodies/Create-Policy-v2"
        },
        "description": "Creates a user access policy in Secure Cloud Access."
      }
    },
    "/policies/{policy_id}/status": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "Get policy status",
        "security": [
          {
            "bearerOAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "description": "The status of the policy.\n\nSupported values: \n\n- 1 = The policy is active\n\n- 3 = The policy has expired\n\n- 4 = There is an error in the policy\n\n- 6 = The policy is currently being validated"
                },
                "example": "1"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found \n\nThe specified policy couldn't be found. Make sure the ID is correct and try again."
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "description": "Returns the status of the policy",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "policy_id",
            "description": "The ID of the requested policy",
            "required": true
          }
        ],
        "operationId": "GetStatus"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "policy_id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/policies/{policy_id}": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "Get policy",
        "security": [
          {
            "bearerOAuth": []
          }
        ],
        "description": "This method retrieves detailed information about a specific policy identified by the policy_id parameter. It returns a structured response containing the policy's key attributes and related metadata",
        "responses": {
          "200": {
            "description": "Successful response",
            "$ref": "#/components/responses/Get-Policy-Response"
          },
          "401": {
            "description": "You don't have the appropriate permission, or you used an invalid token"
          },
          "404": {
            "description": "Not Found \n\nThe specified policy couldn't be found. Make sure the ID is correct and try again."
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError-GetPolicyAndQueryPolicies"
          }
        },
        "operationId": "GetPolicy",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "1.0",
                "2.0"
              ]
            },
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "description": "Supported values:\n\n- 1.0: Use when working with v1\n\n- 2.0: Use when working with v2 (recommended)"
          },
          {
            "schema": {
              "type": "string"
            },
            "name": "policy_id",
            "in": "path",
            "required": true,
            "description": "The ID of the policy whose details you want to retrieve"
          },
          {
            "$ref": "#/components/parameters/debug"
          }
        ]
      },
      "delete": {
        "tags": [
          "Policies"
        ],
        "summary": "Remove policy",
        "security": [
          {
            "bearerOAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "description": "The policy was removed"
                },
                "example": "Removed"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found \n\nThe specified policy couldn't be found. Make sure the ID is correct and try again."
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "faultCode": {
                      "type": "string"
                    },
                    "headerMessage": {
                      "type": "string"
                    },
                    "bodyMessage": {
                      "type": "string"
                    },
                    "correlationId": {
                      "type": "string"
                    },
                    "uiType": {
                      "type": "integer"
                    },
                    "innerError": {
                      "type": "string"
                    },
                    "debug_info": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "error_code": {
                            "type": "string"
                          },
                          "reason": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example1": {
                    "summary": "Error response when debug param is true",
                    "value": {
                      "faultCode": 1107,
                      "headerMessage": "Oops! We couldn't remove permissions from Identity WebApp.",
                      "bodyMessage": "The WebApp may appear to the end users, but as long as Secure Cloud Access is enabled - they will not get just-in-time access to the cloud resources.",
                      "correlationId": "612b32bf-e5f7-4f14-9a0f-0d4a66f156af",
                      "uiType": 3,
                      "debug_info": [
                        {
                          "name": "POLICY_REMOVE_IDENTITY",
                          "status": "Failure",
                          "error_code": 1107,
                          "reason": "The WebApp may appear to the end users, but as long as Secure Cloud Access is enabled - they will not get just-in-time access to the cloud resources."
                        }
                      ]
                    }
                  },
                  "example2": {
                    "summary": "Error response when debug param is false",
                    "value": {
                      "faultCode": 1107,
                      "headerMessage": "Oops! We couldn't remove permissions from Identity WebApp.",
                      "bodyMessage": "The WebApp may appear to the end users, but as long as Secure Cloud Access is enabled - they will not get just-in-time access to the cloud resources.",
                      "correlationId": "612b32bf-e5f7-4f14-9a0f-0d4a66f156af",
                      "uiType": 3
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "RemovePolicy",
        "description": "This method moves the policy to archive mode",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "1.0",
                "2.0"
              ]
            },
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "description": "Supported values: 1.0 (Default)"
          },
          {
            "schema": {
              "type": "string"
            },
            "name": "policy_id",
            "in": "path",
            "required": true,
            "description": "The ID of the policy to be removed"
          },
          {
            "$ref": "#/components/parameters/debug"
          }
        ]
      },
      "put": {
        "tags": [
          "Policies"
        ],
        "summary": "Edit policy",
        "security": [
          {
            "bearerOAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "job_id": {
                          "type": "string",
                          "description": "The status of the job. This job is aynchronous, meaning that it returns a job ID that can be used in the Status API to continue tracking the status"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "Updated": {
                          "type": "string",
                          "description": "Policy Updated"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "You don't have the appropriate permission, or you used an invalid token"
          },
          "404": {
            "description": "Not Found \n\nThe specified policy couldn't be found. Make sure the ID is correct and try again."
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "faultCode": {
                      "type": "string"
                    },
                    "headerMessage": {
                      "type": "string"
                    },
                    "bodyMessage": {
                      "type": "string"
                    },
                    "correlationId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "uiType": {
                      "type": "integer",
                      "example": 3
                    },
                    "debug_info": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "error_code": {
                            "type": "string"
                          },
                          "reason": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example1": {
                    "summary": "Error response when debug param is true",
                    "value": {
                      "faultCode": "1101",
                      "headerMessage": "We couldn't apply your changes",
                      "bodyMessage": "Please try again in a few minutes. If that doesn't work, contact CyberArk support.",
                      "correlationId": "ffab89bd-6c4a-4f9d-8101-5a5ae08e2a6a",
                      "uiType": 3,
                      "debug_info": [
                        {
                          "name": "POLICY_CREATE_STARTED",
                          "status": "Failure",
                          "error_code": "1101",
                          "reason": "Please try again in a few minutes. If that doesn't work, contact CyberArk support."
                        }
                      ]
                    }
                  },
                  "example2": {
                    "summary": "Error response when debug param is false",
                    "value": {
                      "faultCode": "1101",
                      "headerMessage": "We couldn't apply your changes",
                      "bodyMessage": "Please try again in a few minutes. If that doesn't work, contact CyberArk support.",
                      "correlationId": "ffab89bd-6c4a-4f9d-8101-5a5ae08e2a6a",
                      "uiType": 3
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/Edit-Policy"
        },
        "operationId": "EditPolicy",
        "description": "This method updates an existing policy",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "1.0",
                "2.0"
              ]
            },
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "description": "Supported values:\n\n- 1.0: Use when working with v1\n\n- 2.0: Use when working with v2 (recommended)"
          },
          {
            "schema": {
              "type": "string"
            },
            "name": "policy_id",
            "in": "path",
            "required": true,
            "description": "The ID of the policy to be edited"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "debug",
            "in": "query",
            "required": false,
            "description": "(Optional) Enable debug mode for additional troubleshooting information. \n\n**Default** :  false"
          }
        ]
      },
      "parameters": []
    },
    "/policies/discovery": {
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "Discovery",
        "security": [
          {
            "bearerOAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "boolean"
            },
            "name": "debug",
            "in": "query",
            "required": false,
            "description": "(Optional) Enable debug mode for additional troubleshooting information. \n\n**Default** :  false"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Discovery"
          },
          "400": {
            "$ref": "#/components/responses/Discovery400"
          },
          "401": {
            "description": "You don't have the appropriate permission, or you used an invalid token"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "operationId": "Discovery",
        "requestBody": {
          "$ref": "#/components/requestBodies/Discovery"
        },
        "description": "This method starts a discovery of a workspace's structure. Once the discovery is complete, the method automatically runs a scan on the workspace for roles/permission sets and resources.\nFor details about workload discovery and scans, see our [terminology reference](https://docs.cyberark.com/sca/latest/en/content/cloudadmin/cv-terminology.htm). \n\nNote: To run a scan on an already onboarded workspace, without running a discovery first, use the /cloud/rescan API. For details, see the [General Cloud Activity API](https://docs.cyberark.com/sca/latest/en/content/automation/sca-api-cloud.htm)."
      }
    },
    "/policies/validate": {
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "Validate policy",
        "security": [
          {
            "bearerOAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/debug"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Validate"
          },
          "400": {
            "description": "Input error"
          },
          "401": {
            "description": "You don't have the appropriate permission, or you used an invalid token"
          },
          "403": {
            "description": "You don't have permission to access this resource"
          },
          "404": {
            "description": "Policy not found"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError-Validate"
          }
        },
        "operationId": "Validate",
        "description": "This method triggers a validation process for the specified access policy",
        "requestBody": {
          "$ref": "#/components/requestBodies/Validate"
        }
      }
    }
  }
}