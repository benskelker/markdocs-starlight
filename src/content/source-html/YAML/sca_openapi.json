{
  "openapi": "3.0.0",
  "info": {
    "title": "Public API",
    "version": "1.0.0",
    "description": "Invoke SCA policy operation through public rest api",
    "contact": {
      "name": "SCA"
    }
  },
  "servers": [
    {
      "url": "https://{tenant_name}.sca.cyberark.cloud/api",
      "description": "sca_base_url"
    },
    {
      "url": "https://{identity_tenant}.my.identity.qa",
      "description": "identity_base_url"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerOAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": ""
      },
      "UserPassBasicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "schemas": {},
    "responses": {
      "Policy-Response": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "example-1": {
                  "tenantId": "e51a10e2-3666-4496-a459-233a917ea2c7",
                  "name": "policy for dev ops group",
                  "status": 1,
                  "description": "",
                  "creationDate": "2022-06-21T14:50:04.579024+00:00",
                  "lastChanged": "2022-06-21T14:50:04.579024+00:00",
                  "cloudProvider": 0,
                  "policyId": "aws_7eb10249-e792-4a50-b5d5-12e39c1433fa",
                  "targetAttributes": [],
                  "startDate": "string",
                  "expirationDate": "string",
                  "accessRules": {
                    "days": [0, 1, 2, 3, 4, 5, 6],
                    "fromTime": "string",
                    "toTime": "string",
                    "maxSessionDuration": 1,
                    "timeZone": "Asia/Jerusalem"
                  },
                  "entities": [
                    {
                      "entityId": "47d66b2b-8117-42f1-bee5-ad7bfe21bc15",
                      "entityName": "John.S@company.com",
                      "entityType": 1,
                      "entitySourceId": "09B9A9B0-6CE8-465F-AB03-65766D33B05E",
                      "entitySourceName": "CyberArk Cloud Directory",
                      "entityDisplayName": "John Smith",
                      "entityClass": "user",
                      "entityEmail": "string"
                    },
                    {
                      "entityId": "arn:aws:iam::123456789123:role/sca-dynamo-role",
                      "entityName": "sca-dynamo-role",
                      "entityType": 0,
                      "entitySourceId": "123456789123",
                      "entitySourceName": "SCA Dev2",
                      "exposureLevel": 43,
                      "organizationId": "string",
                      "workspaceType": "string",
                      "roleType": "string",
                      "rolePackage": "string"
                    }
                  ],
                  "exposure": 100,
                  "faultCode": "number",
                  "statusTooltipMessage": "string"
                }
              },
              "properties": {
                "tenantId": {
                  "type": "string",
                  "description": "The unique ID of the tenant.\t"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the policy."
                },
                "status": {
                  "type": "integer",
                  "description": "The status of the policy.\n  \nSupported values:\n\nActive = 1, Expired = 3, Error = 4, Warning = 5, Validating = 6"
                },
                "description": {
                  "type": "string",
                  "description": "The description of the policy."
                },
                "creationDate": {
                  "type": "string",
                  "description": "The date and time when the policy was created, in ISO format."
                },
                "lastChanged": {
                  "type": "string",
                  "description": "The date and time when the policy was last updated, in ISO format.\t"
                },
                "cloudProvider": {
                  "type": "integer",
                  "description": "The cloud environment that the policy applies to.\n\nSupported values:\n\nAWS = 0, Google Cloud = 1, Azure RBAC = 2, AWS SSO = 3, Azure AD = 4"
                },
                "policyId": {
                  "type": "string",
                  "description": "The unique ID of the policy."
                },
                "targetAttributes": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "startDate": {
                  "type": "string",
                  "description": "(Optional) Date and time when the policy becomes active, in ISO format."
                },
                "expirationDate": {
                  "type": "string",
                  "description": "(Optional) Date and time when the policy expires, in ISO format."
                },
                "accessRules": {
                  "type": "object",
                  "description": "Set of rules that specify exactly when the policy is active.",
                  "properties": {
                    "days": {
                      "type": "array",
                      "description": "Days of the week as a number range from 0-6, where Sunday=0 ... Saturday=6. ",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "fromTime": {
                      "type": "string",
                      "description": "(Optional) Time of day when the policy becomes active."
                    },
                    "toTime": {
                      "type": "string",
                      "description": "(Optional) Time of day when the policy becomes inactive."
                    },
                    "maxSessionDuration": {
                      "type": "integer",
                      "description": "Maximum length, in hours, of the user session when it begins while the policy is active. "
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "A time-zone qualified string representing the time zone of the client host machine."
                    }
                  }
                },
                "entities": {
                  "type": "array",
                  "description": "List of cloud entities (CyberArk Identity and cloud role) to which the policy applies.",
                  "items": {
                    "type": "object",
                    "description": "CyberArk Identity cloud entity fields",
                    "properties": {
                      "entityId": {
                        "type": "string",
                        "description": "Internal UUID of the cloud entity."
                      },
                      "entityName": {
                        "type": "string",
                        "description": "Fully qualified name of the CyberArk Identity cloud entity."
                      },
                      "entityType": {
                        "type": "integer",
                        "description": "Value = 1 (CyberArk Identity)"
                      },
                      "entitySourceId": {
                        "type": "string",
                        "description": "User directory service ID or cloud workspace ID."
                      },
                      "entitySourceName": {
                        "type": "string",
                        "description": "The source of the cloud entity in CyberArk Identity.\n\nSupported values:\n\n'CyberArk Cloud Directory' and 'Federated Directory Service'"
                      },
                      "entityDisplayName": {
                        "type": "string",
                        "description": "The display name of the cloud entity (user, role or group)."
                      },
                      "entityClass": {
                        "type": "string",
                        "description": "Supported values: 'user', 'role', and 'group'"
                      },
                      "entityEmail": {
                        "type": "string",
                        "description": "The email address of the CyberArk Identity user (cloud entity).\t"
                      },
                      "exposureLevel": {
                        "type": "integer"
                      },
                      "organizationId": {
                        "type": "string",
                        "description": "Google Cloud: The Google Cloud organization ID.\n\n Azure RBAC: the Azure directory id (uuid)\n\nAzure AD: Azure tenant id"
                      },
                      "workspaceType": {
                        "type": "string",
                        "description": "Google Cloud: Supported values: 'organization', 'folder', and 'project'\n\nAzure RBAC: if management group level role - 'management_group'. if subsription (and below) level - 'resource'"
                      },
                      "roleType": {
                        "type": "string",
                        "description": "(Google Cloud policies only) Supported values: Predefined = 0, Custom = 1, Basic = 2"
                      },
                      "rolePackage": {
                        "type": "string",
                        "description": "(Google Cloud policies only) The Google Cloud package associated with the role."
                      }
                    }
                  }
                },
                "exposure": {
                  "type": "integer",
                  "description": "The calculated policy exposure, as a percentage.\n\nNotes:\n\nThe policy exposure is the percentage of available permissions not used by the policy (both privileges and dormant members). This number may drop over time as more members become active under the policy.\n\nWhen a policy is first created the policy exposure is null because the calculation happens asynchronously. Wait 1 minute to invoke the GetPolicy API to return the actual value."
                },
                "faultCode": {
                  "type": "number",
                  "description": "If there is an error when a policy is created, edited, or deleted, the faultCode number indicates the reason for the failure. "
                },
                "statusTooltipMessage": {
                  "type": "string",
                  "description": "If there is an error related to a policy, this field returns the error message that correlates with the faultCode."
                }
              }
            },
            "examples": {
              "example-1": {
                "value": {
                  "tenantId": "string",
                  "name": "string",
                  "status": 0,
                  "description": "string",
                  "creationDate": "string",
                  "lastChanged": "string",
                  "cloudProvider": 0,
                  "policyId": "string",
                  "targetAttributes": [{}],
                  "startDate": "string",
                  "expirationDate": "string",
                  "accessRules": {
                    "days": [0],
                    "fromTime": "string",
                    "toTime": "string",
                    "maxSessionDuration": 0,
                    "timeZone": "string"
                  },
                  "entities": [
                    {
                      "entityId": "string",
                      "entityName": "string",
                      "entityType": 0,
                      "entitySourceId": "string",
                      "entitySourceName": "string",
                      "entityDisplayName": "string",
                      "entityClass": "string",
                      "entityEmail": "string",
                      "exposureLevel": 0,
                      "organizationId": "string",
                      "workspaceType": "string",
                      "roleType": "string",
                      "rolePackage": "string"
                    }
                  ],
                  "exposure": 0,
                  "faultCode": 100,
                  "statusTooltipMessage": "string"
                }
              }
            }
          },
          "application/xml": {
            "schema": {
              "type": "object",
              "properties": {
                "tenantId": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "description": {
                  "type": "string"
                },
                "creationDate": {
                  "type": "string"
                },
                "lastChanged": {
                  "type": "string"
                },
                "cloudProvider": {
                  "type": "integer"
                },
                "policyId": {
                  "type": "string"
                },
                "targetAttributes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {}
                  }
                },
                "startDate": {
                  "type": "string"
                },
                "expirationDate": {
                  "type": "string"
                },
                "accessRules": {
                  "type": "object",
                  "properties": {
                    "days": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "fromTime": {
                      "type": "string"
                    },
                    "toTime": {
                      "type": "string"
                    },
                    "maxSessionDuration": {
                      "type": "integer"
                    },
                    "timeZone": {
                      "type": "string"
                    }
                  }
                },
                "entities": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "entityId": {
                        "type": "string"
                      },
                      "entityName": {
                        "type": "string"
                      },
                      "entityType": {
                        "type": "integer"
                      },
                      "entitySourceId": {
                        "type": "string"
                      },
                      "entitySourceName": {
                        "type": "string"
                      },
                      "entityDisplayName": {
                        "type": "string"
                      },
                      "entityClass": {
                        "type": "string"
                      },
                      "entityEmail": {
                        "type": "string"
                      },
                      "exposureLevel": {
                        "type": "integer"
                      },
                      "organizationId": {
                        "type": "string"
                      },
                      "workspaceType": {
                        "type": "string"
                      },
                      "roleType": {
                        "type": "string"
                      },
                      "rolePackage": {
                        "type": "string"
                      }
                    }
                  }
                },
                "exposure": {
                  "type": "integer"
                },
                "faultCode": {
                  "type": "number"
                },
                "statusTooltipMessage": {
                  "type": "string"
                }
              },
              "x-examples": {
                "example-1": {
                  "tenantId": "e51a10e2-3666-4496-a459-233a917ea2c7",
                  "name": "policy for dev ops group",
                  "status": 1,
                  "description": "",
                  "creationDate": "2022-06-21T14:50:04.579024+00:00",
                  "lastChanged": "2022-06-21T14:50:04.579024+00:00",
                  "cloudProvider": 0,
                  "policyId": "aws_7eb10249-e792-4a50-b5d5-12e39c1433fa",
                  "targetAttributes": [],
                  "startDate": "string",
                  "expirationDate": "string",
                  "accessRules": {
                    "days": [0, 1, 2, 3, 4, 5, 6],
                    "fromTime": "string",
                    "toTime": "string",
                    "maxSessionDuration": 1,
                    "timeZone": "Asia/Jerusalem"
                  },
                  "entities": [
                    {
                      "entityId": "47d66b2b-8117-42f1-bee5-ad7bfe21bc15",
                      "entityName": "John.S@company.com",
                      "entityType": 1,
                      "entitySourceId": "09B9A9B0-6CE8-465F-AB03-65766D33B05E",
                      "entitySourceName": "CyberArk Cloud Directory",
                      "entityDisplayName": "John Smith",
                      "entityClass": "user",
                      "entityEmail": "string"
                    },
                    {
                      "entityId": "arn:aws:iam::123456789123:role/sca-dynamo-role",
                      "entityName": "sca-dynamo-role",
                      "entityType": 0,
                      "entitySourceId": "123456789123",
                      "entitySourceName": "SCA Dev2",
                      "exposureLevel": 43,
                      "organizationId": "string",
                      "workspaceType": "string",
                      "roleType": "string",
                      "rolePackage": "string"
                    }
                  ],
                  "exposure": 100,
                  "faultCode": "number",
                  "statusTooltipMessage": "string"
                }
              }
            },
            "examples": {
              "example-1": {
                "value": {
                  "tenantId": "e51a10e2-3666-4496-a459-233a917ea2c7",
                  "name": "policy for dev ops group",
                  "status": 1,
                  "description": "",
                  "creationDate": "2022-06-21T14:50:04.579024+00:00",
                  "lastChanged": "2022-06-21T14:50:04.579024+00:00",
                  "cloudProvider": 0,
                  "policyId": "aws_7eb10249-e792-4a50-b5d5-12e39c1433fa",
                  "targetAttributes": [],
                  "startDate": "string",
                  "expirationDate": "string",
                  "accessRules": {
                    "days": [0, 1, 2, 3, 4, 5, 6],
                    "fromTime": "string",
                    "toTime": "string",
                    "maxSessionDuration": 1,
                    "timeZone": "Asia/Jerusalem"
                  },
                  "entities": [
                    {
                      "entityId": "47d66b2b-8117-42f1-bee5-ad7bfe21bc15",
                      "entityName": "John.S@company.com",
                      "entityType": 1,
                      "entitySourceId": "09B9A9B0-6CE8-465F-AB03-65766D33B05E",
                      "entitySourceName": "CyberArk Cloud Directory",
                      "entityDisplayName": "John Smith",
                      "entityClass": "user",
                      "entityEmail": "string"
                    },
                    {
                      "entityId": "arn:aws:iam::123456789123:role/sca-dynamo-role",
                      "entityName": "sca-dynamo-role",
                      "entityType": 0,
                      "entitySourceId": "123456789123",
                      "entitySourceName": "SCA Dev2",
                      "exposureLevel": 43,
                      "organizationId": "string",
                      "workspaceType": "string",
                      "roleType": "string",
                      "rolePackage": "string"
                    }
                  ],
                  "exposure": 100,
                  "faultCode": 100,
                  "statusTooltipMessage": "string"
                }
              }
            }
          }
        }
      },
      "List-Of-Policies": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "example-1": {
                  "total": 1,
                  "hits": [
                    {
                      "tenantId": "e51a10e2-3666-4496-a459-233a917ea2c7",
                      "name": "policy for dev ops group",
                      "status": 1,
                      "description": "",
                      "creationDate": "2022-06-21T14:50:04.579024+00:00",
                      "lastChanged": "2022-06-21T14:50:04.579024+00:00",
                      "cloudProvider": 0,
                      "policyId": "aws_7eb10249-e792-4a50-b5d5-12e39c1433fa",
                      "targetAttributes": [],
                      "startDate": "string",
                      "expirationDate": "string",
                      "accessRules": {
                        "days": [0, 1, 2, 3, 4, 5, 6],
                        "fromTime": "string",
                        "toTime": "string",
                        "maxSessionDuration": 1,
                        "timeZone": "Asia/Jerusalem"
                      },
                      "entities": [
                        {
                          "entityId": "47d66b2b-8117-42f1-bee5-ad7bfe21bc15",
                          "entityName": "John.S@company.com",
                          "entityType": 1,
                          "entitySourceId": "09B9A9B0-6CE8-465F-AB03-65766D33B05E",
                          "entitySourceName": "CyberArk Cloud Directory",
                          "entityDisplayName": "John Smith",
                          "entityClass": "user",
                          "entityEmail": "string"
                        },
                        {
                          "entityId": "arn:aws:iam::123456789123:role/sca-dynamo-role",
                          "entityName": "sca-dynamo-role",
                          "entityType": 0,
                          "entitySourceId": "123456789123",
                          "entitySourceName": "SCA Dev2",
                          "exposureLevel": 43,
                          "organizationId": "string",
                          "workspaceType": "string",
                          "roleType": "string",
                          "rolePackage": "string"
                        }
                      ],
                      "exposure": 100,
                      "faultCode": "number",
                      "statusTooltipMessage": "string"
                    }
                  ]
                }
              },
              "properties": {
                "total": {
                  "type": "integer"
                },
                "hits": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tenantId": {
                        "type": "string",
                        "description": "The unique ID of the tenant."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the policy.\t"
                      },
                      "status": {
                        "type": "integer",
                        "description": "Filter by policies that have a specific status.\n\nSupported values:\nActive = 1, Expired = 3, Error = 4, Warning = 5, Validating = 6"
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the policy.\t"
                      },
                      "creationDate": {
                        "type": "string",
                        "description": "The date and time when the policy was created, in ISO format.\t"
                      },
                      "lastChanged": {
                        "type": "string",
                        "description": "The date and time when the policy was last updated, in ISO format.\t"
                      },
                      "cloudProvider": {
                        "type": "integer",
                        "description": "Filter by the cloud provider that the policy applies to. Supported values:\nAWS IAM = 0, Google Cloud = 1, Azure RBAC = 2, AWS IAM Identity Center = 3, Azure AD = 4"
                      },
                      "policyId": {
                        "type": "string",
                        "description": "The unique ID of the policy."
                      },
                      "targetAttributes": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "startDate": {
                        "type": "string",
                        "description": "(Optional) Date and time when the policy becomes active, in ISO format."
                      },
                      "expirationDate": {
                        "type": "string",
                        "description": "(Optional) Date and time when the policy expires, in ISO format.\t"
                      },
                      "accessRules": {
                        "type": "object",
                        "description": "\t\nSet of rules that specify exactly when the policy is active.",
                        "properties": {
                          "days": {
                            "type": "array",
                            "description": "Days of the week as a number range from 0-6, where Sunday=0 ... Saturday=6. ",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "fromTime": {
                            "type": "string",
                            "description": "(Optional) Time of day when the policy becomes active."
                          },
                          "toTime": {
                            "description": "(Optional) Time of day when the policy becomes inactive.",
                            "type": "string"
                          },
                          "maxSessionDuration": {
                            "type": "integer",
                            "description": "Maximum length, in hours, of the user session when it begins while the policy is active."
                          },
                          "timeZone": {
                            "type": "string",
                            "description": "A time-zone qualified string representing the time zone of the client host machine."
                          }
                        }
                      },
                      "entities": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "entityId": {
                              "type": "string",
                              "description": "CyberArk Identity: Internal UUID of the cloud entity.\n\nAWS: The role ARN (for example, arn:aws:iam::123456789123:role/devOps).\n\nGoogle Cloud: The role name and hierarchy structure (for example, projects/cybrsca-dev/roles/CustomRole).\n\nAzure RBAC: Path to the roleDefinition entity in Azure (e.g. /subscriptions/xxxxxxx/providers/Microsoft.Authorization/roleDefinitions/c025889f-8102-4ebf-b32c-fc0c6f0c6bd9)\n\nAzure AD: The unique identifier of the cloud role (a GUID)"
                            },
                            "entityName": {
                              "type": "string",
                              "description": "CyberArk Identity: Fully qualified name of the cloud entity.\n\nCloud provider: The cloud role name ('devOps' or 'CustomRole')."
                            },
                            "entityType": {
                              "type": "integer",
                              "description": "CyberArk Identity (cloud entity): Value = 1\n\nCloud provider (cloud role): Value = 0"
                            },
                            "entitySourceId": {
                              "type": "string",
                              "description": "CyberArk Identity: Unique ID of the source of the user/role entity\n\nAWS: The account ID associated with the role (for example, 123456789123).\n\nGoogle Cloud: The name of the organization, folder, or project depending on the workspaceType (for example, cybrsca-dev).\n\nAzure Cloud: The path to the scope which the role need to be applied. Different between subscription and management group. e.g. if management group level - providers/Microsoft.Management/managementGroups/c5a5de91-6a2f-467e-aefa-b3f62876ec6a. if subscription (and below) - /subscriptions/541038cf-0e42-47c0-ace1-f3263530fd72/resourceGroups/cloud-shell-storage-westeurope/providers/Microsoft.Storage/storageAccounts/csb10032002529a3d5e\n\nAzure AD: Azure tenant id"
                            },
                            "entitySourceName": {
                              "type": "string",
                              "description": "CyberArk Identity: The source of the cloud entity.\n\nSupported values: 'CyberArk Cloud Directory' or 'Federated Directory Service'\nCloud provider: N/A"
                            },
                            "entityDisplayName": {
                              "type": "string",
                              "description": "CyberArk Identity: The display name of the cloud entity (user, role or group).\n\nCloud provider: N/A"
                            },
                            "entityClass": {
                              "type": "string",
                              "description": "CyberArk Identity: Supported values: 'user', 'role', and 'group'\n\nCloud provider: N/A"
                            },
                            "entityEmail": {
                              "description": "CyberArk Identity: The email address of the CyberArk Identity user (cloud entity).\n\nCloud provider: N/A",
                              "type": "string"
                            },
                            "exposureLevel": {
                              "type": "integer",
                              "description": "The policy exposure score of the cloud entity role assigned by CEM.\t"
                            },
                            "organizationId": {
                              "description": "Google Cloud: The Google Cloud organization ID.\n\n Azure RBAC: the Azure directory id (uuid)\n\nAzure AD: Azure tenant id",
                              "type": "string"
                            },
                            "workspaceType": {
                              "description": "Google Cloud: Supported values: 'organization', 'folder', and 'project'\n\nAzure RBAC: if management group level role - 'management_group'. if subsription (and below) level - 'resource'",
                              "type": "string"
                            },
                            "roleType": {
                              "description": "(Google Cloud policies only) Supported values: Predefined = 0, Custom = 1, Basic = 2",
                              "type": "string"
                            },
                            "rolePackage": {
                              "description": "(Google Cloud policies only) The Google Cloud package associated with the role.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "faultCode": {
                        "type": "number",
                        "description": "If there is an error when a policy is created, edited, or deleted, the faultCode number indicates the reason for the failure. "
                      },
                      "statusTooltipMessage": {
                        "type": "string",
                        "description": "If there is an error related to a policy, this field returns the error message that correlates with the faultCode."
                      },
                      "exposure": {
                        "type": "integer",
                        "description": "The calculated policy exposure, as a percentage."
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "example-1": {
                "value": {
                  "total": 1,
                  "hits": [
                    {
                      "tenantId": "e51a10e2-3666-4496-a459-233a917ea2c7",
                      "name": "policy for dev ops group",
                      "status": 1,
                      "description": "",
                      "creationDate": "2022-06-21T14:50:04.579024+00:00",
                      "lastChanged": "2022-06-21T14:50:04.579024+00:00",
                      "cloudProvider": 0,
                      "policyId": "aws_7eb10249-e792-4a50-b5d5-12e39c1433fa",
                      "targetAttributes": [],
                      "startDate": "string",
                      "expirationDate": "string",
                      "accessRules": {
                        "days": [0, 1, 2, 3, 4, 5, 6],
                        "fromTime": "string",
                        "toTime": "string",
                        "maxSessionDuration": 1,
                        "timeZone": "Asia/Jerusalem"
                      },
                      "entities": [
                        {
                          "entityId": "47d66b2b-8117-42f1-bee5-ad7bfe21bc15",
                          "entityName": "John.S@company.com",
                          "entityType": 1,
                          "entitySourceId": "09B9A9B0-6CE8-465F-AB03-65766D33B05E",
                          "entitySourceName": "CyberArk Cloud Directory",
                          "entityDisplayName": "John Smith",
                          "entityClass": "user",
                          "entityEmail": "string"
                        },
                        {
                          "entityId": "arn:aws:iam::123456789123:role/sca-dynamo-role",
                          "entityName": "sca-dynamo-role",
                          "entityType": 0,
                          "entitySourceId": "123456789123",
                          "entitySourceName": "SCA Dev2",
                          "exposureLevel": 43,
                          "organizationId": "string",
                          "workspaceType": "string",
                          "roleType": "string",
                          "rolePackage": "string"
                        }
                      ],
                      "exposure": 100,
                      "faultCode": 1001,
                      "statusTooltipMessage": "string"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "Rescan": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "example-1": {
                  "jobId": "e51a10e2-3666-4496-a459-233a917ea2c7",
                  "operation": "Rescan"
                }
              },
              "properties": {
                "jobId": {
                  "type": "string",
                  "description": "The unique ID of the rescan process.\t"
                },
                "operation": {
                  "type": "string",
                  "description": "Rescan operation.\t"
                }
              }
            },
            "examples": {
              "example-1": {
                "value": {
                  "jobId": "e51a10e2-3666-4496-a459-233a917ea2c7",
                  "operation": "Rescan"
                }
              }
            }
          },
          "application/xml": {
            "schema": {
              "type": "object",
              "properties": {
                "jobId": {
                  "type": "string"
                },
                "operation": {
                  "type": "string"
                }
              },
              "x-examples": {
                "example-1": {
                  "jobId": "e51a10e2-3666-4496-a459-233a917ea2c7",
                  "operation": "Rescan"
                }
              }
            },
            "examples": {
              "example-1": {
                "value": {
                  "jobId": "e51a10e2-3666-4496-a459-233a917ea2c7",
                  "operation": "Rescan"
                }
              }
            }
          }
        }
      },
      "Discovery": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "example-1": {
                  "jobId": "e51a10e2-3666-4496-a459-233a917ea2c7",
                  "status": 200
                }
              },
              "properties": {
                "jobId": {
                  "type": "string",
                  "description": "The unique ID of the rescan process.\t"
                },
                "status": {
                  "type": "integer",
                  "description": "Response status"
                }
              }
            }
          },
          "application/xml": {
            "schema": {
              "type": "object",
              "properties": {
                "jobId": {
                  "type": "string"
                },
                "operation": {
                  "type": "string"
                }
              },
              "x-examples": {
                "example-1": {
                  "jobId": "e51a10e2-3666-4496-a459-233a917ea2c7",
                  "operation": "Rescan"
                }
              }
            },
            "examples": {
              "example-1": {
                "value": {
                  "jobId": "e51a10e2-3666-4496-a459-233a917ea2c7",
                  "operation": "Rescan"
                }
              }
            }
          }
        }
      },
      "JobStatus": {
        "description": "Job Status",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "example-1": {
                  "job_id": "e369baf0-1b24-11ee-be56-0242ac120002",
                  "operation": "RESCAN",
                  "status": "Success",
                  "last_updated": "2011-10-05T14:48:00.000Z",
                  "already_running": false,
                  "total_executed": {
                    "current": 100,
                    "total": 100
                  }
                }
              },
              "properties": {
                "job_id": {
                  "type": "string",
                  "description": "The unique ID of the job"
                },
                "operation": {
                  "type": "string",
                  "description": "The job type"
                },
                "status": {
                  "type": "string",
                  "description": "The status of the job.\n  \nSupported values:\n\nInProgress,Success,Failure"
                },
                "last_updated": {
                  "type": "string",
                  "description": "The date and time when the job was last changed, in ISO format."
                },
                "already_running": {
                  "type": "boolean",
                  "description": "Flag that represents if the job is running"
                },
                "total_executed": {
                  "type": "object",
                  "description": "Stats for the jobs",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total count"
                    },
                    "current": {
                      "type": "integer",
                      "description": "Current count"
                    }
                  }
                }
              }
            },
            "examples": {
              "example-1": {
                "value": {
                  "job_id": "e369baf0-1b24-11ee-be56-0242ac120002",
                  "operation": "RESCAN",
                  "status": "Success",
                  "last_updated": "2011-10-05T14:48:00.000Z",
                  "already_running": false,
                  "total_executed": {
                    "current": 100,
                    "total": 100
                  }
                }
              }
            }
          },
          "application/xml": {
            "schema": {
              "type": "object",
              "properties": {
                "job_id": {
                  "type": "string"
                },
                "operation": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "last_updated": {
                  "type": "string"
                },
                "already_running": {
                  "type": "string"
                },
                "lastChanged": {
                  "type": "string"
                },
                "total_executed": {
                  "type": "object",
                  "properties": {
                    "current": {
                      "type": "integer"
                    },
                    "total": {
                      "type": "integer"
                    }
                  }
                }
              },
              "x-examples": {
                "example-1": {
                  "tenantId": "e51a10e2-3666-4496-a459-233a917ea2c7",
                  "name": "policy for dev ops group",
                  "status": 1,
                  "description": "",
                  "creationDate": "2022-06-21T14:50:04.579024+00:00",
                  "lastChanged": "2022-06-21T14:50:04.579024+00:00",
                  "cloudProvider": 0,
                  "policyId": "aws_7eb10249-e792-4a50-b5d5-12e39c1433fa",
                  "targetAttributes": [],
                  "startDate": "string",
                  "expirationDate": "string",
                  "accessRules": {
                    "days": [0, 1, 2, 3, 4, 5, 6],
                    "fromTime": "string",
                    "toTime": "string",
                    "maxSessionDuration": 1,
                    "timeZone": "Asia/Jerusalem"
                  },
                  "entities": [
                    {
                      "entityId": "47d66b2b-8117-42f1-bee5-ad7bfe21bc15",
                      "entityName": "John.S@company.com",
                      "entityType": 1,
                      "entitySourceId": "09B9A9B0-6CE8-465F-AB03-65766D33B05E",
                      "entitySourceName": "CyberArk Cloud Directory",
                      "entityDisplayName": "John Smith",
                      "entityClass": "user",
                      "entityEmail": "string"
                    },
                    {
                      "entityId": "arn:aws:iam::123456789123:role/sca-dynamo-role",
                      "entityName": "sca-dynamo-role",
                      "entityType": 0,
                      "entitySourceId": "123456789123",
                      "entitySourceName": "SCA Dev2",
                      "exposureLevel": 43,
                      "organizationId": "string",
                      "workspaceType": "string",
                      "roleType": "string",
                      "rolePackage": "string"
                    }
                  ],
                  "exposure": 100,
                  "faultCode": "number",
                  "statusTooltipMessage": "string"
                }
              }
            },
            "examples": {
              "example-1": {
                "value": {
                  "job_id": "e369baf0-1b24-11ee-be56-0242ac120002",
                  "operation": "RESCAN",
                  "status": "Success",
                  "last_updated": "2011-10-05T14:48:00.000Z",
                  "already_running": false,
                  "total_executed": {
                    "current": 100,
                    "total": 100
                  }
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "status": {
        "name": "status",
        "in": "query",
        "required": false,
        "schema": {
          "type": "number",
          "enum": [1, 3, 4, 5, 6]
        },
        "description": "Filter on policies that have a specific status. Supported values: Active = 1, Expired = 3, Error = 4, Warning = 5, Validating = 6"
      },
      "free_text": {
        "name": "free_text",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Search for free text in the supported policy fields:  Name, description, entity name, Organization ID,  cloud provider, status, account name"
      },
      "cloud_provider": {
        "name": "cloud_provider",
        "in": "query",
        "required": false,
        "schema": {
          "type": "number",
          "enum": [1, 2, 3, 0]
        },
        "description": "Filter by the cloud provider that the policy applies to. Supported values: AWS IAM = 0, Google Cloud = 1, Azure RBAC = 2, AWS IAM Identity Center = 3, Azure AD = 4"
      },
      "entity_ids": {
        "name": "entityIds",
        "in": "query",
        "required": false,
        "schema": {
          "type": "object",
          "properties": {
            "org_id": {
              "type": "string"
            },
            "account_id": {
              "type": "string"
            }
          }
        },
        "description": "Cloud account id"
      },
      "identities": {
        "name": "identities",
        "in": "query",
        "required": true,
        "schema": {
          "type": "object",
          "properties": {
            "user_principal_name": {
              "type": "string"
            },
            "directory_source_id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          }
        },
        "description": "Cloud account id"
      },
      "roles": {
        "name": "roles",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string",
          "properties": {
            "role_id": {
              "type": "string"
            }
          }
        },
        "description": "Cloud account id"
      }
    },
    "requestBodies": {
      "Send-Notification": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "example-1": {
                  "event_type": "flow_sent",
                  "recipients": "example@email.com",
                  "notification_initiator": "Flow",
                  "message": "messgae to send"
                }
              },
              "properties": {
                "event_type": {
                  "type": "string",
                  "description": "event type."
                },
                "recipients": {
                  "type": "string",
                  "description": "to how."
                },
                "notification_initiator": {
                  "type": "string",
                  "description": "what service is requesting to send the notification."
                },
                "message": {
                  "type": "string",
                  "description": "message to send."
                },
                "metadata": {
                  "type": "object",
                  "description": "metadata to send."
                }
              }
            },
            "examples": {
              "example-1": {
                "value": {
                  "event_type": "flow_sent",
                  "recipients": "example@email.com",
                  "notification_initiator": "Flow",
                  "message": "messgae to send",
                  "metadata": {
                    "subject": "notification subject"
                  }
                }
              }
            }
          }
        }
      },
      "Create-Policy": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "example-1": {
                  "name": "finance",
                  "description": "end of year calculations",
                  "startDate": "2022-07-12T00:00:00.000Z",
                  "expirationDate": "2022-10-10T00:00:00.000Z",
                  "cloudProvider": 0,
                  "entities": [
                    {
                      "entityId": "b08b7339-1830-439c-8b96-e5779a3fe30b",
                      "entityName": "John.D@cyberark.cloud.8627",
                      "entityDisplayName": "John.Doe",
                      "entityType": 1,
                      "entitySourceId": "09B9A9B0-6CE8-465F-AB03-65766D33B05E",
                      "entitySourceName": "CyberArk Cloud Directory",
                      "entityClass": "user"
                    },
                    {
                      "entityId": "arn:aws:iam::99999999999:role/ExampleRole",
                      "entityName": "ExampleRole",
                      "entityDisplayName": "ExampleRole",
                      "entityType": 0,
                      "entitySourceId": "99999999999",
                      "exposureLevel": "39",
                      "entitySourceName": "99999999999"
                    }
                  ],
                  "targetAttributes": [
                    {
                      "name": "env",
                      "value": "prod",
                      "isCustom": true
                    }
                  ],
                  "accessRules": {
                    "days": [0, 1, 2, 3],
                    "fromTime": "08:00",
                    "toTime": "17:00",
                    "maxSessionDuration": 2,
                    "timeZone": "Asia/Jerusalem"
                  }
                }
              },
              "description": "The name of the policy.",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the policy",
                  "maxLength": 30
                },
                "description": {
                  "type": "string",
                  "description": "The description of the policy.",
                  "maxLength": 200
                },
                "startDate": {
                  "type": "string",
                  "description": "(Optional) The date and time when the policy becomes active, in ISO format."
                },
                "expirationDate": {
                  "type": "string",
                  "description": "(Optional) The date and time when the policy expires, in ISO format."
                },
                "cloudProvider": {
                  "type": "integer",
                  "description": "The cloud environment that the policy applies to.\n \nSupported values:\nAWS IAM = 0, Google Cloud = 1, Azure RBAC = 2, AWS IAM Identity Center = 3, Azure AD = 4"
                },
                "entities": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Specify at least one CyberArk Identity cloud entity and one cloud role entity (minimum two entities in total).",
                    "properties": {
                      "entityId": {
                        "type": "string",
                        "description": "CyberArk Identity: Internal UUID of the cloud entity.\n\nAWS: The role ARN (for example,  arn:aws:iam::123456789123:role/devOps).\n\nGoogle Cloud: The role name and hierarchy structure (for example, projects/cybrsca-dev/roles/CustomRole)."
                      },
                      "entityName": {
                        "type": "string",
                        "description": "CyberArk Identity: Fully qualified name of the cloud entity.\n\nCloud provider: The cloud role name ('devOps' or 'CustomRole')."
                      },
                      "entityDisplayName": {
                        "type": "string",
                        "description": "CyberArk Identity: The display name of the cloud entity (user, role or group).\n\nCloud provider: N/A"
                      },
                      "entityType": {
                        "type": "integer",
                        "description": "CyberArk Identity (cloud entity): Value = 1 \n\nCloud provider (cloud role): Value = 0 "
                      },
                      "entitySourceId": {
                        "type": "string",
                        "description": "CyberArk Identity: ?\n\nAWS: The account ID associated with the role (for example, 123456789123).\n\nGoogle Cloud: The name of the organization, folder, or project depending on the workspaceType (for example, cybrsca-dev)."
                      },
                      "entitySourceName": {
                        "type": "string",
                        "description": "CyberArk Identity: The source of the cloud entity. Supported values: 'CyberArk Cloud Directory' or 'Federated Directory Service' \n\nCloud provider: N/A"
                      },
                      "entityClass": {
                        "type": "string",
                        "description": "CyberArk Identity: Supported values: 'user', 'role', and 'group'\n\nCloud provider: N/A"
                      },
                      "organizationId": {
                        "type": "string",
                        "description": "(Google Cloud policies only) The Google Cloud organization ID."
                      },
                      "workspaceType": {
                        "type": "string",
                        "description": "(Google Cloud policies only) Supported values: 'organization', 'folder', and 'project'"
                      },
                      "roleType": {
                        "type": "string",
                        "description": "(Google Cloud policies only) Supported values: Predefined = 0, Custom = 1, Basic = 2"
                      },
                      "rolePackage": {
                        "type": "string",
                        "description": "(Google Cloud policies only) The Google Cloud package associated with the role.\t"
                      }
                    }
                  }
                },
                "targetAttributes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Key-value pairs that specify the AWS assets to which the policy applies.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the tag. For example, 'color'."
                      },
                      "value": {
                        "type": "string",
                        "description": "The value of the tag. For example, 'blue'."
                      },
                      "isCustom": {
                        "type": "boolean",
                        "description": "true"
                      }
                    }
                  }
                },
                "accessRules": {
                  "type": "object",
                  "description": "Set of rules that specify exactly when the policy is active.",
                  "properties": {
                    "days": {
                      "type": "array",
                      "description": "Days of the week as a number range from 0-6, where Sunday=0 ... Saturday=6. ",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "fromTime": {
                      "type": "string",
                      "description": "(Optional) Time of day when the policy becomes active."
                    },
                    "toTime": {
                      "type": "string",
                      "description": "(Optional) Time of day when the policy becomes inactive."
                    },
                    "maxSessionDuration": {
                      "type": "integer",
                      "description": "\t\nMaximum allowed length, in hours, of the user session. "
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "A time-zone qualified string representing the time zone of the client host machine."
                    }
                  }
                }
              }
            },
            "examples": {
              "example-1": {
                "value": {
                  "name": "finance",
                  "description": "end of year calculations",
                  "startDate": "2022-07-12T00:00:00.000Z",
                  "expirationDate": "2022-10-10T00:00:00.000Z",
                  "cloudProvider": 0,
                  "entities": [
                    {
                      "entityId": "b08b7339-1830-439c-8b96-e5779a3fe30b",
                      "entityName": "John.D@cyberark.cloud.8627",
                      "entityDisplayName": "John.Doe",
                      "entityType": 1,
                      "entitySourceId": "09B9A9B0-6CE8-465F-AB03-65766D33B05E",
                      "entitySourceName": "CyberArk Cloud Directory",
                      "entityClass": "user"
                    },
                    {
                      "entityId": "arn:aws:iam::99999999999:role/ExampleRole",
                      "entityName": "ExampleRole",
                      "entityDisplayName": "ExampleRole",
                      "entityType": 0,
                      "entitySourceId": "99999999999",
                      "exposureLevel": "39",
                      "entitySourceName": "99999999999"
                    }
                  ],
                  "targetAttributes": [
                    {
                      "name": "env",
                      "value": "prod",
                      "isCustom": true
                    }
                  ],
                  "accessRules": {
                    "days": [0, 1, 2, 3],
                    "fromTime": "08:00",
                    "toTime": "17:00",
                    "maxSessionDuration": 2,
                    "timeZone": "Asia/Jerusalem"
                  }
                }
              }
            }
          }
        },
        "description": ""
      },
      "Create-Policy-V2": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "example-1": {
                  "csp": "aws",
                  "name": "finance",
                  "description": "end of year calculations",
                  "startDate": "2022-07-12T00:00:00.000Z",
                  "endDate": "2022-10-10T00:00:00.000Z",
                  "policy_type": "pre_defined",
                  "roles": [
                    {
                      "entityId": "arn:aws:iam::364358839657:role/CEMAdmin",
                      "workspaceType": null,
                      "entitySourceId": "364358839657",
                      "organization_id": null
                    }
                  ],
                  "identities": [
                    {
                      "entityName": "John.D",
                      "entitySourceId": "09B9A9B0-6CE8-465F-AB03-65766D33B05E",
                      "entityClass": "user"
                    }
                  ],
                  "accessRules": {
                    "days": [
                      "Sunday",
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday",
                      "Saturday"
                    ],
                    "fromTime": null,
                    "toTime": null,
                    "maxSessionDuration": 1,
                    "timeZone": "Asia/Jerusalem"
                  }
                }
              },
              "description": "The name of the policy.",
              "properties": {
                "csp": {
                  "type": "string",
                  "description": "the name of the cloud provider ('AWS','GCP','AZURE')"
                },
                "name": {
                  "type": "string",
                  "description": "the name the policy",
                  "maxLength": 30
                },
                "description": {
                  "type": "string",
                  "description": "The description of the policy.",
                  "maxLength": 200
                },
                "startDate": {
                  "type": "string",
                  "description": "(Optional) The date and time when the policy becomes active, in ISO format."
                },
                "endDate": {
                  "type": "string",
                  "description": "(Optional) The date and time when the policy expires, in ISO format."
                },
                "policyType": {
                  "type": "string",
                  "description": "a value within ('pre_defined','on_demand') to describe the policy type"
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Specify at least one cloud role entity",
                    "properties": {
                      "entityId": {
                        "type": "string",
                        "description": "AWS: The role ARN (for example,  arn:aws:iam::123456789123:role/devOps).\n\nGoogle Cloud: The role name and hierarchy structure (for example, projects/cybrsca-dev/roles/CustomRole)."
                      },
                      "workspaceType": {
                        "type": "string",
                        "description": "(Google Cloud policies only) Supported values: 'organization', 'folder', and 'project'"
                      },
                      "entitySourceId": {
                        "type": "string",
                        "description": "CyberArk Identity: ?\n\nAWS: The account ID associated with the role (for example, 123456789123).\n\nGoogle Cloud: The name of the organization, folder, or project depending on the workspaceType (for example, cybrsca-dev)."
                      },
                      "organizationId": {
                        "type": "string",
                        "description": "(Google Cloud policies only) The Google Cloud organization ID."
                      }
                    }
                  }
                },
                "identities": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Specify at least one CyberArk Identity cloud entity",
                    "properties": {
                      "entityName": {
                        "type": "string",
                        "description": "CyberArk Identity: Fully qualified name of the cloud entity."
                      },
                      "entitySourceId": {
                        "type": "string",
                        "description": "CyberArk Identity: ?\n\nAWS: The account ID associated with the role (for example, 123456789123).\n\nGoogle Cloud: The name of the organization, folder, or project depending on the workspaceType (for example, cybrsca-dev)."
                      },
                      "entityClass": {
                        "type": "string",
                        "description": "CyberArk Identity: Supported values: 'user', 'role', and 'group'\n\nCloud provider: N/A"
                      }
                    }
                  }
                },
                "accessRules": {
                  "type": "object",
                  "description": "Set of rules that specify exactly when the policy is active.",
                  "properties": {
                    "days": {
                      "type": "array",
                      "description": "Days of the week as a string: Sunday .. Saturday",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "fromTime": {
                      "type": "string",
                      "description": "(Optional) Time of day when the policy becomes active."
                    },
                    "toTime": {
                      "type": "string",
                      "description": "(Optional) Time of day when the policy becomes inactive."
                    },
                    "maxSessionDuration": {
                      "type": "integer",
                      "description": "\t\nMaximum allowed length, in hours, of the user session. "
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "A time-zone qualified string representing the time zone of the client host machine."
                    }
                  }
                }
              }
            },
            "examples": {
              "example-1": {
                "value": {
                  "csp": "aws",
                  "name": "finance",
                  "description": "end of year calculations",
                  "startDate": "2022-07-12T00:00:00.000Z",
                  "endDate": "2022-10-10T00:00:00.000Z",
                  "policy_type": "pre_defined",
                  "roles": [
                    {
                      "entityId": "arn:aws:iam::364358839657:role/CEMAdmin",
                      "workspaceType": null,
                      "entitySourceId": "364358839657",
                      "organization_id": null
                    }
                  ],
                  "identities": [
                    {
                      "entityName": "John.D",
                      "entitySourceId": "09B9A9B0-6CE8-465F-AB03-65766D33B05E",
                      "entityClass": "user"
                    }
                  ],
                  "accessRules": {
                    "days": [
                      "Sunday",
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday",
                      "Saturday"
                    ],
                    "fromTime": null,
                    "toTime": null,
                    "maxSessionDuration": 1,
                    "timeZone": "Asia/Jerusalem"
                  }
                }
              }
            }
          }
        },
        "description": ""
      },
      "Rescan": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "example-1": {
                  "cloudProvider": 0,
                  "accountType": "All"
                },
                "example-2": {
                  "cloudProvider": 1,
                  "accountType": "Specific",
                  "entityIds": [
                    {
                      "org_id": "1234",
                      "account_id": "5678"
                    }
                  ]
                },
                "example-3": {
                  "cloudProvider": 2
                }
              },
              "properties": {
                "cloudProvider": {
                  "type": "integer",
                  "description": "The cloud environment that the rescan applies to.\n \nSupported values:\nAWS IAM = 0, Google Cloud = 1, Azure = 2"
                },
                "accountType": {
                  "type": "string",
                  "description": "(Optional) Type of the rescan:\n \n if accountType is 'All' or not provided - the rescan will activate on all cloud accounts. \n \n if accountType is 'Specific' - the rescan will activate on a specific accounts."
                },
                "entityIds": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/parameters/entity_ids"
                  },
                  "description": "(Optional) Accounts list that the rescan activate on.\n \n this property relevant when accountType is 'Specific'."
                }
              }
            },
            "examples": {
              "example-1": {
                "value": {
                  "cloudProvider": 0,
                  "accountType": "All"
                }
              },
              "example-2": {
                "value": {
                  "cloudProvider": 1,
                  "accountType": "Specific",
                  "entityIds": [
                    {
                      "org_id": "1234",
                      "account_id": "5678"
                    }
                  ]
                }
              },
              "example-3": {
                "value": {
                  "cloudProvider": 2
                }
              }
            }
          }
        },
        "description": ""
      },
      "Discovery": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "example-1": {
                  "csp": "aws",
                  "organization_id": "08cddef4-460b-40e0-932d-8376d5d12978",
                  "account_info": {
                    "id": "c3097910-8e9c-409f-a30f-d40618c9b73e",
                    "new_account": true
                  }
                }
              },
              "properties": {
                "csp": {
                  "type": "string",
                  "description": "The cloud environment that the rescan applies to.\n \nSupported values:\n'aws','gcp','azure'"
                },
                "organization_id": {
                  "type": "string",
                  "description": "Organization identifier"
                },
                "account_info": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Workspace id"
                    },
                    "new_account": {
                      "type": "boolean",
                      "description": "Indication if it's a new or existing account"
                    }
                  }
                }
              }
            }
          }
        },
        "description": ""
      }
    }
  },
  "paths": {
    "/policies": {
      "post": {
        "tags": ["Operations"],
        "summary": "Create Policy",
        "security": [
          {
            "bearerOAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "operationId": "CreatePolicy",
        "requestBody": {
          "$ref": "#/components/requestBodies/Create-Policy"
        },
        "description": "This method creates a new policy in SCA"
      },
      "get": {
        "tags": ["Operations"],
        "summary": "Query Policies",
        "security": [
          {
            "bearerOAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/status"
          },
          {
            "$ref": "#/components/parameters/free_text"
          },
          {
            "$ref": "#/components/parameters/cloud_provider"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/List-Of-Policies"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "operationId": "QueryPolicies",
        "description": "\t\nReturns a list of policies that match the requested filters"
      },
      "parameters": []
    },
    "/policies/create-policy": {
      "post": {
        "tags": ["Operations"],
        "summary": "Create Policy V2",
        "security": [
          {
            "bearerOAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "operationId": "CreatePolicyV2",
        "requestBody": {
          "$ref": "#/components/requestBodies/Create-Policy-V2"
        },
        "description": "This method creates a new policy in SCA"
      }
    },
    "/policies/{policy_id}/status": {
      "get": {
        "tags": ["Operations"],
        "summary": "Get Policy Status",
        "security": [
          {
            "bearerOAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "description": "The status of the policy.\n Supported values: \nActive = 1, Expired = 3, Error = 4, Warning = 5, Validating = 6"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "description": " Returns the status of the policy",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "policy_id",
            "description": "The ID of the requested policy"
          }
        ],
        "operationId": "GetStatus"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "policy_id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/policies/{policy_id}": {
      "get": {
        "tags": ["Operations"],
        "summary": "Get Policy",
        "security": [
          {
            "bearerOAuth": []
          }
        ],
        "description": "This method returns information about a specific policy",
        "responses": {
          "200": {
            "$ref": "#/components/responses/Policy-Response"
          }
        },
        "operationId": "GetPolicy"
      },
      "delete": {
        "tags": ["Operations"],
        "summary": "Remove Policy",
        "security": [
          {
            "bearerOAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "text/html": {}
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "operationId": "RemovePolicy",
        "description": "This method moves the policy to archive mode"
      },
      "put": {
        "tags": ["Operations"],
        "summary": "Edit Policy",
        "security": [
          {
            "bearerOAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "text/plain": {}
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/Create-Policy"
        },
        "operationId": "EditPolicy",
        "description": "This method updates an existing policy in SCA"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "policy_id",
          "in": "path",
          "required": true,
          "description": "Policy id"
        }
      ]
    },
    "/oauth2/token/{webapp}": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Generate Public API Token",
        "operationId": "GeneratePublicAPIToken",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string"
                    },
                    "token_type": {
                      "type": "string"
                    },
                    "expires_in": {
                      "type": "integer"
                    },
                    "scope": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "access_token": "***ACCESS TOKEN HERE***",
                      "token_type": "Bearer",
                      "expires_in": 900,
                      "scope": "full"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "access_token": "***ACCESS TOKEN HERE***",
                      "token_type": "Bearer",
                      "expires_in": 900,
                      "scope": "full"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {}
              },
              "examples": {
                "example-1": {
                  "value": "grant_type=client_credentials&scope=full"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserPassBasicAuth": []
          }
        ],
        "description": "Generate Public API Token"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "webapp",
          "in": "path",
          "required": true
        }
      ]
    },
    "/notification": {
      "post": {
        "tags": ["Operations"],
        "summary": "Send Notification",
        "security": [
          {
            "bearerOAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "operationId": "Notifications",
        "requestBody": {
          "$ref": "#/components/requestBodies/Send-Notification"
        },
        "description": "This method send notification to SCA"
      }
    },
    "/cloud/rescan": {
      "post": {
        "tags": ["Operations"],
        "summary": "Rescan",
        "security": [
          {
            "bearerOAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Rescan"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "operationId": "Rescan",
        "requestBody": {
          "$ref": "#/components/requestBodies/Rescan"
        },
        "description": "This method start rescan on the cloud"
      }
    },
    "/policies/onboarding": {
      "post": {
        "tags": ["Operations"],
        "summary": "Discovery",
        "security": [
          {
            "bearerOAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Discovery"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "operationId": "Discovery",
        "requestBody": {
          "$ref": "#/components/requestBodies/Discovery"
        },
        "description": "Onboarding a new or exiting cloud account"
      }
    },
    "/integrations/status": {
      "get": {
        "tags": ["Operations"],
        "summary": "Get Job Status",
        "security": [
          {
            "bearerOAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "$ref": "#/components/responses/JobStatus"
          },
          "400": {
            "description": "Missing jobId parameter"
          },
          "404": {
            "description": "Job Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "operationId": "getJobStatus",
        "description": "Returns the status of the job",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "jobId",
            "description": "The ID of the requested job"
          }
        ]
      }
    }
  }
}
